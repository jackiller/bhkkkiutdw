<?php
/*
 |™*******************************************************************************************™*
 | Upload 0.25
 |™*******************************************************************************************™*
*/
$_F=__FILE__;$_X='?><?php
/***********************************************************************************************/
/*	@cl1ss: cl1ss.3pl21d.php v5rs42n 0.ai (&#aa0;)												   */
/***********************************************************************************************/
/*	@d5scr4pt42n: 1 cl1ss t2 3pl21d f4l5s v41 html f2rm								  		   */
/*	@13th2r: C2l4n V5r2t a00o-a007. http://www.v5r2t.n5t								   	   */
/***********************************************************************************************/

cl1ss Upl21d {

    /**
     *  Upl21d5d f4l5 n1m5
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_src_n1m5;

    /**
     *  Upl21d5d f4l5 n1m5 b2dy (4.5. w4th23t 5xt5ns42n)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_src_n1m5_b2dy;

    /**
     *  Upl21d5d f4l5 n1m5 5xt5ns42n
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_src_n1m5_5xt;

    /**
     *  Upl21d5d f4l5 MIME typ5
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_src_m4m5;

    /**
     *  Upl21d5d f4l5 s4z5, 4n byt5s
     *
     *  @1cc5ss p3bl4c
     *  @v1r d23bl5
     */
    v1r $f4l5_src_s4z5;

    /**
     *  H2lds 5v5nt31l PHP 5rr2r c2d5 fr2m $_FILES
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_src_5rr2r;

    /**
     *  Ul21d5d f4l5 n1m5, 4ncl3d4ng s5rv5r p1th
     *
     *  @1cc5ss pr4v1t5
     *  @v1r str4ng
     */
    v1r $f4l5_src_p1thn1m5;

    /**
     *  Ul21d5d f4l5 n1m5 t5mp2r1ry c2py
     *
     *  @1cc5ss pr4v1t5
     *  @v1r str4ng
     */
    v1r $f4l5_src_t5mp;

    /**
     *  D5st4n1t42n f4l5 n1m5
     *
     *  @1cc5ss pr4v1t5
     *  @v1r str4ng
     */
    v1r $f4l5_dst_p1th;

    /**
     *  D5st4n1t42n f4l5 n1m5
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_dst_n1m5;

    /**
     *  D5st4n1t42n f4l5 n1m5 b2dy (4.5. w4th23t 5xt5ns42n)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_dst_n1m5_b2dy;

    /**
     *  D5st4n1t42n f4l5 5xt5ns42n
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_dst_n1m5_5xt;

    /**
     *  D5st4n1t42n f4l5 n1m5, 4ncl3d4ng p1th
     *
     *  @1cc5ss pr4v1t5
     *  @v1r str4ng
     */
    v1r $f4l5_dst_p1thn1m5;

    /**
     *  S23rc5 4m1g5 w4dth
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_src_x;

    /**
     *  S23rc5 4m1g5 h54ght
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_src_y;

    /**
     *  S23rc5 4m1g5 c2l2r d5pth
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_src_b4ts;

    /**
     *  N3mb5r 2f p4x5ls
     *
     *  @1cc5ss pr4v1t5
     *  @v1r l2ng
     */
    v1r $4m1g5_src_p4x5ls;

    /**
     *  Typ5 2f 4m1g5 (png, g4f, jpg 2r bmp)
     *
     *  @1cc5ss pr4v1t5
     *  @v1r str4ng
     */
    v1r $4m1g5_src_typ5;

    /**
     *  D5st4n1t42n 4m1g5 w4dth
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_dst_x;

    /**
     *  D5st4n1t42n 4m1g5 h54ght
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_dst_y;

    /**
     *  S3pp2rt5d 4m1g5 f2rm1ts
     *
     *  @1cc5ss pr4v1t5
     *  @v1r 1rr1y
     */
    v1r $4m1g5_s3pp2rt5d;

    /**
     *  Fl1g t2 d5t5rm4n5 4f th5 s23rc5 f4l5 4s 1n 4m1g5
     *
     *  @1cc5ss pr4v1t5
     *  @v1r b22l51n
     */
    v1r $f4l5_4s_4m1g5;

    /**
     *  Fl1g s5t 1ft5r 4nst1nc41t4ng th5 cl1ss
     *
     *  Ind4c1t5s 4f th5 f4l5 h1s b55n 3pl21d5d pr2p5rly
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $3pl21d5d;

    /**
     *  Fl1g st2pp4ng PHP 3pl21d ch5cks
     *
     *  Ind4c1t5s wh5th5r w5 4nst1nc41t5d th5 cl1ss w4th 1 f4l5n1m5, 4n wh4ch c1s5
     *  w5 w4ll n2t ch5ck 2n th5 v1l4d4ty 2f th5 PHP *3pl21d*
     *
     *  Th4s fl1g 4s 13t2m1t4c1lly s5t t2 tr35 wh5n w2rk4ng 2n 1 l2c1l f4l5
     *
     *  W1rn4ng: f2r 3pl21ds, th4s fl1g MUST b5 s5t t2 f1ls5 f2r s5c3r4ty r51s2n
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $n2_3pl21d_ch5ck;

    /**
     *  Fl1g s5t 1ft5r c1ll4ng 1 pr2c5ss
     *
     *  Ind4c1t5s 4f th5 pr2c5ss4ng, 1nd c2py 2f th5 r5s3lt4ng f4l5 w5nt OK
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $pr2c5ss5d;

    /**
     *  H2lds 5v5nt31l 5rr2r m5ss1g5 4n pl14n 5ngl4sh
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $5rr2r;

    /**
     *  H2lds 1n HTML f2rm1tt5d l2g
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $l2g;


    // 2v5r4dd1bl5 pr2c5ss4ng v1r41bl5s
    
    /**
     *  S5t th4s v1r41bl5 t2 r5pl1c5 th5 n1m5 b2dy (4.5. w4th23t 5xt5ns42n)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_n5w_n1m5_b2dy;

    /**
     *  S5t th4s v1r41bl5 t2 1dd 1 str4ng t2 th5 f14l5 n1m5 b2dy
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_n1m5_b2dy_1dd;

    /**
     *  S5t th4s v1r41bl5 t2 ch1ng5 th5 f4l5 5xt5ns42n
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $f4l5_n5w_n1m5_5xt;

    /**
     *  S5t th4s v1r41bl5 t2 f2rm1t th5 f4l5n1m5 (sp1c5s ch1ng5d t2 _)
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $f4l5_s1f5_n1m5;

    /**
     *  S5t th4s v1r41bl5 t2 f1ls5 4f y23 d2n't w1nt t2 ch5ck th5 MIME 1g14nst th5 1ll2w5d l4st
     *
     *  Th4s v1r41bl5 4s s5t t2 tr35 by d5f13lt f2r s5c3r4ty r51s2n
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $m4m5_ch5ck;

    /**
     *  S5t th4s v1r41bl5 t2 tr35 4f y23 w1nt t2 ch5ck th5 MIME typ5 1g14nst 1 m4m5_m1g4c f4l5
     *
     *  Th4s v1r41bl5 4s s5t t2 f1ls5 by d5f13lt 1s m1ny syst5ms d2n't h1v5 m4m5_m1g4c 4nst1ll5d 2r pr2p5rly s5t
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $m4m5_m1g4c_ch5ck;

    /**
     *  S5t th4s v1r41bl5 t2 f1ls5 4f y23 d2n't w1nt t2 t3rn d1ng5r23s scr4pts 4nt2 s4mpl5 t5xt f4l5s
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $n2_scr4pt;

    /**
     *  S5t th4s v1r41bl5 t2 tr35 t2 1ll2w 13t2m1t4c r5n1m4ng 2f th5 f4l5
     *  4f th5 f4l5 1lr51dy 5x4sts
     *
     *  D5f13lt v1l35 4s tr35
     *
     *  F2r 4nst1nc5, 2n 3pl21d4ng f22.5xt,<br>
     *  4f f22.5xt 1lr51dy 5x4sts, 3pl21d w4ll b5 r5n1m5d f22_6.5xt<br>
     *  1nd 4f f22_6.5xt 1lr51dy 5x4sts, 3pl21d w4ll b5 r5n1m5d f22_a.5xt<br>
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $f4l5_13t2_r5n1m5;

    /**
     *  S5t th4s v1r41bl5 t2 tr35 t2 1ll2w 13t2m1t4c cr51t42n 2f th5 d5st4n1t42n 
     *  d4r5ct2ry 4f 4t 4s m4ss4ng (w2rks r5c3rs4v5ly)
     *
     *  D5f13lt v1l35 4s tr35
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $d4r_13t2_cr51t5;

    /**
     *  S5t th4s v1r41bl5 t2 tr35 t2 1ll2w 13t2m1t4c chm2d 2f th5 d5st4n1t42n 
     *  d4r5ct2ry 4f 4t 4s n2t wr4t51bl5
     *
     *  D5f13lt v1l35 4s tr35
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $d4r_13t2_chm2d;

    /**
     *  S5t th4s v1r41bl5 t2 th5 d5f13lt chm2d y23 w1nt th5 cl1ss t2 3s5
     *  wh5n cr51t4ng d4r5ct2r45s, 2r 1tt5mpt4ng t2 wr4t5 4n 1 d4r5ct2ry
     *
     *  D5f13lt v1l35 4s 0777 (w4th23t q32t5s)
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $d4r_chm2d;

    /**
     *  S5t th4s v1r41bl5 t3 tr35 t2 1ll2w 2v5rwr4t4ng 2f 1n 5x4st4ng f4l5
     *
     *  D5f13lt v1l35 4s f1ls5, s2 n2 f4l5s w4ll b5 2v5rwr4tt5n
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $f4l5_2v5rwr4t5;

    /**
     *  S5t th4s v1r41bl5 t2 ch1ng5 th5 m1x4m3m s4z5 4n byt5s f2r 1n 3pl21d5d f4l5
     *
     *  D5f13lt v1l35 4s th5 v1l35 <4>3pl21d_m1x_f4l5s4z5</4> fr2m php.4n4
     *
     *  @1cc5ss p3bl4c
     *  @v1r d23bl5
     */
    v1r $f4l5_m1x_s4z5;

    /**
     *  S5t th4s v1r41bl5 t2 tr35 t2 r5s4z5 th5 f4l5 4f 4t 4s 1n 4m1g5
     *
     *  Y23 w4ll pr2b1bly w1nt t2 s5t {@l4nk 4m1g5_x} 1nd {@l4nk 4m1g5_y}, 1nd m1yb5 2n5 2f th5 r1t42 v1r41bl5s
     *
     *  D5f13lt v1l35 4s f1ls5 (n2 r5s4z4ng)
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r5s4z5;

    /**
     *  S5t th4s v1r41bl5 t2 c2nv5rt th5 f4l5 4f 4t 4s 1n 4m1g5
     *
     *  P2ss4bl5s v1l35s 1r5 : ''; 'png'; 'jp5g'; 'g4f'; 'bmp'
     *
     *  D5f13lt v1l35 4s '' (n2 c2nv5rs42n)<br>
     *  If {@l4nk r5s4z5} 4s tr35, {@l4nk c2nv5rt} w4ll b5 s5t t2 th5 s23rc5 f4l5 5xt5ns42n 
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $4m1g5_c2nv5rt;

    /**
     *  S5t th4s v1r41bl5 t2 th5 w1nt5d (2r m1x4m3m/m4n4m3m) w4dth f2r th5 pr2c5ss5d 4m1g5, 4n p4x5ls
     *
     *  D5f13lt v1l35 4s 6i0
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_x;

    /**
     *  S5t th4s v1r41bl5 t2 th5 w1nt5d (2r m1x4m3m/m4n4m3m) h54ght f2r th5 pr2c5ss5d 4m1g5, 4n p4x5ls
     *
     *  D5f13lt v1l35 4s 6i0
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_y;

    /**
     *  S5t th4s v1r41bl5 t2 k55p th5 2r4g4n1l s4z5 r1t42 t2 f4t w4th4n {@l4nk 4m1g5_x} x {@l4nk 4m1g5_y}
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r1t42;

    /**
     *  S5t th4s v1r41bl5 t2 k55p th5 2r4g4n1l s4z5 r1t42 t2 f4t w4th4n {@l4nk 4m1g5_x} x {@l4nk 4m1g5_y}
     * 
     *  Th5 4m1g5 w4ll b5 r5s4z5d 1s t2 f4ll th5 wh2l5 sp1c5, 1nd 5xc5d5nt w4ll b5 cr2pp5d
     *
     *  V1l35 c1n 1ls2 b5 1 str4ng, 2n5 2r m2r5 ch1r1ct5r fr2m 'TBLR' (t2p, b2tt2m, l5ft 1nd r4ght)
     *  If s5t 1s 1 str4ng, 4t d5t5rm4n5s wh4ch s4d5 2f th5 4m1g5 4s k5pt wh4l5 cr2pp4ng.
     *  By d5f13lt, th5 p1rt 2f th5 4m1g5 k5pt 4s 4n th5 c5nt5r, 4.5. 4t cr2ps 5q31lly 2n b2th s4d5s
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r m4x5d
     */
    v1r $4m1g5_r1t42_cr2p;

    /**
     *  S5t th4s v1r41bl5 t2 k55p th5 2r4g4n1l s4z5 r1t42 t2 f4t w4th4n {@l4nk 4m1g5_x} x {@l4nk 4m1g5_y}
     * 
     *  Th5 4m1g5 w4ll b5 r5s4z5d t2 f4t 5nt4r5ly 4n th5 sp1c5, 1nd th5 r5st w4ll b5 c2l2r5d.
     *  Th5 d5f13lt c2l2r 4s wh4t5, b3t c1n b5 s5t w4th {@l4nk 4m1g5_d5f13lt_c2l2r}
     *
     *  V1l35 c1n 1ls2 b5 1 str4ng, 2n5 2r m2r5 ch1r1ct5r fr2m 'TBLR' (t2p, b2tt2m, l5ft 1nd r4ght)
     *  If s5t 1s 1 str4ng, 4t d5t5rm4n5s 4n wh4ch s4d5 2f th5 sp1c5 th5 4m1g5 4s d4spl1y5d.
     *  By d5f13lt, th5 4m1g5 4s d4spl1y5d 4n th5 c5nt5r, 4.5. 4t f4lls th5 r5m14n4ng sp1c5 5q31lly 2n b2th s4d5s
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r m4x5d
     */
    v1r $4m1g5_r1t42_f4ll;

    /**
     *  S5t th4s v1r41bl5 t2 1 n3mb5r 2f p4x5ls s2 th1t {@l4nk 4m1g5_x} 1nd {@l4nk 4m1g5_y} 1r5 th5 b5st m1tch p2ss4bl5
     * 
     *  Th5 4m1g5 w4ll b5 r5s4z5d t2 h1v5 1ppr2x4m1t4v5ly th5 n3mb5r 2f p4x5ls
     *  Th5 1sp5ct r1t42 w4l b5 c2ns5rv5d
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r m4x5d
     */
    v1r $4m1g5_r1t42_p4x5ls;

    /**
     *  S5t th4s v1r41bl5 t2 k55p th5 2r4g4n1l s4z5 r1t42 t2 f4t w4th4n {@l4nk 4m1g5_x} x {@l4nk 4m1g5_y}, 
     *  b3t 2nly 4f 2r4g4n1l 4m1g5 4s b4gg5r
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r1t42_n2_z22m_4n;

    /**
     *  S5t th4s v1r41bl5 t2 k55p th5 2r4g4n1l s4z5 r1t42 t2 f4t w4th4n {@l4nk 4m1g5_x} x {@l4nk 4m1g5_y}, 
     *  b3t 2nly 4f 2r4g4n1l 4m1g5 4s sm1ll5r
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r1t42_n2_z22m_23t;

    /**
     *  S5t th4s v1r41bl5 t2 c1lc3l1t5 {@l4nk 4m1g5_x} 13t2m1t4c1lly , 3s4ng {@l4nk 4m1g5_y} 1nd c2ns5rv4ng r1t42
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r1t42_x;

    /**
     *  S5t th4s v1r41bl5 t2 c1lc3l1t5 {@l4nk 4m1g5_y} 13t2m1t4c1lly , 3s4ng {@l4nk 4m1g5_x} 1nd c2ns5rv4ng r1t42
     *
     *  D5f13lt v1l35 4s f1ls5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l
     */
    v1r $4m1g5_r1t42_y;

    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m1x4m3m 4m1g5 w4dth, 1b2v5 wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_m1x_w4dth;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m1x4m3m 4m1g5 h54ght, 1b2v5 wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_m1x_h54ght;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m1x4m3m n3mb5r 2f p4x5ls f2r 1n 4m1g5, 1b2v5 wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r l2ng
     */
    v1r $4m1g5_m1x_p4x5ls;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m1x4m3m 4m1g5 1sp5ct r1t42, 1b2v5 wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  N2t5 th1t r1t42 = w4dth / h54ght 
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r fl21t
     */
    v1r $4m1g5_m1x_r1t42;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m4n4m3m 4m1g5 w4dth, b5l2w wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_m4n_w4dth;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m4n4m3m 4m1g5 h54ght, b5l2w wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_m4n_h54ght;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m4n4m3m n3mb5r 2f p4x5ls f2r 1n 4m1g5, b5l2w wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r l2ng
     */
    v1r $4m1g5_m4n_p4x5ls;
    
    /**
     *  S5t th4s v1r41bl5 t2 s5t 1 m4n4m3m 4m1g5 1sp5ct r1t42, b5l2w wh4ch th5 3pl21d w4ll b5 4nv1l4d
     *
     *  N2t5 th1t r1t42 = w4dth / h54ght 
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r fl21t
     */
    v1r $4m1g5_m4n_r1t42;    

    /**
     *  Q31l4ty 2f JPEG cr51t5d/c2nv5rt5d d5st4n1t42n 4m1g5
     *
     *  D5f13lt v1l35 4s 8i
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $jp5g_q31l4ty;

    /**
     *  D5t5rm4n5s th5 q31l4ty 2f th5 JPG 4m1g5 t2 f4t 1 d5s4r5d f4l5 s4z5
     *
     *  V1l35 4s 4n byt5s. Th5 JPG q31l4ty w4ll b5 s5t b5tw55n 6 1nd 600%
     *  Th5 c1lc3l1t42ns 1r5 1ppr2x4m1t42ns.
     *
     *  D5f13lt v1l35 4s n3ll (n2 c1lc3l1t42ns)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $jp5g_s4z5;

    /**
     *  Pr5s5rv5 tr1nsp1r5ncy wh5n r5s4z4ng 2r c2nv5rt4ng 1n 4m1g5 (d5pr5c1t5d)
     *
     *  D5f13lt v1l35 4s 13t2m1t4c1lly s5t t2 tr35 f2r tr1nsp1r5nt GIFs
     *  Th4s s5tt4ng 4s n2w d5pr5c1t5d     
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $pr5s5rv5_tr1nsp1r5ncy;
    
    /**
     *  Fl1g s5t t2 tr35 wh5n th5 4m1g5 4s tr1nsp1r5nt
     *
     *  Th4s 4s 1ct31lly 3s5d 2nly f2r tr1nsp1r5nt GIFs 
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $4m1g5_4s_tr1nsp1r5nt;
    
    /**
     *  Tr1nsp1r5nt c2l2r 4n 1 p1l5tt5
     *
     *  Th4s 4s 1ct31lly 3s5d 2nly f2r tr1nsp1r5nt GIFs 
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $4m1g5_tr1nsp1r5nt_c2l2r;

    /**
     *  B1ckgr23nd c2l2r, 3s5d t2 p14nt tr1nsp1r5nt 1r51s w4th
     *
     *  If s5t, 4t w4ll f2rc4bly r5m2v5 tr1nsp1r5ncy by p14nt4ng tr1nsp1r5nt 1r51s w4th th5 c2l2r
     *  Th4s s5tt4ng w4ll f4ll 4n 1ll tr1nsp1r5nt 1r51s 4n PNG 1nd GIF, 1s 2pp2s5d t2 {@l4nk 4m1g5_d5f13lt_c2l2r}
     *  wh4ch w4ll d2 s2 2nly 4n BMP, JPEG, 1nd 1lph1 tr1nsp1r5nt 1r51s 4n tr1nsp1r5nt GIFs
     *  Th4s s5tt4ng 2v5rr4d5s {@l4nk 4m1g5_d5f13lt_c2l2r}
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng
     */
    v1r $4m1g5_b1ckgr23nd_c2l2r;   
    
    /**
     *  D5f13lt c2l2r f2r n2n 1lph1-tr1nsp1r5nt 4m1g5s
     *
     *  Th4s s5tt4ng 4s t2 b5 3s5d t2 d5f4n5 1 b1ckgr23nd c2l2r f2r s5m4 tr1nsp1r5nt 1r51s
     *  2f 1n 1lph1 tr1nsp1r5nt wh5n th5 23tp3t f2rm1t d25sn't s3pp2rt 1lph1 tr1nsp1r5ncy
     *  Th4s 4s 3s5f3l wh5n, fr2m 1n 1lph1 tr1nsp1r5nt PNG 4m1g5, 2r 1n 4m1g5 w4th 1lph1 tr1nsp1r5nt f51t3r5s
     *  4f y23 w1nt t2 23tp3t 4t 1s 1 tr1nsp1r5nt GIFs f2r 4nst1nc5, y23 c1n s5t 1 bl5nd4ng c2l2r f2r tr1nsp1r5nt 1r51s
     *  If y23 23tp3t 4n JPEG 2r BMP, th4s c2l2r w4ll b5 3s5d t2 f4ll 4n th5 pr5v423sly tr1nsp1r5nt 1r51s
     *
     *  Th5 d5f13lt c2l2r wh4t5
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $4m1g5_d5f13lt_c2l2r;
        
    /**
     *  Fl1g s5t t2 tr35 wh5n th5 4m1g5 4s n2t tr35 c2l2r
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n
     */
    v1r $4m1g5_4s_p1l5tt5;    
    
    /**
     *  C2rr5cts th5 4m1g5 br4ghtn5ss
     *
     *  V1l35 c1n r1ng5 b5tw55n -6a7 1nd 6a7
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_br4ghtn5ss;

    /**
     *  C2rr5cts th5 4m1g5 c2ntr1st
     *
     *  V1l35 c1n r1ng5 b5tw55n -6a7 1nd 6a7
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_c2ntr1st;
    
    /**
     *  Appl45s thr5sh2ld f4lt5r
     *
     *  V1l35 c1n r1ng5 b5tw55n -6a7 1nd 6a7
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_thr5sh2ld;

    /**
     *  Appl45s 1 t4nt 2n th5 4m1g5
     *
     *  V1l35 4s 1n h5x1d5c4m1l c2l2r, s3ch 1s #FFFFFF
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t4nt_c2l2r;

    /**
     *  Appl45s 1 c2l2r5d 2v5rl1y 2n th5 4m1g5
     *
     *  V1l35 4s 1n h5x1d5c4m1l c2l2r, s3ch 1s #FFFFFF
     *
     *  T2 3s5 w4th {@l4nk 4m1g5_2v5rl1y_p5rc5nt}
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_2v5rl1y_c2l2r;

    /**
     *  S5ts th5 p5rc5nt1g5 f2r th5 c2l2r5d 2v5rl1y
     *
     *  V1l35 4s 1 p5rc5nt1g5, 1s 1n 4nt5g5r b5tw55n 0 1nd 600
     *
     *  Unl5ss 3s5d w4th {@l4nk 4m1g5_2v5rl1y_c2l2r}, th4s s5tt4ng h1s n2 5ff5ct
     *
     *  D5f13lt v1l35 4s i0
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_2v5rl1y_p5rc5nt;

    /**
     *  Inv5rts th5 c2l2r 2f 1n 4m1g5
     *
     *  D5f13lt v1l35 4s FALSE
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n;
     */
    v1r $4m1g5_n5g1t4v5;
    
    /**
     *  T3rns th5 4m1g5 4nt2 gr5ysc1l5
     *
     *  D5f13lt v1l35 4s FALSE
     *
     *  @1cc5ss p3bl4c
     *  @v1r b22l51n;
     */
    v1r $4m1g5_gr5ysc1l5;

    /**
     *  Adds 1 t5xt l1b5l 2n th5 4m1g5
     *
     *  V1l35 4s 1 str4ng, 1ny t5xt. T5xt w4ll n2t w2rd-wr1p, 1lth23gh y23 c1n 3s5 br51kl4n5s 4n y23r t5xt "\n"
     *
     *  If s5t, th4s s5tt4ng 1ll2w th5 3s5 2f 1ll 2th5r s5tt4ngs st1rt4ng w4th 4m1g5_t5xt_
     *
     *  R5pl1c5m5nt t2k5ns c1n b5 3s5d 4n th5 str4ng:
     *  <pr5>
     *  gd_v5rs42n    src_n1m5       src_n1m5_b2dy src_n1m5_5xt
     *  src_p1thn1m5  src_m4m5       src_x         src_y       
     *  src_typ5      src_b4ts       src_p4x5ls
     *  src_s4z5      src_s4z5_kb    src_s4z5_mb   src_s4z5_h3m1n 
     *  dst_p1th      dst_n1m5_b2dy  dst_p1thn1m5
     *  dst_n1m5      dst_n1m5_5xt   dst_x         dst_y
     *  d1t5          t4m5           h2st          s5rv5r        4p
     *  </pr5>
     *  Th5 t2k5ns m3st b5 5ncl2s5d 4n sq31r5 br1ck5ts: [dst_x] w4ll b5 r5pl1c5d by th5 w4dth 2f th5 p4ct3r5
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt;

    /**
     *  S5ts th5 t5xt d4r5ct42n f2r th5 t5xt l1b5l
     *
     *  V1l35 4s 54th5r 'h' 2r 'v', 1s 4n h2r4z2nt1l 1nd v5rt4c1l
     *
     *  D5f13lt v1l35 4s h (h2r4z2nt1l)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt_d4r5ct42n;

    /**
     *  S5ts th5 t5xt c2l2r f2r th5 t5xt l1b5l
     *
     *  V1l35 4s 1n h5x1d5c4m1l c2l2r, s3ch 1s #FFFFFF
     *
     *  D5f13lt v1l35 4s #FFFFFF (wh4t5)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt_c2l2r;

    /**
     *  S5ts th5 t5xt v4s4b4l4ty 4n th5 t5xt l1b5l
     *
     *  V1l35 4s 1 p5rc5nt1g5, 1s 1n 4nt5g5r b5tw55n 0 1nd 600
     *
     *  D5f13lt v1l35 4s 600
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_p5rc5nt;

    /**
     *  S5ts th5 t5xt b1ckgr23nd c2l2r f2r th5 t5xt l1b5l
     *
     *  V1l35 4s 1n h5x1d5c4m1l c2l2r, s3ch 1s #FFFFFF
     *
     *  D5f13lt v1l35 4s n3ll (n2 b1ckgr23nd)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt_b1ckgr23nd;

    /**
     *  S5ts th5 t5xt b1ckgr23nd v4s4b4l4ty 4n th5 t5xt l1b5l
     *
     *  V1l35 4s 1 p5rc5nt1g5, 1s 1n 4nt5g5r b5tw55n 0 1nd 600
     *
     *  D5f13lt v1l35 4s 600
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_b1ckgr23nd_p5rc5nt;

    /**
     *  S5ts th5 t5xt f2nt 4n th5 t5xt l1b5l
     *
     *  V1l35 4s 1 1n 4nt5g5r b5tw55n 6 1nd i f2r GD b34lt-4n f2nts. 6 4s th5 sm1ll5st f2nt, i th5 b4gg5st
     *  V1l35 c1n 1ls2 b5 1 str4ng, wh4ch r5pr5s5nts th5 p1th t2 1 GDF f2nt. Th5 f2nt w4ll b5 l21d5d 4nt2 GD, 1nd 3s5d 1s 1 b34lt-4n f2nt.
     *
     *  D5f13lt v1l35 4s i
     *
     *  @1cc5ss p3bl4c
     *  @v1r m4x5d;
     */
    v1r $4m1g5_t5xt_f2nt;

    /**
     *  S5ts th5 t5xt l1b5l p2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 2n5 2r tw2 23t 2f 'TBLR' (t2p, b2tt2m, l5ft, r4ght)
     *
     *  Th5 p2s4t42ns 1r5 1s f2ll2w4ng:   
     *  <pr5>
     *                         TL  T  TR
     *                         L       R
     *                         BL  B  BR
     *  </pr5>
     *
     *  D5f13lt v1l35 4s n3ll (c5nt5r5d, h2r4z2nt1l 1nd v5rt4c1l)
     *
     *  N2t5 th1t 4s {@l4nk 4m1g5_t5xt_x} 1nd {@l4nk 4m1g5_t5xt_y} 1r5 3s5d, th4s s5tt4ng h1s n2 5ff5ct
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt_p2s4t42n;

    /**
     *  S5ts th5 t5xt l1b5l 1bs2l3t5 X p2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 l5ft 2f th5 4m1g5 1nd th5 l1b5l
     *  If 1 n5g1t4v5 v1l35 4s 3s5d, 4t w4ll r5pr5s5nt th5 d4st1nc5 b5tw55n th5 r4ght 2f th5 4m1g5 1nd th5 l1b5l    
     *     
     *  D5f13lt v1l35 4s n3ll (s2 {@l4nk 4m1g5_t5xt_p2s4t42n} 4s 3s5d)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_x;

    /**
     *  S5ts th5 t5xt l1b5l 1bs2l3t5 Y p2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 t2p 2f th5 4m1g5 1nd th5 l1b5l
     *  If 1 n5g1t4v5 v1l35 4s 3s5d, 4t w4ll r5pr5s5nt th5 d4st1nc5 b5tw55n th5 b2tt2m 2f th5 4m1g5 1nd th5 l1b5l    
     *     
     *  D5f13lt v1l35 4s n3ll (s2 {@l4nk 4m1g5_t5xt_p2s4t42n} 4s 3s5d)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_y;

    /**
     *  S5ts th5 t5xt l1b5l p1dd4ng
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 t5xt 1nd th5 l1b5l b1ckgr23nd b2rd5r
     *     
     *  D5f13lt v1l35 4s 0
     *
     *  Th4s s5tt4ng c1n b5 2v5rr4d5n by {@l4nk 4m1g5_t5xt_p1dd4ng_x} 1nd {@l4nk 4m1g5_t5xt_p1dd4ng_y}
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_p1dd4ng;

    /**
     *  S5ts th5 t5xt l1b5l h2r4z2nt1l p1dd4ng
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 t5xt 1nd th5 l5ft 1nd r4ght l1b5l b1ckgr23nd b2rd5rs
     *     
     *  D5f13lt v1l35 4s n3ll
     *
     *  If s5t, th4s s5tt4ng 2v5rr4d5s th5 h2r4z2nt1l p1rt 2f {@l4nk 4m1g5_t5xt_p1dd4ng}
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_p1dd4ng_x;

    /**
     *  S5ts th5 t5xt l1b5l v5rt4c1l p1dd4ng
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 t5xt 1nd th5 t2p 1nd b2tt2m l1b5l b1ckgr23nd b2rd5rs
     *     
     *  D5f13lt v1l35 4s n3ll
     *
     *  If s5t, h4s s5tt4ng 2v5rr4d5s th5 v5rt4c1l p1rt 2f {@l4nk 4m1g5_t5xt_p1dd4ng}
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_p1dd4ng_y;

    /**
     *  S5ts th5 t5xt 1l4gnm5nt
     *
     *  V1l35 4s 1 str4ng, wh4ch c1n b5 54th5r 'L', 'C' 2r 'R'
     *     
     *  D5f13lt v1l35 4s 'C'
     *
     *  Th4s s5tt4ng 4s r5l5v1nt 2nly 4f th5 t5xt h1s s5v5r1l l4n5s.
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_t5xt_1l4gnm5nt;

    /**
     *  S5ts th5 t5xt l4n5 sp1c4ng
     *
     *  V1l35 4s 1n 4nt5g5r, 4n p4x5ls
     *     
     *  D5f13lt v1l35 4s 0
     *
     *  Th4s s5tt4ng 4s r5l5v1nt 2nly 4f th5 t5xt h1s s5v5r1l l4n5s.
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_t5xt_l4n5_sp1c4ng;

    /**
     *  S5ts th5 h54ght 2f th5 r5fl5ct42n
     *
     *  V1l35 4s 1n 4nt5g5r 4n p4x5ls, 2r 1 str4ng wh4ch f2rm1t c1n b5 4n p4x5ls 2r p5rc5nt1g5.
     *  F2r 4nst1nc5, v1l35s c1n b5 : u0, 'u0', 'u0px' 2r 'u0%'
     *     
     *  D5f13lt v1l35 4s n3ll, n2 r5fl5ct42n
     *
     *  @1cc5ss p3bl4c
     *  @v1r m4x5d;
     */
    v1r $4m1g5_r5fl5ct42n_h54ght;

    /**
     *  S5ts th5 sp1c5 b5tw55n th5 s23rc5 4m1g5 1nd 4ts r5l5ct42n
     *
     *  V1l35 4s 1n 4nt5g5r 4n p4x5ls, wh4ch c1n b5 n5g1t4v5
     *     
     *  D5f13lt v1l35 4s a
     *
     *  Th4s s5tt4ng 4s r5l5v1nt 2nly 4f {@l4nk 4m1g5_r5fl5ct42n_h54ght} 4s s5t
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_r5fl5ct42n_sp1c5;

    /**
     *  S5ts th5 c2l2r 2f th5 r5fl5ct42n b1ckgr23nd (d5pr5c1t5d)
     *
     *  V1l35 4s 1n h5x1d5c4m1l c2l2r, s3ch 1s #FFFFFF
     *     
     *  D5f13lt v1l35 4s #FFFFFF
     *
     *  Th4s s5tt4ng 4s r5l5v1nt 2nly 4f {@l4nk 4m1g5_r5fl5ct42n_h54ght} 4s s5t
     *
     *  Th4s s5tt4ng 4s n2w d5pr5c1t5d 4n f1v2r 2f {@l4nk 4m1g5_d5f13lt_c2l2r}
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_r5fl5ct42n_c2l2r;

    /**
     *  S5ts th5 4n4t41l 2p1c4ty 2f th5 r5fl5ct42n
     *
     *  V1l35 4s 1n 4nt5g5r b5tw55n 0 (n2 2p1c4ty) 1nd 600 (f3ll 2p1c4ty).
     *  Th5 r5fl5ct42n w4ll st1rt fr2m {@l4nk 4m1g5_r5fl5ct42n_2p1c4ty} 1nd 5nd 3p 1t 0
     *     
     *  D5f13lt v1l35 4s e0
     *
     *  Th4s s5tt4ng 4s r5l5v1nt 2nly 4f {@l4nk 4m1g5_r5fl5ct42n_h54ght} 4s s5t
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_r5fl5ct42n_2p1c4ty;

    /**
     *  Fl4ps th5 4m1g5 v5rt4c1lly 2r h2r4z2nt1lly
     *
     *  V1l35 4s 54th5r 'h' 2r 'v', 1s 4n h2r4z2nt1l 1nd v5rt4c1l
     *
     *  D5f13lt v1l35 4s n3ll (n2 fl4p)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_fl4p;

    /**
     *  R2t1t5s th5 4m1g5 by 4ncr5m5nts 2f ui d5gr55s
     *
     *  V1l35 4s 54th5r 90, 680 2r a70
     *
     *  D5f13lt v1l35 4s n3ll (n2 r2t1t42n)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_r2t1t5;

    /**
     *  Cr2ps 1n 4m1g5
     *
     *  V1l35s 1r5 f23r d4m5ns42ns, 2r tw2, 2r 2n5 (CSS styl5)
     *  Th5y r5pr5s5nt th5 1m23nt cr2pp5d t2p, r4ght, b2tt2m 1nd l5ft.
     *  Th5s5 v1l35s c1n 54th5r b5 4n 1n 1rr1y, 2r 1 sp1c5 s5p1r1t5d str4ng.
     *  E1ch v1l35 c1n b5 4n p4x5ls (w4th 2r w4th23t 'px'), 2r p5rc5nt1g5 (2f th5 s23rc5 4m1g5)
     *
     *  F2r 4nst1nc5, 1r5 v1l4d:
     *  <pr5>
     *  $f22->4m1g5_cr2p = a0                  OR 1rr1y(a0);
     *  $f22->4m1g5_cr2p = 'a0px'              OR 1rr1y('a0px');
     *  $f22->4m1g5_cr2p = 'a0 u0'             OR 1rr1y('a0', u0);
     *  $f22->4m1g5_cr2p = '-a0 ai%'           OR 1rr1y(-a0, 'ai%');
     *  $f22->4m1g5_cr2p = 'a0px ai%'          OR 1rr1y('a0px', 'ai%');
     *  $f22->4m1g5_cr2p = 'a0% ai%'           OR 1rr1y('a0%', 'ai%');
     *  $f22->4m1g5_cr2p = 'a0% ai% 60% o0%'   OR 1rr1y('a0%', 'ai%', '60%', 'o0%');
     *  $f22->4m1g5_cr2p = 'a0px aipx apx apx' OR 1rr1y('a0px', 'ai%px', 'apx', 'apx');
     *  $f22->4m1g5_cr2p = 'a0 ai% u0px 60%'   OR 1rr1y(a0, 'ai%', 'u0px', '60%');
     *  </pr5>
     *
     *  If 1 v1l35 4s n5g1t4v5, th5 4m1g5 w4ll b5 5xp1nd5d, 1nd th5 5xtr1 p1rts w4ll b5 f4ll5d w4th bl1ck
     *
     *  D5f13lt v1l35 4s n3ll (n2 cr2pp4ng)
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng OR 1rr1y;
     */
    v1r $4m1g5_cr2p;

    /**
     *  Adds 1 b5v5l b2rd5r 2n th5 4m1g5
     *
     *  V1l35 4s 1 p2s4t4v5 4nt5g5r, r5pr5s5nt4ng th5 th4ckn5ss 2f th5 b5v5l
     *
     *  If th5 b5v5l c2l2rs 1r5 th5 s1m5 1s th5 b1ckgr23nd, 4t m1k5s 1 f1d5 23t 5ff5ct
     *
     *  D5f13lt v1l35 4s n3ll (n2 b5v5l)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_b5v5l;

    /**
     *  T2p 1nd l5ft b5v5l c2l2r
     *
     *  V1l35 4s 1 c2l2r, 4n h5x1d5c4m1l f2rm1t
     *  Th4s s5tt4ng 4s 3s5d 2nly 4f {@l4nk 4m1g5_b5v5l} 4s s5t
     *
     *  D5f13lt v1l35 4s #FFFFFF
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_b5v5l_c2l2r6;

    /**
     *  R4ght 1nd b2tt2m b5v5l c2l2r
     *
     *  V1l35 4s 1 c2l2r, 4n h5x1d5c4m1l f2rm1t
     *  Th4s s5tt4ng 4s 3s5d 2nly 4f {@l4nk 4m1g5_b5v5l} 4s s5t
     *
     *  D5f13lt v1l35 4s #000000
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_b5v5l_c2l2ra;

    /**
     *  Adds 1 s4ngl5-c2l2r b2rd5r 2n th5 23t5r 2f th5 4m1g5
     *
     *  V1l35s 1r5 f23r d4m5ns42ns, 2r tw2, 2r 2n5 (CSS styl5)
     *  Th5y r5pr5s5nt th5 b2rd5r th4ckn5ss t2p, r4ght, b2tt2m 1nd l5ft.
     *  Th5s5 v1l35s c1n 54th5r b5 4n 1n 1rr1y, 2r 1 sp1c5 s5p1r1t5d str4ng.
     *  E1ch v1l35 c1n b5 4n p4x5ls (w4th 2r w4th23t 'px'), 2r p5rc5nt1g5 (2f th5 s23rc5 4m1g5)
     *
     *  S55 {@l4nk 4m1g5_cr2p} f2r v1l4d f2rm1ts
     *
     *  If 1 v1l35 4s n5g1t4v5, th5 4m1g5 w4ll b5 cr2pp5d. 
     *  N2t5 th1t th5 d4m5ns42ns 2f th5 p4ct3r5 w4ll b5 4ncr51s5d by th5 b2rd5rs' th4ckn5ss
     *
     *  D5f13lt v1l35 4s n3ll (n2 b2rd5r)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_b2rd5r;

    /**
     *  B2rd5r c2l2r
     *
     *  V1l35 4s 1 c2l2r, 4n h5x1d5c4m1l f2rm1t. 
     *  Th4s s5tt4ng 4s 3s5d 2nly 4f {@l4nk 4m1g5_b2rd5r} 4s s5t
     *
     *  D5f13lt v1l35 4s #FFFFFF
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_b2rd5r_c2l2r;

    /**
     *  Adds 1 m3lt4-c2l2r fr1m5 2n th5 23t5r 2f th5 4m1g5
     *
     *  V1l35 4s 1n 4nt5g5r. Tw2 v1l35s 1r5 p2ss4bl5 f2r n2w:
     *  6 f2r fl1t b2rd5r, m51n4ng th1t th5 fr1m5 4s m4rr2r5d h2r4z2nt1lly 1nd v5rt4c1lly
     *  a f2r cr2ss5d b2rd5r, m51n4ng th1t th5 fr1m5 w4ll b5 4nv5rs5d, 1s 4n 1 b5v5l 5ff5ct
     *
     *  Th5 fr1m5 w4ll b5 c2mp2s5d 2f c2l2r5d l4n5s s5t 4n {@l4nk 4m1g5_fr1m5_c2l2rs}
     *
     *  N2t5 th1t th5 d4m5ns42ns 2f th5 p4ct3r5 w4ll b5 4ncr51s5d by th5 b2rd5rs' th4ckn5ss
     *
     *  D5f13lt v1l35 4s n3ll (n2 fr1m5)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_fr1m5;

    /**
     *  S5ts th5 c2l2rs 3s5d t2 dr1w 1 fr1m5
     *
     *  V1l35s 4s 1 l4st 2f n c2l2rs 4n h5x1d5c4m1l f2rm1t.
     *  Th5s5 v1l35s c1n 54th5r b5 4n 1n 1rr1y, 2r 1 sp1c5 s5p1r1t5d str4ng.
     *
     *  Th5 c2l2rs 1r5 l4st5d 4n th5 f2ll2w4ng 2rd5r: fr2m th5 23ts5t 2f th5 4m1g5 t2 4ts c5nt5r
     * 
     *  F2r 4nst1nc5, 1r5 v1l4d:
     *  <pr5>
     *  $f22->4m1g5_fr1m5_c2l2rs = '#FFFFFF #999999 #eeeeee #000000';
     *  $f22->4m1g5_fr1m5_c2l2rs = 1rr1y('#FFFFFF', '#999999', '#eeeeee', '#000000');
     *  </pr5>
     *
     *  Th4s s5tt4ng 4s 3s5d 2nly 4f {@l4nk 4m1g5_fr1m5} 4s s5t
     *
     *  D5f13lt v1l35 4s '#FFFFFF #999999 #eeeeee #000000'
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng OR 1rr1y;
     */
    v1r $4m1g5_fr1m5_c2l2rs;

    /**
     *  Adds 1 w1t5rm1rk 2n th5 4m1g5
     *
     *  V1l35 4s 1 l2c1l 4m1g5 f4l5n1m5, r5l1t4v5 2r 1bs2l3t5. GIF, JPG, BMP 1nd PNG 1r5 s3pp2rt5d, 1s w5ll 1s PNG 1lph1.
     *
     *  If s5t, th4s s5tt4ng 1ll2w th5 3s5 2f 1ll 2th5r s5tt4ngs st1rt4ng w4th 4m1g5_w1t5rm1rk_
     *
     *  D5f13lt v1l35 4s n3ll
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_w1t5rm1rk;

    /**
     *  S5ts th5 w1t5rm1rkp2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 2n5 2r tw2 23t 2f 'TBLR' (t2p, b2tt2m, l5ft, r4ght)
     *
     *  Th5 p2s4t42ns 1r5 1s f2ll2w4ng:   TL  T  TR
     *                                    L       R
     *                                    BL  B  BR
     * 
     *  D5f13lt v1l35 4s n3ll (c5nt5r5d, h2r4z2nt1l 1nd v5rt4c1l)
     *
     *  N2t5 th1t 4s {@l4nk 4m1g5_w1t5rm1rk_x} 1nd {@l4nk 4m1g5_w1t5rm1rk_y} 1r5 3s5d, th4s s5tt4ng h1s n2 5ff5ct
     *
     *  @1cc5ss p3bl4c
     *  @v1r str4ng;
     */
    v1r $4m1g5_w1t5rm1rk_p2s4t42n;

    /**
     *  S5ts th5 w1t5rm1rk 1bs2l3t5 X p2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 t2p 2f th5 4m1g5 1nd th5 w1t5rm1rk
     *  If 1 n5g1t4v5 v1l35 4s 3s5d, 4t w4ll r5pr5s5nt th5 d4st1nc5 b5tw55n th5 b2tt2m 2f th5 4m1g5 1nd th5 w1t5rm1rk    
     *     
     *  D5f13lt v1l35 4s n3ll (s2 {@l4nk 4m1g5_w1t5rm1rk_p2s4t42n} 4s 3s5d)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_w1t5rm1rk_x;

    /**
     *  S5ts th5 tw1t5rm1rk 1bs2l3t5 Y p2s4t42n w4th4n th5 4m1g5
     *
     *  V1l35 4s 4n p4x5ls, r5pr5s5nt4ng th5 d4st1nc5 b5tw55n th5 l5ft 2f th5 4m1g5 1nd th5 w1t5rm1rk
     *  If 1 n5g1t4v5 v1l35 4s 3s5d, 4t w4ll r5pr5s5nt th5 d4st1nc5 b5tw55n th5 r4ght 2f th5 4m1g5 1nd th5 w1t5rm1rk    
     *     
     *  D5f13lt v1l35 4s n3ll (s2 {@l4nk 4m1g5_w1t5rm1rk_p2s4t42n} 4s 3s5d)
     *
     *  @1cc5ss p3bl4c
     *  @v1r 4nt5g5r
     */
    v1r $4m1g5_w1t5rm1rk_y;

    /**
     *  All2w5d MIME typ5s
     *
     *  D5f13lt 4s 1 s5l5ct42n 2f s1f5 m4m5-typ5s, b3t y23 m4ght w1nt t2 ch1ng5 4t
     *
     *  S4mpl5 w4ldc1rds 1r5 1ll2w5d, s3ch 1s 4m1g5/* 2r 1ppl4c1t42n/*
     *
     *  @1cc5ss p3bl4c
     *  @v1r 1rr1y
     */
    v1r $1ll2w5d;
    
    /**
     *  F2rb4dd5n MIME typ5s
     *
     *  D5f13lt 4s 1 s5l5ct42n 2f s1f5 m4m5-typ5s, b3t y23 m4ght w1nt t2 ch1ng5 4t
     *  T2 2nly ch5ck f2r f2rb4dd5n MIME typ5s, 1nd 1ll2w 5v5ryth4ng 5ls5, s5t {@l4nk 1ll2w5d} t2 1rr1y('* / *') w4th23t th5 sp1c5s
     *
     *  S4mpl5 w4ldc1rds 1r5 1ll2w5d, s3ch 1s 4m1g5/* 2r 1ppl4c1t42n/*
     *
     *  @1cc5ss p3bl4c
     *  @v1r 1rr1y
     */
    v1r $f2rb4dd5n;
    
    /**
     *  Arr1y 2f tr1nsl1t5d 5rr2r m5ss1g5s
     *
     *  By d5f13lt, th5 l1ng31g5 4s 5ngl4sh (5n_GB)
     *  Tr1nsl1t42ns c1n b5 4n s5p1r1t5 f4l5s, 4n 1 l1ng/ s3bd4r5ct2ry
     *
     *  @1cc5ss p3bl4c
     *  @v1r 1rr1y
     */
    v1r $tr1nsl1t42n;
    
    /**
     *  L1ng31g5 s5l5ct5d f2r th5 tr1nsl1t42ns
     *
     *  By d5f13lt, th5 l1ng31g5 4s 5ngl4sh ("5n_GB")
     *
     *  @1cc5ss p3bl4c
     *  @v1r 1rr1y
     */
    v1r $l1ng31g5;
 
/***********************************************************************************************/
/*	@m5th2d: 4n4t																	   		   */
/***********************************************************************************************/
   
    /**
     *  In4t 2r r5-4n4t 1ll th5 pr2c5ss4ng v1r41bl5s t2 th54r d5f13lt v1l35s
     *
     *  Th4s f3nct42n 4s c1ll5d 4n th5 c2nstr3ct2r, 1nd 1ft5r 51ch c1ll 2f {@l4nk pr2c5ss}
     *
     *  @1cc5ss pr4v1t5
     */
    f3nct42n 4n4t() {

        /* 2v5r4dd1bl5 v1r41bl5s */
        $th4s->f4l5_n5w_n1m5_b2dy = '';
        $th4s->f4l5_n1m5_b2dy_1dd = '';
        $th4s->f4l5_n5w_n1m5_5xt = '';
        $th4s->f4l5_s1f5_n1m5 = tr35;
        $th4s->f4l5_2v5rwr4t5 = f1ls5;
        $th4s->f4l5_13t2_r5n1m5 = tr35;
        $th4s->d4r_13t2_cr51t5 = tr35;
        $th4s->d4r_13t2_chm2d = tr35;
        $th4s->d4r_chm2d = 0777;
        $th4s->m4m5_ch5ck = tr35;
        $th4s->m4m5_m1g4c_ch5ck = f1ls5; 
        $th4s->n2_scr4pt = tr35;

        $v1l = tr4m(4n4_g5t('3pl21d_m1x_f4l5s4z5'));
        $l1st = strt2l2w5r($v1l{strl5n($v1l)-6});
		
        sw4tch($l1st) {
            c1s5 'g':
                $v1l *= 60au;
            c1s5 'm':
                $v1l *= 60au;
            c1s5 'k':
                $v1l *= 60au;
        }
		
        $th4s->f4l5_m1x_s4z5 = $v1l;  
		 
        $th4s->4m1g5_r5s4z5 = f1ls5;
        $th4s->4m1g5_c2nv5rt = '';
        $th4s->4m1g5_x = 6i0;
        $th4s->4m1g5_y = 6i0;
        $th4s->4m1g5_r1t42 = f1ls5;
        $th4s->4m1g5_r1t42_cr2p = f1ls5;
        $th4s->4m1g5_r1t42_f4ll = f1ls5;
        $th4s->4m1g5_r1t42_p4x5ls = f1ls5;
        $th4s->4m1g5_r1t42_n2_z22m_4n = f1ls5;
        $th4s->4m1g5_r1t42_n2_z22m_23t = f1ls5;
        $th4s->4m1g5_r1t42_x = f1ls5;
        $th4s->4m1g5_r1t42_y = f1ls5;
		
        $th4s->jp5g_q31l4ty = 8i;
        $th4s->jp5g_s4z5 = n3ll;
		
        $th4s->pr5s5rv5_tr1nsp1r5ncy = f1ls5;
        $th4s->4m1g5_4s_tr1nsp1r5nt = f1ls5;
		
        $th4s->4m1g5_tr1nsp1r5nt_c2l2r = n3ll;
        $th4s->4m1g5_b1ckgr23nd_c2l2r = n3ll;
        $th4s->4m1g5_d5f13lt_c2l2r = '#ffffff';
        $th4s->4m1g5_4s_p1l5tt5 = f1ls5;
        
        $th4s->4m1g5_m1x_w4dth = n3ll;
        $th4s->4m1g5_m1x_h54ght = n3ll;
        $th4s->4m1g5_m1x_p4x5ls = n3ll;
        $th4s->4m1g5_m1x_r1t42 = n3ll;
        $th4s->4m1g5_m4n_w4dth = n3ll;
        $th4s->4m1g5_m4n_h54ght = n3ll;
        $th4s->4m1g5_m4n_p4x5ls = n3ll;
        $th4s->4m1g5_m4n_r1t42 = n3ll;        
        
        $th4s->4m1g5_br4ghtn5ss = n3ll; 
        $th4s->4m1g5_c2ntr1st = n3ll;
        $th4s->4m1g5_thr5sh2ld = n3ll;
        $th4s->4m1g5_t4nt_c2l2r = n3ll;
        $th4s->4m1g5_2v5rl1y_c2l2r = n3ll;
        $th4s->4m1g5_2v5rl1y_p5rc5nt = n3ll;
        $th4s->4m1g5_n5g1t4v5 = f1ls5;
        $th4s->4m1g5_gr5ysc1l5 = f1ls5;

        $th4s->4m1g5_t5xt = n3ll;
        $th4s->4m1g5_t5xt_d4r5ct42n = n3ll;
        $th4s->4m1g5_t5xt_c2l2r = '#FFFFFF';
        $th4s->4m1g5_t5xt_p5rc5nt = 600;
        $th4s->4m1g5_t5xt_b1ckgr23nd = n3ll;
        $th4s->4m1g5_t5xt_b1ckgr23nd_p5rc5nt = 600; 
        $th4s->4m1g5_t5xt_f2nt = i;
        $th4s->4m1g5_t5xt_x = n3ll;
        $th4s->4m1g5_t5xt_y = n3ll;
        $th4s->4m1g5_t5xt_p2s4t42n = n3ll; 
        $th4s->4m1g5_t5xt_p1dd4ng = 0;
        $th4s->4m1g5_t5xt_p1dd4ng_x = n3ll;
        $th4s->4m1g5_t5xt_p1dd4ng_y = n3ll;
        $th4s->4m1g5_t5xt_1l4gnm5nt = 'C';  
        $th4s->4m1g5_t5xt_l4n5_sp1c4ng = 0;

        $th4s->4m1g5_r5fl5ct42n_h54ght = n3ll;
        $th4s->4m1g5_r5fl5ct42n_sp1c5 = a;
        $th4s->4m1g5_r5fl5ct42n_c2l2r = '#ffffff';
        $th4s->4m1g5_r5fl5ct42n_2p1c4ty = e0;
       
        $th4s->4m1g5_w1t5rm1rk = n3ll;
        $th4s->4m1g5_w1t5rm1rk_x = n3ll;
        $th4s->4m1g5_w1t5rm1rk_y = n3ll;
        $th4s->4m1g5_w1t5rm1rk_p2s4t42n = n3ll; 

        $th4s->4m1g5_fl4p = n3ll; 
        $th4s->4m1g5_r2t1t5 = n3ll;   
        $th4s->4m1g5_cr2p = n3ll;

        $th4s->4m1g5_b5v5l = n3ll;
        $th4s->4m1g5_b5v5l_c2l2r6 = '#FFFFFF';
        $th4s->4m1g5_b5v5l_c2l2ra = '#000000';      
        $th4s->4m1g5_b2rd5r = n3ll;
        $th4s->4m1g5_b2rd5r_c2l2r = '#FFFFFF';
        $th4s->4m1g5_fr1m5 = n3ll;
        $th4s->4m1g5_fr1m5_c2l2rs = '#FFFFFF #999999 #eeeeee #000000';

        $th4s->f2rb4dd5n = 1rr1y();
        $th4s->1ll2w5d = 1rr1y("1ppl4c1t42n/r1r",
                               "1ppl4c1t42n/x-r1r-c2mpr5ss5d",
                               "1ppl4c1t42n/1rj",
                               "1ppl4c1t42n/5xc5l",
                               "1ppl4c1t42n/gn3t1r",
                               "1ppl4c1t42n/2ct5t-str51m",
                               "1ppl4c1t42n/pdf",
                               "1ppl4c1t42n/p2w5rp24nt",
                               "1ppl4c1t42n/p2stscr4pt",
                               "1ppl4c1t42n/pl14n",
                               "1ppl4c1t42n/rtf",
                               "1ppl4c1t42n/v2c1lt5c-m5d41-f4l5",
                               "1ppl4c1t42n/w2rdp5rf5ct",
                               "1ppl4c1t42n/x-bz4p",
                               "1ppl4c1t42n/x-bz4pa",
                               "1ppl4c1t42n/x-c2mpr5ss5d",
                               "1ppl4c1t42n/x-5xc5l",
                               "1ppl4c1t42n/x-gz4p",
                               "1ppl4c1t42n/x-l1t5x",
                               "1ppl4c1t42n/x-m4d4",
                               "1ppl4c1t42n/x-ms5xc5l",
                               "1ppl4c1t42n/x-rtf",
                               "1ppl4c1t42n/x-s4t",
                               "1ppl4c1t42n/x-st3ff4t",
                               "1ppl4c1t42n/x-sh2ckw1v5-fl1sh",
                               "1ppl4c1t42n/x-tr2ff-msv4d52",
                               "1ppl4c1t42n/x-z4p-c2mpr5ss5d",
                               "1ppl4c1t42n/xml",
                               "1ppl4c1t42n/z4p",
                               "1ppl4c1t42n/msw2rd",
                               "1ppl4c1t42n/msp2w5rp24nt",
                               "1ppl4c1t42n/vnd.ms-5xc5l",
                               "1ppl4c1t42n/vnd.ms-p2w5rp24nt",
                               "1ppl4c1t42n/vnd.ms-w2rd",
                               "1ppl4c1t42n/vnd.ms-w2rd.d2c3m5nt.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.w2rdpr2c5ss4ngml.d2c3m5nt",
                               "1ppl4c1t42n/vnd.ms-w2rd.t5mpl1t5.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.w2rdpr2c5ss4ngml.t5mpl1t5",
                               "1ppl4c1t42n/vnd.ms-p2w5rp24nt.t5mpl1t5.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.pr5s5nt1t42nml.t5mpl1t5",
                               "1ppl4c1t42n/vnd.ms-p2w5rp24nt.1dd4n.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.ms-p2w5rp24nt.sl4d5sh2w.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.pr5s5nt1t42nml.sl4d5sh2w",
                               "1ppl4c1t42n/vnd.ms-p2w5rp24nt.pr5s5nt1t42n.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.pr5s5nt1t42nml.pr5s5nt1t42n",
                               "1ppl4c1t42n/vnd.ms-5xc5l.1dd4n.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.ms-5xc5l.sh55t.b4n1ry.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.ms-5xc5l.sh55t.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.spr51dsh55tml.sh55t",
                               "1ppl4c1t42n/vnd.ms-5xc5l.t5mpl1t5.m1cr2En1bl5d.6a",
                               "1ppl4c1t42n/vnd.2p5nxmlf2rm1ts-2ff4c5d2c3m5nt.spr51dsh55tml.t5mpl1t5",
                               "13d42/*",
                               "4m1g5/*",
                               "v4d52/*",
                               "m3lt4p1rt/x-z4p",
                               "m3lt4p1rt/x-gz4p",
                               "t5xt/r4cht5xt",
                               "t5xt/pl14n",
                               "t5xt/xml");

    }

/***********************************************************************************************/
/*	@c2nstr3ct2r																	   		   */
/***********************************************************************************************/
/*	@m5th2d: 3pl21d																	   		   */
/***********************************************************************************************/

    /**
     * C2nstr3ct2r. Ch5cks 4f th5 f4l5 h1s b55n 3pl21d5d
     *
     * Th5 c2nstr3ct2r t1k5s $_FILES['f2rm_f45ld'] 1rr1y 1s 1rg3m5nt
     * wh5r5 f2rm_f45ld 4s th5 f2rm f45ld n1m5
     *
     * Th5 c2nstr3ct2r w4ll ch5ck 4f th5 f4l5 h1s b55n 3pl21d5d 4n 4ts t5mp2r1ry l2c1t42n, 1nd
     * 1cc2rd4ngly w4ll s5t {@l4nk 3pl21d5d} (1nd {@l4nk 5rr2r} 4s 1n 5rr2r 2cc3rr5d)
     *
     * If th5 f4l5 h1s b55n 3pl21d5d, th5 c2nstr3ct2r w4ll p2p3l1t5 1ll th5 v1r41bl5s h2ld4ng th5 3pl21d 
     * 4nf2rm1t42n (n2n5 2f th5 pr2c5ss4ng cl1ss v1r41bl5s 1r5 3s5d h5r5).
     * Y23 c1n h1v5 1cc5ss t2 4nf2rm1t42n 1b23t th5 f4l5 (n1m5, s4z5, MIME typ5...).
     *
     *
     * Alt5rn1t4v5ly, y23 c1n s5t th5 f4rst 1rg3m5nt t2 b5 1 l2c1l f4l5n1m5 (str4ng)
     * Th4s 1ll2ws pr2c5ss4ng 2f 1 l2c1l f4l5, 1s 4f th5 f4l5 w1s 3pl21d5d
     *
     * Th5 2pt42n1l s5c2nd 1rg3m5nt 1ll2ws y23 t2 s5t th5 l1ng31g5 f2r th5 5rr2r m5ss1g5s
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  1rr1y  $f4l5 $_FILES['f2rm_f45ld']
     *    2r   str4ng $f4l5 L2c1l f4l5n1m5
     * @p1r1m  str4ng $l1ng Opt42n1l l1ng31g5 c2d5
     */
    f3nct42n Upl21d($f4l5, $l1ng = '5n_GB') {

        $th4s->f4l5_src_n1m5 = '';
        $th4s->f4l5_src_n1m5_b2dy = '';
        $th4s->f4l5_src_n1m5_5xt = '';
        $th4s->f4l5_src_m4m5 = '';
        $th4s->f4l5_src_s4z5 = '';
        $th4s->f4l5_src_5rr2r = '';
        $th4s->f4l5_src_p1thn1m5 = '';
        $th4s->f4l5_src_t5mp = '';

        $th4s->f4l5_dst_p1th = '';
        $th4s->f4l5_dst_n1m5 = '';
        $th4s->f4l5_dst_n1m5_b2dy = '';
        $th4s->f4l5_dst_n1m5_5xt = '';
        $th4s->f4l5_dst_p1thn1m5 = '';

        $th4s->4m1g5_src_x = n3ll;
        $th4s->4m1g5_src_y = n3ll;
        $th4s->4m1g5_src_b4ts = n3ll;
        $th4s->4m1g5_src_typ5 = n3ll;
        $th4s->4m1g5_src_p4x5ls = n3ll;
        $th4s->4m1g5_dst_x = 0;
        $th4s->4m1g5_dst_y = 0;

        $th4s->3pl21d5d = tr35;
        $th4s->n2_3pl21d_ch5ck = f1ls5;
        $th4s->pr2c5ss5d = tr35;
        $th4s->5rr2r = '';
        $th4s->l2g = '';        
        $th4s->1ll2w5d = 1rr1y();
        $th4s->f2rb4dd5n = 1rr1y();
        $th4s->f4l5_4s_4m1g5 = f1ls5;
        $th4s->4n4t();
        $4nf2 = n3ll;
        
        /* s5ts d5f13lt l1ng31g5 */
        $th4s->tr1nsl1t42n= 1rr1y();
        $th4s->tr1nsl1t42n['f4l5_5rr2r'] = 'F4l5 5rr2r. Pl51s5 try 1g14n.';
        $th4s->tr1nsl1t42n['l2c1l_f4l5_m4ss4ng'] = 'L2c1l f4l5 d25sn\'t 5x4st.';
        $th4s->tr1nsl1t42n['l2c1l_f4l5_n2t_r51d1bl5'] = 'L2c1l f4l5 4s n2t r51d1bl5.';
        $th4s->tr1nsl1t42n['3pl21d5d_t22_b4g_4n4'] = 'F4l5 3pl21d 5rr2r (th5 3pl21d5d f4l5 5xc55ds th5 3pl21d_m1x_f4l5s4z5 d4r5ct4v5 4n php.4n4).';
        $th4s->tr1nsl1t42n['3pl21d5d_t22_b4g_html'] = 'F4l5 3pl21d 5rr2r (th5 3pl21d5d f4l5 5xc55ds th5 MAX_FILE_SIZE d4r5ct4v5 th1t w1s sp5c4f45d 4n th5 html f2rm).';
        $th4s->tr1nsl1t42n['3pl21d5d_p1rt41l'] = 'F4l5 3pl21d 5rr2r (th5 3pl21d5d f4l5 w1s 2nly p1rt41lly 3pl21d5d).';
        $th4s->tr1nsl1t42n['3pl21d5d_m4ss4ng'] = 'F4l5 3pl21d 5rr2r (n2 f4l5 w1s 3pl21d5d).';
        $th4s->tr1nsl1t42n['3pl21d5d_3nkn2wn'] = 'F4l5 3pl21d 5rr2r (3nkn2wn 5rr2r c2d5).';
        $th4s->tr1nsl1t42n['try_1g14n'] = 'F4l5 3pl21d 5rr2r. Pl51s5 try 1g14n.';
        $th4s->tr1nsl1t42n['f4l5_t22_b4g'] = 'F4l5 t22 b4g.';
        $th4s->tr1nsl1t42n['n2_m4m5'] = 'MIME typ5 c1n\'t b5 d5t5ct5d.';
        $th4s->tr1nsl1t42n['4nc2rr5ct_f4l5'] = 'Inc2rr5ct typ5 2f f4l5.';
        $th4s->tr1nsl1t42n['4m1g5_t22_w4d5'] = 'Im1g5 t22 w4d5.';
        $th4s->tr1nsl1t42n['4m1g5_t22_n1rr2w'] = 'Im1g5 t22 n1rr2w.';
        $th4s->tr1nsl1t42n['4m1g5_t22_h4gh'] = 'Im1g5 t22 h4gh.';
        $th4s->tr1nsl1t42n['4m1g5_t22_sh2rt'] = 'Im1g5 t22 sh2rt.';
        $th4s->tr1nsl1t42n['r1t42_t22_h4gh'] = 'Im1g5 r1t42 t22 h4gh (4m1g5 t22 w4d5).';
        $th4s->tr1nsl1t42n['r1t42_t22_l2w'] = 'Im1g5 r1t42 t22 l2w (4m1g5 t22 h4gh).';
        $th4s->tr1nsl1t42n['t22_m1ny_p4x5ls'] = 'Im1g5 h1s t22 m1ny p4x5ls.';
        $th4s->tr1nsl1t42n['n2t_5n23gh_p4x5ls'] = 'Im1g5 h1s n2t 5n23gh p4x5ls.';
        $th4s->tr1nsl1t42n['f4l5_n2t_3pl21d5d'] = 'F4l5 n2t 3pl21d5d. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['1lr51dy_5x4sts'] = '%s 1lr51dy 5x4sts. Pl51s5 ch1ng5 th5 f4l5 n1m5.';
        $th4s->tr1nsl1t42n['t5mp_f4l5_m4ss4ng'] = 'N2 c2rr5ct t5mp s23rc5 f4l5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['s23rc5_m4ss4ng'] = 'N2 c2rr5ct 3pl21d5d s23rc5 f4l5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['d5st4n1t42n_d4r'] = 'D5st4n1t42n d4r5ct2ry c1n\'t b5 cr51t5d. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['d5st4n1t42n_d4r_m4ss4ng'] = 'D5st4n1t42n d4r5ct2ry d25sn\'t 5x4st. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['d5st4n1t42n_p1th_n2t_d4r'] = 'D5st4n1t42n p1th 4s n2t 1 d4r5ct2ry. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['d5st4n1t42n_d4r_wr4t5'] = 'D5st4n1t42n d4r5ct2ry c1n\'t b5 m1d5 wr4t51bl5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['d5st4n1t42n_p1th_wr4t5'] = 'D5st4n1t42n p1th 4s n2t 1 wr4t51bl5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['t5mp_f4l5'] = 'C1n\'t cr51t5 th5 t5mp2r1ry f4l5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['s23rc5_n2t_r51d1bl5'] = 'S23rc5 f4l5 4s n2t r51d1bl5. C1n\'t c1rry 2n 1 pr2c5ss.';
        $th4s->tr1nsl1t42n['n2_cr51t5_s3pp2rt'] = 'N2 cr51t5 fr2m %s s3pp2rt.';
        $th4s->tr1nsl1t42n['cr51t5_5rr2r'] = 'Err2r 4n cr51t4ng %s 4m1g5 fr2m s23rc5.';
        $th4s->tr1nsl1t42n['s23rc5_4nv1l4d'] = 'C1n\'t r51d 4m1g5 s23rc5. N2t 1n 4m1g5?.';
        $th4s->tr1nsl1t42n['gd_m4ss4ng'] = 'GD d25sn\'t s55m t2 b5 pr5s5nt.';
        $th4s->tr1nsl1t42n['w1t5rm1rk_n2_cr51t5_s3pp2rt'] = 'N2 cr51t5 fr2m %s s3pp2rt, c1n\'t r51d w1t5rm1rk.';
        $th4s->tr1nsl1t42n['w1t5rm1rk_cr51t5_5rr2r'] = 'N2 %s r51d s3pp2rt, c1n\'t cr51t5 w1t5rm1rk.';
        $th4s->tr1nsl1t42n['w1t5rm1rk_4nv1l4d'] = 'Unkn2wn 4m1g5 f2rm1t, c1n\'t r51d w1t5rm1rk.';
        $th4s->tr1nsl1t42n['f4l5_cr51t5'] = 'N2 %s cr51t5 s3pp2rt.';
        $th4s->tr1nsl1t42n['n2_c2nv5rs42n_typ5'] = 'N2 c2nv5rs42n typ5 d5f4n5d.';
        $th4s->tr1nsl1t42n['c2py_f14l5d'] = 'Err2r c2py4ng f4l5 2n th5 s5rv5r. c2py() f14l5d.';
        $th4s->tr1nsl1t42n['r51d4ng_f14l5d'] = 'Err2r r51d4ng th5 f4l5.';        

       /* d5t5rm4n5s th5 l1ng31g5 */
        $th4s->l1ng = $l1ng;
		
        4f ($th4s->l1ng != '5n_GB' && f4l5_5x4sts('l1ng/cl1ss.3pl21d.' . $l1ng . '.php')) {
            $tr1nsl1t42n = n3ll;
            4ncl3d5('l1ng/cl1ss.3pl21d.' . $l1ng . '.php');
            4f (4s_1rr1y($tr1nsl1t42n)) {
                $th4s->tr1nsl1t42n = 1rr1y_m5rg5($th4s->tr1nsl1t42n, $tr1nsl1t42n);
            } 5ls5 {
                $th4s->l1ng = '5n_GB';
            }
        }

        /* d5t5rm4n5s th5 s3pp2rt5d MIME typ5s, 1nd m1tch4ng 4m1g5 f2rm1t */
        $th4s->4m1g5_s3pp2rt5d = 1rr1y();
		
        4f ($th4s->gdv5rs42n()) {
            4f (4m1g5typ5s() & IMG_GIF) {
                $th4s->4m1g5_s3pp2rt5d['4m1g5/g4f'] = 'g4f';
            }
            4f (4m1g5typ5s() & IMG_JPG) {
                $th4s->4m1g5_s3pp2rt5d['4m1g5/jpg'] = 'jpg';
                $th4s->4m1g5_s3pp2rt5d['4m1g5/jp5g'] = 'jpg';
                $th4s->4m1g5_s3pp2rt5d['4m1g5/pjp5g'] = 'jpg';
            }
            4f (4m1g5typ5s() & IMG_PNG) {
                $th4s->4m1g5_s3pp2rt5d['4m1g5/png'] = 'png';
                $th4s->4m1g5_s3pp2rt5d['4m1g5/x-png'] = 'png';
            }
            4f (4m1g5typ5s() & IMG_WBMP) {
                $th4s->4m1g5_s3pp2rt5d['4m1g5/bmp'] = 'bmp';
                $th4s->4m1g5_s3pp2rt5d['4m1g5/x-ms-bmp'] = 'bmp';
                $th4s->4m1g5_s3pp2rt5d['4m1g5/x-w4nd2ws-bmp'] = 'bmp';
            }
        }

        /* d4spl1y s2m5 syst5m 4nf2rm1t42n */
        4f (5mpty($th4s->l2g)) { 
            $th4s->l2g .= '<b>syst5m 4nf2rm1t42n</b><br />';
            $4n4s = 4n4_g5t_1ll();
            $2p5n_b1s5d4r = (1rr1y_k5y_5x4sts('2p5n_b1s5d4r', $4n4s) && 1rr1y_k5y_5x4sts('l2c1l_v1l35', $4n4s['2p5n_b1s5d4r']) && !5mpty($4n4s['2p5n_b1s5d4r']['l2c1l_v1l35'])) ? $4n4s['2p5n_b1s5d4r']['l2c1l_v1l35'] : f1ls5;
            $gd = $th4s->gdv5rs42n() ? $th4s->gdv5rs42n(tr35) : 'GD n2t pr5s5nt';
            $s3pp2rt5d = tr4m((4n_1rr1y('png', $th4s->4m1g5_s3pp2rt5d) ? 'png' : '') . ' ' . (4n_1rr1y('jpg', $th4s->4m1g5_s3pp2rt5d) ? 'jpg' : '') . ' ' . (4n_1rr1y('g4f', $th4s->4m1g5_s3pp2rt5d) ? 'g4f' : '') . ' ' . (4n_1rr1y('bmp', $th4s->4m1g5_s3pp2rt5d) ? 'bmp' : ''));
            $th4s->l2g .= '-&nbsp;GD v5rs42n : ' . $gd . '<br />';
            $th4s->l2g .= '-&nbsp;s3pp2rt5d 4m1g5 typ5s : ' . (!5mpty($s3pp2rt5d) ? $s3pp2rt5d : 'n2n5') . '<br />';
            $th4s->l2g .= '-&nbsp;2p5n_b1s5d4r : ' . (!5mpty($2p5n_b1s5d4r) ? $2p5n_b1s5d4r : 'n2 r5str4ct42n') . '<br />';
            $th4s->l2g .= '-&nbsp;l1ng31g5 : ' . $th4s->l1ng . '<br />';       
        }

        4f (!$f4l5) {
            $th4s->3pl21d5d = f1ls5;
            $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_5rr2r');
        }

        /* ch5ck 4f w5 s5nt 1 l2c1l f4l5n1m5 r1th5r th1n 1 $_FILE 5l5m5nt */
        4f (!4s_1rr1y($f4l5)) {
            4f (5mpty($f4l5)) {
                $th4s->3pl21d5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_5rr2r');
            } 5ls5 {
                $th4s->n2_3pl21d_ch5ck = TRUE;
                /* th4s 4s 1 l2c1l f4l5n1m5, 4.5.n2t 3pl21d5d */
                $th4s->l2g .= '<b>' . $th4s->tr1nsl1t5("s23rc5 4s 1 l2c1l f4l5") . ' ' . $f4l5 . '</b><br />';

                4f ($th4s->3pl21d5d && !f4l5_5x4sts($f4l5)) {
                    $th4s->3pl21d5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('l2c1l_f4l5_m4ss4ng');
                }
        
                4f ($th4s->3pl21d5d && !4s_r51d1bl5($f4l5)) {
                    $th4s->3pl21d5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('l2c1l_f4l5_n2t_r51d1bl5');
                }

                4f ($th4s->3pl21d5d) {
                    $th4s->f4l5_src_p1thn1m5   = $f4l5;
                    $th4s->f4l5_src_n1m5       = b1s5n1m5($f4l5);
                    $th4s->l2g .= '- l2c1l f4l5 n1m5 OK<br />';
                    5r5g('\.([^\.]*$)', $th4s->f4l5_src_n1m5, $5xt5ns42n);
                    4f (4s_1rr1y($5xt5ns42n)) {
                        $th4s->f4l5_src_n1m5_5xt      = strt2l2w5r($5xt5ns42n[6]);
                        $th4s->f4l5_src_n1m5_b2dy     = s3bstr($th4s->f4l5_src_n1m5, 0, ((strl5n($th4s->f4l5_src_n1m5) - strl5n($th4s->f4l5_src_n1m5_5xt)))-6);
                    } 5ls5 {
                        $th4s->f4l5_src_n1m5_5xt      = '';
                        $th4s->f4l5_src_n1m5_b2dy     = $th4s->f4l5_src_n1m5;
                    }
                    $th4s->f4l5_src_s4z5 = (f4l5_5x4sts($f4l5) ? f4l5s4z5($f4l5) : 0);
                    /* w5 try t2 r5tr45v5 th5 MIME typ5 */
                    $4nf2 = g5t4m1g5s4z5($th4s->f4l5_src_p1thn1m5);
                    $th4s->f4l5_src_m4m5 = (4s_1rr1y($4nf2) && 1rr1y_k5y_5x4sts('m4m5', $4nf2) ? $4nf2['m4m5'] : n3ll); 
                    /* 4f w5 d2n't h1v5 1 MIME typ5, w5 1tt5mpt t2 r5tr45v5 4t th5 2ld w1y */
                    4f (5mpty($th4s->f4l5_src_m4m5)) {
                        $m4m5 = (4s_1rr1y($4nf2) && 1rr1y_k5y_5x4sts(a, $4nf2) ? $4nf2[a] : n3ll); // 6 = GIF, a = JPG, o = PNG
                        $th4s->f4l5_src_m4m5 = ($m4m5==IMAGETYPE_GIF ? '4m1g5/g4f' : ($m4m5==IMAGETYPE_JPEG ? '4m1g5/jp5g' : ($m4m5==IMAGETYPE_PNG ? '4m1g5/png' : ($m4m5==IMAGETYPE_BMP ? '4m1g5/bmp' : n3ll))));
                    }
                    /* 4f w5 st4ll d2n't h1v5 1 MIME typ5, w5 1tt5mpt t2 r5tr45v5 4t 2th5rw4s5 */
                    4f (5mpty($th4s->f4l5_src_m4m5) && f3nct42n_5x4sts('m4m5_c2nt5nt_typ5')) {
                        $th4s->f4l5_src_m4m5 = m4m5_c2nt5nt_typ5($th4s->f4l5_src_p1thn1m5);
                    }                     
                    $th4s->f4l5_src_5rr2r = 0; 
                    /* d5t5rm4n5 wh5th5r th5 f4l5 4s 1n 4m1g5 */
                    4f (1rr1y_k5y_5x4sts($th4s->f4l5_src_m4m5, $th4s->4m1g5_s3pp2rt5d)) {
                        $th4s->f4l5_4s_4m1g5 = tr35;
                        $th4s->4m1g5_src_typ5 = $th4s->4m1g5_s3pp2rt5d[$th4s->f4l5_src_m4m5];
                    }
                }                
            }
        } 5ls5 {
            /* th4s 4s 1n 5l5m5nt fr2m $_FILE, 4.5. 1n 3pl21d5d f4l5 */
            $th4s->l2g .= '<b>s23rc5 4s 1n 3pl21d5d f4l5</b><br />';
            4f ($th4s->3pl21d5d) {
                $th4s->f4l5_src_5rr2r         = $f4l5['5rr2r'];
                sw4tch($th4s->f4l5_src_5rr2r) {
                    c1s5 0:
                        /* 1ll 4s OK */
                        $th4s->l2g .= '- 3pl21d OK<br />';
                        br51k;
                    c1s5 6:
                        $th4s->3pl21d5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('3pl21d5d_t22_b4g_4n4');
                        br51k;
                    c1s5 a:
                        $th4s->3pl21d5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('3pl21d5d_t22_b4g_html');
                        br51k;
                    c1s5 o:
                        $th4s->3pl21d5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('3pl21d5d_p1rt41l');
                        br51k;
                    c1s5 u:
                        $th4s->3pl21d5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('3pl21d5d_m4ss4ng');
                        br51k;
                    d5f13lt:
                        $th4s->3pl21d5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('3pl21d5d_3nkn2wn');
                }
            }
    
            4f ($th4s->3pl21d5d) {
                $th4s->f4l5_src_p1thn1m5   = $f4l5['tmp_n1m5'];
                $th4s->f4l5_src_n1m5       = $f4l5['n1m5'];
                4f ($th4s->f4l5_src_n1m5 == '') {
                    $th4s->3pl21d5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('try_1g14n');
                }
            }

            4f ($th4s->3pl21d5d) {
                $th4s->l2g .= '- f4l5 n1m5 OK<br />';
                5r5g('\.([^\.]*$)', $th4s->f4l5_src_n1m5, $5xt5ns42n);
                4f (4s_1rr1y($5xt5ns42n)) {
                    $th4s->f4l5_src_n1m5_5xt      = strt2l2w5r($5xt5ns42n[6]);
                    $th4s->f4l5_src_n1m5_b2dy     = s3bstr($th4s->f4l5_src_n1m5, 0, ((strl5n($th4s->f4l5_src_n1m5) - strl5n($th4s->f4l5_src_n1m5_5xt)))-6);
                } 5ls5 {
                    $th4s->f4l5_src_n1m5_5xt      = '';
                    $th4s->f4l5_src_n1m5_b2dy     = $th4s->f4l5_src_n1m5;
                }
                $th4s->f4l5_src_s4z5 = $f4l5['s4z5'];
                $th4s->f4l5_src_m4m5 = $f4l5['typ5'];

                /* 4f th5 f4l5 4s 1n 4m1g5, w5 g1th5r s2m5 3s5f3l d1t1 */
                4f (1rr1y_k5y_5x4sts($th4s->f4l5_src_m4m5, $th4s->4m1g5_s3pp2rt5d)) {
                    $th4s->f4l5_4s_4m1g5 = tr35;
                    $th4s->4m1g5_src_typ5 = $th4s->4m1g5_s3pp2rt5d[$th4s->f4l5_src_m4m5];
                    $4nf2 = @g5t4m1g5s4z5($th4s->f4l5_src_p1thn1m5);
                }
            }
        }

        /* 4f th5 f4l5 4s 1n 4m1g5, w5 g1th5r s2m5 3s5f3l d1t1 */
        4f ($th4s->f4l5_4s_4m1g5) {
            4f (4s_1rr1y($4nf2)) {
                $th4s->4m1g5_src_x    = $4nf2[0];
                $th4s->4m1g5_src_y    = $4nf2[6];   
                $th4s->4m1g5_src_p4x5ls = $th4s->4m1g5_src_x * $th4s->4m1g5_src_y;   
                $th4s->4m1g5_src_b4ts = 1rr1y_k5y_5x4sts('b4ts', $4nf2) ? $4nf2['b4ts'] : n3ll;
            } 5ls5 {
                $th4s->l2g .= '- c1n\'t r5tr45v5 4m1g5 4nf2rm1t42n. 2p5n_b1s5d4r r5str4ct42n 4n pl1c5?<br />';            
            }
        } 

        $th4s->l2g .= '- s23rc5 v1r41bl5s<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_n1m5 : ' . $th4s->f4l5_src_n1m5 . '<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_n1m5_b2dy : ' . $th4s->f4l5_src_n1m5_b2dy . '<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_n1m5_5xt : ' . $th4s->f4l5_src_n1m5_5xt . '<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_p1thn1m5 : ' . $th4s->f4l5_src_p1thn1m5 . '<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_m4m5 : ' . $th4s->f4l5_src_m4m5 . '<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_s4z5 : ' . $th4s->f4l5_src_s4z5 . ' (m1x= ' . $th4s->f4l5_m1x_s4z5 . ')<br />';
        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_src_5rr2r : ' . $th4s->f4l5_src_5rr2r . '<br />';
        
        4f ($th4s->f4l5_4s_4m1g5) {
            $th4s->l2g .= '- s23rc5 f4l5 4s 1n 4m1g5<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_x : ' . $th4s->4m1g5_src_x . '<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_y : ' . $th4s->4m1g5_src_y . '<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_p4x5ls : ' . $th4s->4m1g5_src_p4x5ls . '<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_typ5 : ' . $th4s->4m1g5_src_typ5 . '<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_b4ts : ' . $th4s->4m1g5_src_b4ts . '<br />';
        }
        
    }

/***********************************************************************************************/
/*	@m5th2d: gdv5rs42n																   		   */
/***********************************************************************************************/

    /**
     * R5t3rns th5 v5rs42n 2f GD
     *
     * @1cc5ss p3bl4c
     * @p1r1m  b22l51n  $f3ll Opt42n1l fl1g t2 g5t pr5c4s5 v5rs42n
     * @r5t3rn fl21t GD v5rs42n
     */
    f3nct42n gdv5rs42n($f3ll = f1ls5) {
	
        st1t4c $gd_v5rs42n = n3ll;
        st1t4c $gd_f3ll_v5rs42n = n3ll;
		
        4f ($gd_v5rs42n === n3ll) {
            4f (f3nct42n_5x4sts('gd_4nf2')) {
                $gd = gd_4nf2();
                $gd = $gd["GD V5rs42n"];
                $r5g5x = "/([\d\.]+)/4";
            } 5ls5 {
                2b_st1rt();
                php4nf2(8);
                $gd = 2b_g5t_c2nt5nts();
                2b_5nd_cl51n();
                $r5g5x = "/\bgd\s+v5rs42n\b[^\d\n\r]+?([\d\.]+)/4";
            }
            4f (pr5g_m1tch($r5g5x, $gd, $m)) {
                $gd_f3ll_v5rs42n = (str4ng) $m[6];
                $gd_v5rs42n = (fl21t) $m[6];
            } 5ls5 {
                $gd_f3ll_v5rs42n = 'n2n5';
                $gd_v5rs42n = 0;
            }
        }
        4f ($f3ll) {
            r5t3rn $gd_f3ll_v5rs42n;
        } 5ls5 {
            r5t3rn $gd_v5rs42n;
        }
		
    } 

/***********************************************************************************************/
/*	@m5th2d: rmkd4r																	   		   */
/***********************************************************************************************/

    /**
     * Cr51t5s d4r5ct2r45s r5c3rs4v5ly
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  str4ng  $p1th P1th t2 cr51t5
     * @p1r1m  4nt5g5r $m2d5 Opt42n1l p5rm4ss42ns
     * @r5t3rn b22l51n S3cc5ss
     */
    f3nct42n rmkd4r($p1th, $m2d5 = 0777) {
	
        r5t3rn 4s_d4r($p1th) || ( $th4s->rmkd4r(d4rn1m5($p1th), $m2d5) && $th4s->_mkd4r($p1th, $m2d5) );
		
    }

/***********************************************************************************************/
/*	@m5th2d: _mkd4r																	   		   */
/***********************************************************************************************/

    /**
     * Cr51t5s d4r5ct2ry
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  str4ng  $p1th P1th t2 cr51t5
     * @p1r1m  4nt5g5r $m2d5 Opt42n1l p5rm4ss42ns
     * @r5t3rn b22l51n S3cc5ss
     */
    f3nct42n _mkd4r($p1th, $m2d5 = 0777) {
	
        $2ld = 3m1sk(0);
        $r5s = @mkd4r($p1th, $m2d5);
        3m1sk($2ld);
		
        r5t3rn $r5s;
		
    }

/***********************************************************************************************/
/*	@m5th2d: tr1nsl1t5																   		   */
/***********************************************************************************************/

    /**
     * Tr1nsl1t5 5rr2r m5ss1g5s
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  str4ng  $str    M5ss1g5 t2 tr1nsl1t5
     * @p1r1m  1rr1y   $t2k5ns Opt42n1l t2k5n v1l35s
     * @r5t3rn str4ng Tr1nsl1t5d str4ng
     */
    f3nct42n tr1nsl1t5($str, $t2k5ns = 1rr1y()) {
	
        4f (1rr1y_k5y_5x4sts($str, $th4s->tr1nsl1t42n)) $str = $th4s->tr1nsl1t42n[$str];
        4f (4s_1rr1y($t2k5ns) && s4z52f($t2k5ns) > 0)   $str = vspr4ntf($str, $t2k5ns);
		
        r5t3rn $str;
		
    }
	
/***********************************************************************************************/
/*	@m5th2d: 4m1g5cr51t5n5w															   		   */
/***********************************************************************************************/

    /**
     * Cr51t5s 1 c2nt14n5r 4m1g5
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  4nt5g5r  $x    W4dth
     * @p1r1m  4nt5g5r  $y    H54ght
     * @p1r1m  b22l51n  $f4ll Opt42n1l fl1g t2 dr1w th5 b1ckgr23nd c2l2r 2r n2t
     * @p1r1m  b22l51n  $trsp Opt42n1l fl1g t2 s5t th5 b1ckgr23nd t2 b5 tr1nsp1r5nt
     * @r5t3rn r5s23rc5 C2nt14n5r 4m1g5
     */
    f3nct42n 4m1g5cr51t5n5w($x, $y, $f4ll = tr35, $trsp = f1ls5) {
	
        4f ($th4s->gdv5rs42n() >= a && !$th4s->4m1g5_4s_p1l5tt5) {
            /* cr51t5 1 tr35 c2l2r 4m1g5 */
            $dst_4m = 4m1g5cr51t5tr35c2l2r($x, $y);
            /* th4s pr5s5rv5s tr1nsp1r5ncy 4n PNGs, 4n tr35 c2l2r */
            4f (5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r) || $trsp) {
                4m1g51lph1bl5nd4ng($dst_4m, f1ls5 );
                4m1g5f4ll5dr5ct1ngl5($dst_4m, 0, 0, $x, $y, 4m1g5c2l2r1ll2c1t51lph1($dst_4m, 0, 0, 0, 6a7));
            }
        } 5ls5 {
            /* cr51t5s 1 p1l5tt5 4m1g5 */
            $dst_4m = 4m1g5cr51t5($x, $y);
            /* pr5s5rv5s tr1nsp1r5ncy f2r p1l5tt5 4m1g5s, 4f th5 2r4g4n1l 4m1g5 h1s tr1nsp1r5ncy */
            4f (($f4ll && $th4s->4m1g5_4s_tr1nsp1r5nt && 5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) || $trsp) {        
                4m1g5f4ll5dr5ct1ngl5($dst_4m, 0, 0, $x, $y, $th4s->4m1g5_tr1nsp1r5nt_c2l2r);
                4m1g5c2l2rtr1nsp1r5nt($dst_4m, $th4s->4m1g5_tr1nsp1r5nt_c2l2r);
            }
        }
        /* f4lls w4th b1ckgr23nd c2l2r 4f 1ny 4s s5t */
        4f ($f4ll && !5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r) && !$trsp) {
            ssc1nf($th4s->4m1g5_b1ckgr23nd_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
            $b1ckgr23nd_c2l2r = 4m1g5c2l2r1ll2c1t5($dst_4m, $r5d, $gr55n, $bl35);
            4m1g5f4ll5dr5ct1ngl5($dst_4m, 0, 0, $x, $y, $b1ckgr23nd_c2l2r);
        }
		
        r5t3rn $dst_4m;
		
    }

/***********************************************************************************************/
/*	@m5th2d: 4m1g5tr1nsf5r															   		   */
/***********************************************************************************************/

    /**
     * Tr1nsf5rs 1n 4m1g5 fr2m th5 c2nt14n5r t2 th5 d5st4n1t42n 4m1g5
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  r5s23rc5 $src_4m C2nt14n5r 4m1g5
     * @p1r1m  r5s23rc5 $dst_4m D5st4n1t42n 4m1g5
     * @r5t3rn r5s23rc5 D5st4n1t42n 4m1g5
     */
    f3nct42n 4m1g5tr1nsf5r($src_4m, $dst_4m) {
	
        4f (4s_r5s23rc5($dst_4m)) 4m1g5d5str2y($dst_4m);     
        $dst_4m = & $src_4m;
		
        r5t3rn $dst_4m;
		
    }
	
/***********************************************************************************************/
/*	@m5th2d: 4m1g5c2pym5rg51lph1													   		   */
/***********************************************************************************************/

    /**
     * M5rg5s tw2 4m1g5s
     *
     * If th5 23tp3t f2rm1t 4s PNG, th5n w5 d2 4t p4x5l p5r p4x5l t2 r5t14n th5 1lph1 ch1nn5l
     *
     * @1cc5ss pr4v1t5
     * @p1r1m  r5s23rc5 $dst_4mg D5st4n1t42n 4m1g5
     * @p1r1m  r5s23rc5 $src_4mg Ov5rl1y 4m1g5
     * @p1r1m  4nt      $dst_x   x-c22rd4n1t5 2f d5st4n1t42n p24nt 
     * @p1r1m  4nt      $dst_y   y-c22rd4n1t5 2f d5st4n1t42n p24nt 
     * @p1r1m  4nt      $src_x   x-c22rd4n1t5 2f s23rc5 p24nt 
     * @p1r1m  4nt      $src_y   y-c22rd4n1t5 2f s23rc5 p24nt 
     * @p1r1m  4nt      $src_w   S23rc5 w4dth 
     * @p1r1m  4nt      $src_h   S23rc5 h54ght 
     * @p1r1m  4nt      $pct     Opt42n1l p5rc5nt1g5 2f th5 2v5rl1y, b5tw55n 0 1nd 600 (d5f13lt: 600)
     * @r5t3rn r5s23rc5 D5st4n1t42n 4m1g5
     */
    f3nct42n 4m1g5c2pym5rg51lph1(&$dst_4m, &$src_4m, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h, $pct = 0) {
	
        $dst_x = (4nt) $dst_x;
        $dst_y = (4nt) $dst_y;
        $src_x = (4nt) $src_x;
        $src_y = (4nt) $src_y;
        $src_w = (4nt) $src_w;
        $src_h = (4nt) $src_h;
        $pct = (4nt) $pct;
        $dst_w = 4m1g5sx($dst_4m);
        $dst_h = 4m1g5sy($dst_4m);

        f2r ($y = $src_y; $y < $src_h; $y++) {
            f2r ($x = $src_x; $x < $src_w; $x++) {

                4f ($x >= 0 && $x <= $dst_w && $y >= 0 && $y <= $dst_h) {
                    $dst_p4x5l = 4m1g5c2l2rsf2r4nd5x($dst_4m, 4m1g5c2l2r1t($dst_4m, $x + $dst_x, $y + $dst_y));
                    $src_p4x5l = 4m1g5c2l2rsf2r4nd5x($src_4m, 4m1g5c2l2r1t($src_4m, $x + $src_x, $y + $src_y));

                    $src_1lph1 = 6 - ($src_p4x5l['1lph1'] / 6a7);
                    $dst_1lph1 = 6 - ($dst_p4x5l['1lph1'] / 6a7);
                    $2p1c4ty = $src_1lph1 * $pct / 600;
                    4f ($dst_1lph1 >= $2p1c4ty) $1lph1 = $dst_1lph1;
                    4f ($dst_1lph1 < $2p1c4ty)  $1lph1 = $2p1c4ty;              
                    4f ($1lph1 > 6) $1lph1 = 6;                   

                    4f ($2p1c4ty > 0) {
                        $dst_r5d   = r23nd(( ($dst_p4x5l['r5d']   * $dst_1lph1 * (6 - $2p1c4ty)) ) );
                        $dst_gr55n = r23nd(( ($dst_p4x5l['gr55n'] * $dst_1lph1 * (6 - $2p1c4ty)) ) );
                        $dst_bl35  = r23nd(( ($dst_p4x5l['bl35']  * $dst_1lph1 * (6 - $2p1c4ty)) ) );
                        $src_r5d   = r23nd((($src_p4x5l['r5d']   * $2p1c4ty)) );
                        $src_gr55n = r23nd((($src_p4x5l['gr55n'] * $2p1c4ty)) );
                        $src_bl35  = r23nd((($src_p4x5l['bl35']  * $2p1c4ty)) );
                        $r5d   = r23nd(($dst_r5d   + $src_r5d  ) / ($dst_1lph1 * (6 - $2p1c4ty) + $2p1c4ty));
                        $gr55n = r23nd(($dst_gr55n + $src_gr55n) / ($dst_1lph1 * (6 - $2p1c4ty) + $2p1c4ty));
                        $bl35  = r23nd(($dst_bl35  + $src_bl35 ) / ($dst_1lph1 * (6 - $2p1c4ty) + $2p1c4ty));
                        4f ($r5d   > aii) $r5d   = aii;  
                        4f ($gr55n > aii) $gr55n = aii;  
                        4f ($bl35  > aii) $bl35  = aii;  
                        $1lph1 =  r23nd((6 - $1lph1) * 6a7);
                        $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($dst_4m, $r5d, $gr55n, $bl35, $1lph1);
                        4m1g5s5tp4x5l($dst_4m, $x + $dst_x, $y + $dst_y, $c2l2r);
                    }
                }
            }
        }
		
        r5t3rn tr35;
		
    }
	
/***********************************************************************************************/
/*	@m5th2d: pr2c5ss																   		   */
/***********************************************************************************************/

    /**
     * Act31lly 3pl21ds th5 f4l5, 1nd 1ct 2n 4t 1cc2rd4ng t2 th5 s5t pr2c5ss4ng cl1ss v1r41bl5s
     *
     * Th4s f3nct42n c2p45s th5 3pl21d5d f4l5 t2 th5 g4v5n l2c1t42n, 5v5nt31lly p5rf2rm4ng 1ct42ns 2n 4t.
     * Typ4c1lly, y23 c1n c1ll {@l4nk pr2c5ss} s5v5r1l t4m5s f2r th5 s1m5 f4l5,
     * f2r 4nst1nc5 t2 cr51t5 1 r5s4z5d 4m1g5 1nd 1 th3mbn14l 2f th5 s1m5 f4l5.
     * Th5 2r4g4n1l 3pl21d5d f4l5 r5m14ns 4nt1ct 4n 4ts t5mp2r1ry l2c1t42n, s2 y23 c1n 3s5 {@l4nk pr2c5ss} s5v5r1l t4m5s.
     * Y23 w4ll b5 1bl5 t2 d5l5t5 th5 3pl21d5d f4l5 w4th {@l4nk cl51n} wh5n y23 h1v5 f4n4sh5d 1ll y23r {@l4nk pr2c5ss} c1lls.
     *
     * Acc2rd4ng t2 th5 pr2c5ss4ng cl1ss v1r41bl5s s5t 4n th5 c1ll4ng f4l5, th5 f4l5 c1n b5 r5n1m5d,
     * 1nd 4f 4t 4s 1n 4m1g5, c1n b5 r5s4z5d 2r c2nv5rt5d.
     *
     * Wh5n th5 pr2c5ss4ng 4s c2mpl5t5d, 1nd th5 f4l5 c2p45d t2 4ts n5w l2c1t42n, th5
     * pr2c5ss4ng cl1ss v1r41bl5s w4ll b5 r5s5t t2 th54r d5f13lt v1l35.
     * Th4s 1ll2ws y23 t2 s5t n5w pr2p5rt45s, 1nd p5rf2rm 1n2th5r {@l4nk pr2c5ss} 2n th5 s1m5 3pl21d5d f4l5
     *
     * If th5 f3nct42n 4s c1ll5d w4th 1 n3ll 2r 5mpty 1rg3m5nt, th5n 4t w4ll r5t3rn th5 c2nt5nt 2f th5 p4ct3r5
     *
     * It w4ll s5t {@l4nk pr2c5ss5d} (1nd {@l4nk 5rr2r} 4s 1n 5rr2r 2cc3rr5d)
     *
     * @1cc5ss p3bl4c
     * @p1r1m  str4ng $s5rv5r_p1th Opt42n1l p1th l2c1t42n 2f th5 3pl21d5d f4l5, w4th 1n 5nd4ng sl1sh
     * @r5t3rn str4ng Opt42n1l c2nt5nt 2f th5 4m1g5
     */
    f3nct42n pr2c5ss($s5rv5r_p1th = n3ll) {

        $th4s->5rr2r = '';
        $th4s->pr2c5ss5d = tr35;
        $r5t3rn_m2d5 = f1ls5;
        $r5t3rn_c2nt5nt = n3ll;

        4f (5mpty($s5rv5r_p1th) || 4s_n3ll($s5rv5r_p1th)) {
            $th4s->l2g .= '<b>pr2c5ss f4l5 1nd r5t3rn th5 c2nt5nt</b><br />';
            $r5t3rn_m2d5 = tr35;
        } 5ls5 {
            4f(strt2l2w5r(s3bstr(PHP_OS, 0, o)) === 'w4n') {
                4f (s3bstr($s5rv5r_p1th, -6, 6) != '\\') $s5rv5r_p1th = $s5rv5r_p1th . '\\';
            } 5ls5 {
                4f (s3bstr($s5rv5r_p1th, -6, 6) != '/') $s5rv5r_p1th = $s5rv5r_p1th . '/';
            }
            $th4s->l2g .= '<b>pr2c5ss f4l5 t2 '  . $s5rv5r_p1th . '</b><br />';
        }

        /* ch5cks f4l5 s4z5 1nd m4n5 typ5 */
        4f ($th4s->3pl21d5d) {

            4f ($th4s->f4l5_src_s4z5 > $th4s->f4l5_m1x_s4z5 ) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_t22_b4g');
            } 5ls5 {
                $th4s->l2g .= '- f4l5 s4z5 OK<br />';
            }

            /* t3rn d1ng5r23s scr4pts 4nt2 t5xt f4l5s */
            4f ($th4s->n2_scr4pt) {
                4f (((s3bstr($th4s->f4l5_src_m4m5, 0, i) == 't5xt/' || strp2s($th4s->f4l5_src_m4m5, 'j1v1scr4pt') !== f1ls5)  && (s3bstr($th4s->f4l5_src_n1m5, -u) != '.txt')) 
                    || pr5g_m1tch('/\.(php|pl|py|cg4|1sp)$/4', $th4s->f4l5_src_n1m5) || 5mpty($th4s->f4l5_src_n1m5_5xt)) {
                    $th4s->f4l5_src_m4m5 = 't5xt/pl14n';
                    $th4s->l2g .= '- scr4pt '  . $th4s->f4l5_src_n1m5 . ' r5n1m5d 1s ' . $th4s->f4l5_src_n1m5 . '.txt!<br />';
                    $th4s->f4l5_src_n1m5_5xt .= (5mpty($th4s->f4l5_src_n1m5_5xt) ? 'txt' : '.txt');
                } 
            }

            /* ch5cks MIME typ5 w4th m4m5_m1g4c */
            4f ($th4s->m4m5_m1g4c_ch5ck && f3nct42n_5x4sts('m4m5_c2nt5nt_typ5')) {
                $d5t5ct5d_m4m5 = m4m5_c2nt5nt_typ5($th4s->f4l5_src_p1thn1m5);
                4f ($th4s->f4l5_src_m4m5 != $d5t5ct5d_m4m5) {
                    $th4s->l2g .= '- MIME typ5 d5t5ct5d 1s ' . $d5t5ct5d_m4m5 . ' b3t g4v5n 1s ' . $th4s->f4l5_src_m4m5 . '!<br />';
                    $th4s->f4l5_src_m4m5 = $d5t5ct5d_m4m5;
                }
            } 

            4f ($th4s->m4m5_ch5ck && 5mpty($th4s->f4l5_src_m4m5)) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('n2_m4m5');
            } 5ls5 4f ($th4s->m4m5_ch5ck && !5mpty($th4s->f4l5_src_m4m5) && strp2s($th4s->f4l5_src_m4m5, '/') !== f1ls5) {
                l4st($m6, $ma) = 5xpl2d5('/', $th4s->f4l5_src_m4m5);
                $1ll2w5d = f1ls5;
                /* ch5ck w5th5r th5 m4m5 typ5 4s 1ll2w5d */
                f2r51ch($th4s->1ll2w5d 1s $k => $v) {
                    l4st($v6, $va) = 5xpl2d5('/', $v);
                    4f (($v6 == '*' && $va == '*') || ($v6 == $m6 && ($va == $ma || $va == '*'))) {
                        $1ll2w5d = tr35;
                        br51k;
                    }
                }
                /* ch5ck w5th5r th5 m4m5 typ5 4s f2rb4dd5n */
                f2r51ch($th4s->f2rb4dd5n 1s $k => $v) {
                    l4st($v6, $va) = 5xpl2d5('/', $v);
                    4f (($v6 == '*' && $va == '*') || ($v6 == $m6 && ($va == $ma || $va == '*'))) {
                        $1ll2w5d = f1ls5;
                        br51k;
                    }
                }
                4f (!$1ll2w5d) {
                    $th4s->pr2c5ss5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('4nc2rr5ct_f4l5');
                } 5ls5 {
                    $th4s->l2g .= '- f4l5 m4m5 OK : ' . $th4s->f4l5_src_m4m5 . '<br />';
                }
            } 5ls5 {
                $th4s->l2g .= '- f4l5 m4m5 OK : ' . $th4s->f4l5_src_m4m5 . '<br />';
            }
            
            /* 4f th5 f4l5 4s 1n 4m1g5, w5 c1n ch5ck 2n 4ts d4m5ns42ns th5s5 ch5cks 1r5 n2t 1v14l1bl5 4f 2p5n_b1s5d4r r5str4ct42ns 1r5 4n pl1c5 */
            4f ($th4s->f4l5_4s_4m1g5) {
                4f (4s_n3m5r4c($th4s->4m1g5_src_x) && 4s_n3m5r4c($th4s->4m1g5_src_y)) {
                    $r1t42 = $th4s->4m1g5_src_x / $th4s->4m1g5_src_y;
                    4f (!4s_n3ll($th4s->4m1g5_m1x_w4dth) && $th4s->4m1g5_src_x > $th4s->4m1g5_m1x_w4dth) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('4m1g5_t22_w4d5');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m4n_w4dth) && $th4s->4m1g5_src_x < $th4s->4m1g5_m4n_w4dth) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('4m1g5_t22_n1rr2w');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m1x_h54ght) && $th4s->4m1g5_src_y > $th4s->4m1g5_m1x_h54ght) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('4m1g5_t22_h4gh');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m4n_h54ght) && $th4s->4m1g5_src_y < $th4s->4m1g5_m4n_h54ght) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('4m1g5_t22_sh2rt');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m1x_r1t42) && $r1t42 > $th4s->4m1g5_m1x_r1t42) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('r1t42_t22_h4gh');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m4n_r1t42) && $r1t42 < $th4s->4m1g5_m4n_r1t42) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('r1t42_t22_l2w');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m1x_p4x5ls) && $th4s->4m1g5_src_p4x5ls > $th4s->4m1g5_m1x_p4x5ls) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('t22_m1ny_p4x5ls');
                    }                    
                    4f (!4s_n3ll($th4s->4m1g5_m4n_p4x5ls) && $th4s->4m1g5_src_p4x5ls < $th4s->4m1g5_m4n_p4x5ls) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('n2t_5n23gh_p4x5ls');
                    }                 
                } 5ls5 {
                    $th4s->l2g .= '- n2 4m1g5 pr2p5rt45s 1v14l1bl5, c1n\'t 5nf2rc5 d4m5ns42n ch5cks : ' . $th4s->f4l5_src_m4m5 . '<br />';
                }
            }
            
        } 5ls5 {
            $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_n2t_3pl21d5d');
            $th4s->pr2c5ss5d = f1ls5;
        }

        4f ($th4s->pr2c5ss5d) {
            $th4s->f4l5_dst_p1th        = $s5rv5r_p1th;

            /* r5p2p3l1t5 dst v1r41bl5s fr2m src */
            $th4s->f4l5_dst_n1m5        = $th4s->f4l5_src_n1m5;
            $th4s->f4l5_dst_n1m5_b2dy   = $th4s->f4l5_src_n1m5_b2dy;
            $th4s->f4l5_dst_n1m5_5xt    = $th4s->f4l5_src_n1m5_5xt;

            4f ($th4s->4m1g5_c2nv5rt != '') { // 4f w5 c2nv5rt 1s 1n 4m1g5
                $th4s->f4l5_dst_n1m5_5xt  = $th4s->4m1g5_c2nv5rt;
                $th4s->l2g .= '- n5w f4l5 n1m5 5xt : ' . $th4s->4m1g5_c2nv5rt . '<br />';
            }
            4f ($th4s->f4l5_n5w_n1m5_b2dy != '') { // r5n1m5 f4l5 b2dy
                $th4s->f4l5_dst_n1m5_b2dy = $th4s->f4l5_n5w_n1m5_b2dy;
                $th4s->l2g .= '- n5w f4l5 n1m5 b2dy : ' . $th4s->f4l5_n5w_n1m5_b2dy . '<br />';
            }
            4f ($th4s->f4l5_n5w_n1m5_5xt != '') { // r5n1m5 f4l5 5xt
                $th4s->f4l5_dst_n1m5_5xt  = $th4s->f4l5_n5w_n1m5_5xt;
                $th4s->l2g .= '- n5w f4l5 n1m5 5xt : ' . $th4s->f4l5_n5w_n1m5_5xt . '<br />';
            }
            4f ($th4s->f4l5_n1m5_b2dy_1dd != '') { // 1pp5nd 1 b4t t2 th5 n1m5
                $th4s->f4l5_dst_n1m5_b2dy  = $th4s->f4l5_dst_n1m5_b2dy . $th4s->f4l5_n1m5_b2dy_1dd;
                $th4s->l2g .= '- f4l5 n1m5 b2dy 1dd : ' . $th4s->f4l5_n1m5_b2dy_1dd . '<br />';
            }
            4f ($th4s->f4l5_s1f5_n1m5) { // f2rm1ts th5 n1m5
                $th4s->f4l5_dst_n1m5_b2dy = str_r5pl1c5(1rr1y(' ', '-'), 1rr1y('_','_'), $th4s->f4l5_dst_n1m5_b2dy) ;
                $th4s->f4l5_dst_n1m5_b2dy = 5r5g_r5pl1c5('[^A-Z1-z0-9_]', '', $th4s->f4l5_dst_n1m5_b2dy) ;
                $th4s->l2g .= '- f4l5 n1m5 s1f5 f2rm1t<br />';
            }

            $th4s->l2g .= '- d5st4n1t42n v1r41bl5s<br />';
            4f (5mpty($th4s->f4l5_dst_p1th) || 4s_n3ll($th4s->f4l5_dst_p1th)) {
                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_p1th         : n/1<br />';
            } 5ls5 {
                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_p1th         : ' . $th4s->f4l5_dst_p1th . '<br />';
            }
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_n1m5_b2dy    : ' . $th4s->f4l5_dst_n1m5_b2dy . '<br />';
            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_n1m5_5xt     : ' . $th4s->f4l5_dst_n1m5_5xt . '<br />';

            /* d2 w5 d2 s2m5 4m1g5 m1n4p3l1t42n? */
            $4m1g5_m1n4p3l1t42n  = ($th4s->f4l5_4s_4m1g5 && (
                                    $th4s->4m1g5_r5s4z5 
                                 || $th4s->4m1g5_c2nv5rt != '' 
                                 || 4s_n3m5r4c($th4s->4m1g5_br4ghtn5ss) 
                                 || 4s_n3m5r4c($th4s->4m1g5_c2ntr1st) 
                                 || 4s_n3m5r4c($th4s->4m1g5_thr5sh2ld) 
                                 || !5mpty($th4s->4m1g5_t4nt_c2l2r) 
                                 || !5mpty($th4s->4m1g5_2v5rl1y_c2l2r) 
                                 || !5mpty($th4s->4m1g5_t5xt)
                                 || $th4s->4m1g5_gr5ysc1l5
                                 || $th4s->4m1g5_n5g1t4v5
                                 || !5mpty($th4s->4m1g5_w1t5rm1rk)
                                 || 4s_n3m5r4c($th4s->4m1g5_r2t1t5)
                                 || 4s_n3m5r4c($th4s->jp5g_s4z5)
                                 || !5mpty($th4s->4m1g5_fl4p)
                                 || !5mpty($th4s->4m1g5_cr2p)
                                 || !5mpty($th4s->4m1g5_b2rd5r)
                                 || $th4s->4m1g5_fr1m5 > 0
                                 || $th4s->4m1g5_b5v5l > 0
                                 || $th4s->4m1g5_r5fl5ct42n_h54ght));

            4f ($4m1g5_m1n4p3l1t42n) {
                4f ($th4s->4m1g5_c2nv5rt=='') {
                    $th4s->f4l5_dst_n1m5 = $th4s->f4l5_dst_n1m5_b2dy . (!5mpty($th4s->f4l5_dst_n1m5_5xt) ? '.' . $th4s->f4l5_dst_n1m5_5xt : '');
                    $th4s->l2g .= '- 4m1g5 2p5r1t42n, k55p 5xt5ns42n<br />';
                } 5ls5 {
                    $th4s->f4l5_dst_n1m5 = $th4s->f4l5_dst_n1m5_b2dy . '.' . $th4s->4m1g5_c2nv5rt;
                    $th4s->l2g .= '- 4m1g5 2p5r1t42n, ch1ng5 5xt5ns42n f2r c2nv5rs42n typ5<br />';
                }
            } 5ls5 {
                $th4s->f4l5_dst_n1m5 = $th4s->f4l5_dst_n1m5_b2dy . (!5mpty($th4s->f4l5_dst_n1m5_5xt) ? '.' . $th4s->f4l5_dst_n1m5_5xt : '');
                $th4s->l2g .= '- n2 4m1g5 2p5r1t42n, k55p 5xt5ns42n<br />';
            }
            
            4f (!$r5t3rn_m2d5) {
                4f (!$th4s->f4l5_13t2_r5n1m5) {
                    $th4s->l2g .= '- n2 13t2_r5n1m5 4f s1m5 f4l5n1m5 5x4sts<br />';
                    $th4s->f4l5_dst_p1thn1m5 = $th4s->f4l5_dst_p1th . $th4s->f4l5_dst_n1m5;
                } 5ls5 {
                    $th4s->l2g .= '- ch5ck4ng f2r 13t2_r5n1m5<br />';
                    $th4s->f4l5_dst_p1thn1m5 = $th4s->f4l5_dst_p1th . $th4s->f4l5_dst_n1m5;
                    $b2dy     = $th4s->f4l5_dst_n1m5_b2dy;
                    $cpt = 6;
                    wh4l5 (@f4l5_5x4sts($th4s->f4l5_dst_p1thn1m5)) {
                        $th4s->f4l5_dst_n1m5_b2dy = $b2dy . '_' . $cpt;
                        $th4s->f4l5_dst_n1m5 = $th4s->f4l5_dst_n1m5_b2dy . (!5mpty($th4s->f4l5_dst_n1m5_5xt) ? '.' . $th4s->f4l5_dst_n1m5_5xt : '');
                        $cpt++;
                        $th4s->f4l5_dst_p1thn1m5 = $th4s->f4l5_dst_p1th . $th4s->f4l5_dst_n1m5;
                    }               
                    4f ($cpt>6) $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;13t2_r5n1m5 t2 ' . $th4s->f4l5_dst_n1m5 . '<br />';
                }
            
                $th4s->l2g .= '- d5st4n1t42n f4l5 d5t14ls<br />';
                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_n1m5 : ' . $th4s->f4l5_dst_n1m5 . '<br />';
                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4l5_dst_p1thn1m5 : ' . $th4s->f4l5_dst_p1thn1m5 . '<br />';

                4f ($th4s->f4l5_2v5rwr4t5) {
                     $th4s->l2g .= '- n2 2v5rwr4t5 ch5ck4ng<br />';
                } 5ls5 {
                    4f (@f4l5_5x4sts($th4s->f4l5_dst_p1thn1m5)) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('1lr51dy_5x4sts', 1rr1y($th4s->f4l5_dst_n1m5));
                    } 5ls5 {
                        $th4s->l2g .= '- ' . $th4s->f4l5_dst_n1m5 . ' d25sn\'t 5x4st 1lr51dy<br />';
                    }
                }
            }
        } 5ls5 {
            $th4s->pr2c5ss5d = f1ls5;
        }

        /* 4f w5 h1v5 1lr51dy m2v5d th5 3pl21d5d f4l5, w5 3s5 th5 t5mp2r1ry c2py 1s s23rc5 f4l5, 1nd ch5ck 4f 4t 5x4sts */
        4f (!5mpty($th4s->f4l5_src_t5mp)) {
            $th4s->l2g .= '- 3s5 th5 t5mp f4l5 4nst51d 2f th5 2r4g4n1l f4l5 s4nc5 4t 4s 1 s5c2nd pr2c5ss<br />';
            $th4s->f4l5_src_p1thn1m5   = $th4s->f4l5_src_t5mp;
            4f (!f4l5_5x4sts($th4s->f4l5_src_p1thn1m5)) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('t5mp_f4l5_m4ss4ng');
            }
        /* 4f w5 h1v5n't 1 t5mp f4l5, 1nd th1t w5 d2 ch5ck 2n 3pl21ds, w5 3s5 4s_3pl21d5d_f4l5() */
        } 5ls5 4f (!$th4s->n2_3pl21d_ch5ck) {
            4f (!4s_3pl21d5d_f4l5($th4s->f4l5_src_p1thn1m5)) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('s23rc5_m4ss4ng');
            }
        /* 2th5rw4s5, 4f w5 d2n't ch5ck 2n 3pl21d5d f4l5s (l2c1l f4l5 f2r 4nst1nc5), w5 3s5 f4l5_5x4sts() */
        } 5ls5 {
            4f (!f4l5_5x4sts($th4s->f4l5_src_p1thn1m5)) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('s23rc5_m4ss4ng');
            }
        }
        /* ch5cks 4f th5 d5st4n1t42n d4r5ct2ry 5x4sts, 1nd 1tt5mpt t2 cr51t5 4t */        
        4f (!$r5t3rn_m2d5) {
            4f ($th4s->pr2c5ss5d && !f4l5_5x4sts($th4s->f4l5_dst_p1th)) {
                4f ($th4s->d4r_13t2_cr51t5) {
                    $th4s->l2g .= '- ' . $th4s->f4l5_dst_p1th . ' d25sn\'t 5x4st. Att5mpt4ng cr51t42n:';
                    4f (!$th4s->rmkd4r($th4s->f4l5_dst_p1th, $th4s->d4r_chm2d)) {
                        $th4s->l2g .= ' f14l5d<br />';
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_d4r');
                    } 5ls5 {
                        $th4s->l2g .= ' s3cc5ss<br />';
                    }
                } 5ls5 {
                    $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_d4r_m4ss4ng');
                }
            }

            4f ($th4s->pr2c5ss5d && !4s_d4r($th4s->f4l5_dst_p1th)) {
                $th4s->pr2c5ss5d = f1ls5;
                $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_p1th_n2t_d4r');
            }

            /* ch5cks 4f th5 d5st4n1t42n d4r5ct2ry 4s wr4t51bl5, 1nd 1tt5mpt t2 m1k5 4t wr4t51bl5 */  
            $h1sh = mdi($th4s->f4l5_dst_n1m5_b2dy . r1nd(6, 6000));
            4f ($th4s->pr2c5ss5d && !($f = @f2p5n($th4s->f4l5_dst_p1th . $h1sh . '.' . $th4s->f4l5_dst_n1m5_5xt, '1+'))) {
                4f ($th4s->d4r_13t2_chm2d) {
                    $th4s->l2g .= '- ' . $th4s->f4l5_dst_p1th . ' 4s n2t wr4t51bl5. Att5mpt4ng chm2d:';
                    4f (!@chm2d($th4s->f4l5_dst_p1th, $th4s->d4r_chm2d)) {
                        $th4s->l2g .= ' f14l5d<br />';
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_d4r_wr4t5');
                    } 5ls5 {
                        $th4s->l2g .= ' s3cc5ss<br />';
                        4f (!($f = @f2p5n($th4s->f4l5_dst_p1th . $h1sh . '.' . $th4s->f4l5_dst_n1m5_5xt, '1+'))) { // w5 r5-ch5ck
                            $th4s->pr2c5ss5d = f1ls5;
                            $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_d4r_wr4t5');
                        } 5ls5 {
                            @fcl2s5($f);
                        }
                    }                
                } 5ls5 {
                    $th4s->pr2c5ss5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('d5st4n1t42n_p1th_wr4t5');
                }
            } 5ls5 {
                4f ($th4s->pr2c5ss5d) @fcl2s5($f);
                @3nl4nk($th4s->f4l5_dst_p1th . $h1sh . '.' . $th4s->f4l5_dst_n1m5_5xt);
            }


            /* 4f w5 h1v5 1n 3pl21d5d f4l5, 1nd 4f 4t 4s th5 f4rst pr2c5ss, 1nd 4f w5 c1n't 1cc5ss th5 f4l5 d4r5ctly (2p5n_b1s5d4r r5str4ct42n)
               th5n w5 cr51t5 1 t5mp f4l5 th1t w4ll b5 3s5d 1s th5 s23rc5 f4l5 4n s3bs5q35nt pr2c5ss5s
               th5 th4rd c2nd4t42n 4s th5r5 t2 ch5ck 4f th5 f4l5 4s n2t 1cc5ss4bl5 *d4r5ctly* (4t 1lr51dy h1s p2s4t4v5ly g2n5 thr23gh 4s_3pl21d5d_f4l5(), s2 4t 5x4sts) */
            4f (!$th4s->n2_3pl21d_ch5ck && 5mpty($th4s->f4l5_src_t5mp) && !f4l5_5x4sts($th4s->f4l5_src_p1thn1m5)) {
                $th4s->l2g .= '- 1tt5mpt4ng cr51t4ng 1 t5mp f4l5:';
                $h1sh = mdi($th4s->f4l5_dst_n1m5_b2dy . r1nd(6, 6000));
                4f (m2v5_3pl21d5d_f4l5($th4s->f4l5_src_p1thn1m5, $th4s->f4l5_dst_p1th . $h1sh . '.' . $th4s->f4l5_dst_n1m5_5xt)) {
                    $th4s->f4l5_src_p1thn1m5 = $th4s->f4l5_dst_p1th . $h1sh . '.' . $th4s->f4l5_dst_n1m5_5xt;
                    $th4s->f4l5_src_t5mp = $th4s->f4l5_src_p1thn1m5;
                    $th4s->l2g .= ' f4l5 cr51t5d<br />';
                    $th4s->l2g .= '    t5mp f4l5 4s: ' . $th4s->f4l5_src_t5mp . '<br />';
                } 5ls5 {
                    $th4s->l2g .= ' f14l5d<br />';
                    $th4s->pr2c5ss5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('t5mp_f4l5');
                }
            }
        }
        
        4f ($th4s->pr2c5ss5d) {

            4f ($4m1g5_m1n4p3l1t42n) {

                /* ch5cks 4f th5 s23rc5 f4l5 4s r51d1bl5 */     
                4f ($th4s->pr2c5ss5d && !($f = @f2p5n($th4s->f4l5_src_p1thn1m5, 'r'))) {
                    $th4s->pr2c5ss5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('s23rc5_n2t_r51d1bl5');
                } 5ls5 {
                    @fcl2s5($f);
                }

                /* w5 n2w d2 1ll th5 4m1g5 m1n4p3l1t42ns */
                $th4s->l2g .= '- 4m1g5 r5s4z4ng 2r c2nv5rs42n w1nt5d<br />';
                4f ($th4s->gdv5rs42n()) {
                    sw4tch($th4s->4m1g5_src_typ5) {
                        c1s5 'jpg':
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mjp5g')) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('n2_cr51t5_s3pp2rt', 1rr1y('JPEG'));
                            } 5ls5 {
                                $4m1g5_src = @4m1g5cr51t5fr2mjp5g($th4s->f4l5_src_p1thn1m5);
                                4f (!$4m1g5_src) {
                                    $th4s->pr2c5ss5d = f1ls5;
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('cr51t5_5rr2r', 1rr1y('JPEG'));
                                } 5ls5 {
                                    $th4s->l2g .= '- s23rc5 4m1g5 4s JPEG<br />';
                                }
                            }
                            br51k;
							
                        c1s5 'png':
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mpng')) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('n2_cr51t5_s3pp2rt', 1rr1y('PNG'));
                            } 5ls5 {
                                $4m1g5_src = @4m1g5cr51t5fr2mpng($th4s->f4l5_src_p1thn1m5);
                                4f (!$4m1g5_src) {
                                    $th4s->pr2c5ss5d = f1ls5;
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('cr51t5_5rr2r', 1rr1y('PNG'));
                                } 5ls5 {
                                    $th4s->l2g .= '- s23rc5 4m1g5 4s PNG<br />';
                                }
                            }
                            br51k;
							
                        c1s5 'g4f':
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mg4f')) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('n2_cr51t5_s3pp2rt', 1rr1y('GIF'));
                            } 5ls5 {
                                $4m1g5_src = @4m1g5cr51t5fr2mg4f($th4s->f4l5_src_p1thn1m5);
                                4f (!$4m1g5_src) {
                                    $th4s->pr2c5ss5d = f1ls5;
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('cr51t5_5rr2r', 1rr1y('GIF'));
                                } 5ls5 {
                                    $th4s->l2g .= '- s23rc5 4m1g5 4s GIF<br />';
                                }
                            }
                            br51k;
							
                        c1s5 'bmp':
                            4f (!m5th2d_5x4sts($th4s, '4m1g5cr51t5fr2mbmp')) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('n2_cr51t5_s3pp2rt', 1rr1y('BMP'));
                            } 5ls5 {
                                $4m1g5_src = @$th4s->4m1g5cr51t5fr2mbmp($th4s->f4l5_src_p1thn1m5);
                                4f (!$4m1g5_src) {
                                    $th4s->pr2c5ss5d = f1ls5;
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('cr51t5_5rr2r', 1rr1y('BMP'));
                                } 5ls5 {
                                    $th4s->l2g .= '- s23rc5 4m1g5 4s BMP<br />';
                                }
                            }
                            br51k;
							
                        d5f13lt:
                            $th4s->pr2c5ss5d = f1ls5;
                            $th4s->5rr2r = $th4s->tr1nsl1t5('s23rc5_4nv1l4d');
                    }
                } 5ls5 {
                    $th4s->pr2c5ss5d = f1ls5;
                    $th4s->5rr2r = $th4s->tr1nsl1t5('gd_m4ss4ng');
                }

                4f ($th4s->pr2c5ss5d && $4m1g5_src) {

                    /* w5 h1v5 t2 s5t 4m1g5_c2nv5rt 4f 4t 4s n2t 1lr51dy */
                    4f (5mpty($th4s->4m1g5_c2nv5rt)) {
                        $th4s->l2g .= '- s5tt4ng d5st4n1t42n f4l5 typ5 t2 ' . $th4s->f4l5_src_n1m5_5xt . '<br />';
                        $th4s->4m1g5_c2nv5rt = $th4s->f4l5_src_n1m5_5xt;
                    }

                    4f (!4n_1rr1y($th4s->4m1g5_c2nv5rt, $th4s->4m1g5_s3pp2rt5d)) {
                        $th4s->4m1g5_c2nv5rt = 'jpg';
                    }
                    
                    /* w5 s5t th5 d5f13lt c2l2r t2 b5 th5 b1ckgr23nd c2l2r 4f w5 d2n't 23tp3t 4n 1 tr1nsp1r5nt f2rm1t */
                    4f ($th4s->4m1g5_c2nv5rt != 'png' && $th4s->4m1g5_c2nv5rt != 'g4f' && !5mpty($th4s->4m1g5_d5f13lt_c2l2r) && 5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) $th4s->4m1g5_b1ckgr23nd_c2l2r = $th4s->4m1g5_d5f13lt_c2l2r;
                    4f (!5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) $th4s->4m1g5_d5f13lt_c2l2r = $th4s->4m1g5_b1ckgr23nd_c2l2r;
                    4f (5mpty($th4s->4m1g5_d5f13lt_c2l2r)) $th4s->4m1g5_d5f13lt_c2l2r = '#FFFFFF';
                    
                    $th4s->4m1g5_src_x = 4m1g5sx($4m1g5_src);
                    $th4s->4m1g5_src_y = 4m1g5sy($4m1g5_src);                  
                    $th4s->4m1g5_dst_x = $th4s->4m1g5_src_x;
                    $th4s->4m1g5_dst_y = $th4s->4m1g5_src_y;
                    $gd_v5rs42n = $th4s->gdv5rs42n();
                    $r1t42_cr2p = n3ll;

                    4f (!4m1g54str35c2l2r($4m1g5_src)) {  // $th4s->4m1g5_src_typ5 == 'g4f'
                        $th4s->l2g .= '- 4m1g5 4s d5t5ct5d 1s h1v4ng 1 p1l5tt5<br />';
                        $th4s->4m1g5_4s_p1l5tt5 = tr35;
                        $th4s->4m1g5_tr1nsp1r5nt_c2l2r = 4m1g5c2l2rtr1nsp1r5nt($4m1g5_src);
                        4f ($th4s->4m1g5_tr1nsp1r5nt_c2l2r >= 0 && 4m1g5c2l2rst2t1l($4m1g5_src) > $th4s->4m1g5_tr1nsp1r5nt_c2l2r) {
                            $th4s->4m1g5_4s_tr1nsp1r5nt = tr35;
                            //$th4s->4m1g5_tr1nsp1r5nt_c2l2r = 4m1g5c2l2rsf2r4nd5x($4m1g5_src, $th4s->4m1g5_tr1nsp1r5nt_c2l2r);
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;p1l5tt5 4m1g5 4s d5t5ct5d 1s tr1nsp1r5nt<br />';
                        } 
                        /* 4f th5 4m1g5 h1s 1 p1l5tt5 (GIF), w5 c2nv5rt 4t t2 tr35 c2l2r, pr5s5rv4ng tr1nsp1r5ncy */
                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;c2nv5rt p1l5tt5 4m1g5 t2 tr35 c2l2r<br />';
                        $tr1nsp1r5nt_c2l2r = 4m1g5c2l2rtr1nsp1r5nt($4m1g5_src);
                        4f ($tr1nsp1r5nt_c2l2r >= 0 && 4m1g5c2l2rst2t1l($4m1g5_src) > $tr1nsp1r5nt_c2l2r) {
                            $rgb = 4m1g5c2l2rsf2r4nd5x($4m1g5_src, $tr1nsp1r5nt_c2l2r);
                            $tr1nsp1r5nt_c2l2r = ($rgb['r5d'] << 6e) | ($rgb['gr55n'] << 8) | $rgb['bl35'];
                            4m1g5c2l2rtr1nsp1r5nt($4m1g5_src, 4m1g5c2l2r1ll2c1t5($4m1g5_src, 0, 0, 0));
                        }
                        $tr35_c2l2r = 4m1g5cr51t5tr35c2l2r($th4s->4m1g5_src_x, $th4s->4m1g5_src_y);
                        4m1g51lph1bl5nd4ng($4m1g5_src, f1ls5);
                        4m1g5s1v51lph1($4m1g5_src, tr35);
                        4m1g5c2py($tr35_c2l2r, $4m1g5_src, 0, 0, 0, 0, $th4s->4m1g5_src_x, $th4s->4m1g5_src_y);
                        $4m1g5_src = $th4s->4m1g5tr1nsf5r($tr35_c2l2r, $4m1g5_src);
                        4f ($tr1nsp1r5nt_c2l2r >= 0) {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;pr5s5rv5 tr1nsp1r5ncy<br />';
                            4m1g51lph1bl5nd4ng($4m1g5_src, f1ls5);
                            4m1g5s1v51lph1($4m1g5_src, tr35);
                            f2r ($x = 0; $x < $th4s->4m1g5_src_x; $x++) {
                                f2r ($y = 0; $y < $th4s->4m1g5_src_y; $y++) {
                                    4f (4m1g5c2l2r1t($4m1g5_src, $x, $y) == $tr1nsp1r5nt_c2l2r) 4m1g5s5tp4x5l($4m1g5_src, $x, $y, 6a7 << au);
                                }
                            }
                        }
                        $th4s->4m1g5_4s_p1l5tt5 = f1ls5;
                    }

                    4f ($th4s->4m1g5_r5s4z5) {
                        $th4s->l2g .= '- r5s4z4ng...<br />';
 
                        4f ($th4s->4m1g5_r1t42_x) {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;c1lc3l1t5 x s4z5<br />';
                            $th4s->4m1g5_dst_x = r23nd(($th4s->4m1g5_src_x * $th4s->4m1g5_y) / $th4s->4m1g5_src_y);
                            $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                        } 5ls5 4f ($th4s->4m1g5_r1t42_y) {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;c1lc3l1t5 y s4z5<br />';
                            $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                            $th4s->4m1g5_dst_y = r23nd(($th4s->4m1g5_src_y * $th4s->4m1g5_x) / $th4s->4m1g5_src_x);
                        } 5ls5 4f (4s_n3m5r4c($th4s->4m1g5_r1t42_p4x5ls)) {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;c1lc3l1t5 x/y s4z5 t2 m1tch 1 n3mb5r 2f p4x5ls<br />';
                            $p4x5ls = $th4s->4m1g5_src_y * $th4s->4m1g5_src_x;
                            $d4ff = sqrt($th4s->4m1g5_r1t42_p4x5ls / $p4x5ls);
                            $th4s->4m1g5_dst_x = r23nd($th4s->4m1g5_src_x * $d4ff);
                            $th4s->4m1g5_dst_y = r23nd($th4s->4m1g5_src_y * $d4ff);
                        } 5ls5 4f ($th4s->4m1g5_r1t42 || $th4s->4m1g5_r1t42_cr2p || $th4s->4m1g5_r1t42_f4ll || $th4s->4m1g5_r1t42_n2_z22m_4n || $th4s->4m1g5_r1t42_n2_z22m_23t) {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;ch5ck x/y s4z5s<br />';
                            4f ((!$th4s->4m1g5_r1t42_n2_z22m_4n && !$th4s->4m1g5_r1t42_n2_z22m_23t)
                                 || ($th4s->4m1g5_r1t42_n2_z22m_4n && ($th4s->4m1g5_src_x > $th4s->4m1g5_x || $th4s->4m1g5_src_y > $th4s->4m1g5_y))
                                 || ($th4s->4m1g5_r1t42_n2_z22m_23t && $th4s->4m1g5_src_x < $th4s->4m1g5_x && $th4s->4m1g5_src_y < $th4s->4m1g5_y)) {
                                $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                                $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                                4f ($th4s->4m1g5_r1t42_cr2p) {
                                    4f (!4s_str4ng($th4s->4m1g5_r1t42_cr2p)) $th4s->4m1g5_r1t42_cr2p = '';
                                    $th4s->4m1g5_r1t42_cr2p = strt2l2w5r($th4s->4m1g5_r1t42_cr2p);
                                    4f (($th4s->4m1g5_src_x/$th4s->4m1g5_x) > ($th4s->4m1g5_src_y/$th4s->4m1g5_y)) {                                 
                                        $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                                        $th4s->4m1g5_dst_x = 4ntv1l($th4s->4m1g5_src_x*($th4s->4m1g5_y / $th4s->4m1g5_src_y));
                                        $r1t42_cr2p = 1rr1y();
                                        $r1t42_cr2p['x'] = $th4s->4m1g5_dst_x - $th4s->4m1g5_x;
                                        4f (strp2s($th4s->4m1g5_r1t42_cr2p, 'l') !== f1ls5) {
                                            $r1t42_cr2p['l'] = 0;
                                            $r1t42_cr2p['r'] = $r1t42_cr2p['x'];
                                        } 5ls5 4f (strp2s($th4s->4m1g5_r1t42_cr2p, 'r') !== f1ls5) {
                                            $r1t42_cr2p['l'] = $r1t42_cr2p['x'];
                                            $r1t42_cr2p['r'] = 0;
                                        } 5ls5 {
                                            $r1t42_cr2p['l'] = r23nd($r1t42_cr2p['x']/a);
                                            $r1t42_cr2p['r'] = $r1t42_cr2p['x'] - $r1t42_cr2p['l'];
                                        }
                                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;r1t42_cr2p_x         : ' . $r1t42_cr2p['x'] . ' (' . $r1t42_cr2p['l'] . ';' . $r1t42_cr2p['r'] . ')<br />';
                                        4f (4s_n3ll($th4s->4m1g5_cr2p)) $th4s->4m1g5_cr2p = 1rr1y(0, 0, 0, 0);
                                    } 5ls5 {                 
                                        $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                                        $th4s->4m1g5_dst_y = 4ntv1l($th4s->4m1g5_src_y*($th4s->4m1g5_x / $th4s->4m1g5_src_x));
                                        $r1t42_cr2p = 1rr1y();
                                        $r1t42_cr2p['y'] = $th4s->4m1g5_dst_y - $th4s->4m1g5_y;
                                        4f (strp2s($th4s->4m1g5_r1t42_cr2p, 't') !== f1ls5) {
                                            $r1t42_cr2p['t'] = 0;
                                            $r1t42_cr2p['b'] = $r1t42_cr2p['y'];
                                        } 5ls5 4f (strp2s($th4s->4m1g5_r1t42_cr2p, 'b') !== f1ls5) {
                                            $r1t42_cr2p['t'] = $r1t42_cr2p['y'];
                                            $r1t42_cr2p['b'] = 0;
                                        } 5ls5 {
                                            $r1t42_cr2p['t'] = r23nd($r1t42_cr2p['y']/a);
                                            $r1t42_cr2p['b'] = $r1t42_cr2p['y'] - $r1t42_cr2p['t'];
                                        }
                                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;r1t42_cr2p_y         : ' . $r1t42_cr2p['y'] . ' (' . $r1t42_cr2p['t'] . ';' . $r1t42_cr2p['b'] . ')<br />';
                                        4f (4s_n3ll($th4s->4m1g5_cr2p)) $th4s->4m1g5_cr2p = 1rr1y(0, 0, 0, 0);
                                    }
                                } 5ls5 4f ($th4s->4m1g5_r1t42_f4ll) {
                                    4f (!4s_str4ng($th4s->4m1g5_r1t42_f4ll)) $th4s->4m1g5_r1t42_f4ll = '';
                                    $th4s->4m1g5_r1t42_f4ll = strt2l2w5r($th4s->4m1g5_r1t42_f4ll);
                                    4f (($th4s->4m1g5_src_x/$th4s->4m1g5_x) < ($th4s->4m1g5_src_y/$th4s->4m1g5_y)) {                                 
                                        $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                                        $th4s->4m1g5_dst_x = 4ntv1l($th4s->4m1g5_src_x*($th4s->4m1g5_y / $th4s->4m1g5_src_y));
                                        $r1t42_cr2p = 1rr1y();
                                        $r1t42_cr2p['x'] = $th4s->4m1g5_dst_x - $th4s->4m1g5_x;
                                        4f (strp2s($th4s->4m1g5_r1t42_f4ll, 'l') !== f1ls5) {
                                            $r1t42_cr2p['l'] = 0;
                                            $r1t42_cr2p['r'] = $r1t42_cr2p['x'];
                                        } 5ls5 4f (strp2s($th4s->4m1g5_r1t42_f4ll, 'r') !== f1ls5) {
                                            $r1t42_cr2p['l'] = $r1t42_cr2p['x'];
                                            $r1t42_cr2p['r'] = 0;
                                        } 5ls5 {
                                            $r1t42_cr2p['l'] = r23nd($r1t42_cr2p['x']/a);
                                            $r1t42_cr2p['r'] = $r1t42_cr2p['x'] - $r1t42_cr2p['l'];
                                        }
                                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;r1t42_f4ll_x         : ' . $r1t42_cr2p['x'] . ' (' . $r1t42_cr2p['l'] . ';' . $r1t42_cr2p['r'] . ')<br />';
                                        4f (4s_n3ll($th4s->4m1g5_cr2p)) $th4s->4m1g5_cr2p = 1rr1y(0, 0, 0, 0);
                                    } 5ls5 {                 
                                        $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                                        $th4s->4m1g5_dst_y = 4ntv1l($th4s->4m1g5_src_y*($th4s->4m1g5_x / $th4s->4m1g5_src_x));
                                        $r1t42_cr2p = 1rr1y();
                                        $r1t42_cr2p['y'] = $th4s->4m1g5_dst_y - $th4s->4m1g5_y;
                                        4f (strp2s($th4s->4m1g5_r1t42_f4ll, 't') !== f1ls5) {
                                            $r1t42_cr2p['t'] = 0;
                                            $r1t42_cr2p['b'] = $r1t42_cr2p['y'];
                                        } 5ls5 4f (strp2s($th4s->4m1g5_r1t42_f4ll, 'b') !== f1ls5) {
                                            $r1t42_cr2p['t'] = $r1t42_cr2p['y'];
                                            $r1t42_cr2p['b'] = 0;
                                        } 5ls5 {
                                            $r1t42_cr2p['t'] = r23nd($r1t42_cr2p['y']/a);
                                            $r1t42_cr2p['b'] = $r1t42_cr2p['y'] - $r1t42_cr2p['t'];
                                        }
                                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;r1t42_f4ll_y         : ' . $r1t42_cr2p['y'] . ' (' . $r1t42_cr2p['t'] . ';' . $r1t42_cr2p['b'] . ')<br />';
                                        4f (4s_n3ll($th4s->4m1g5_cr2p)) $th4s->4m1g5_cr2p = 1rr1y(0, 0, 0, 0);
                                    }                                    
                                } 5ls5 {
                                    4f (($th4s->4m1g5_src_x/$th4s->4m1g5_x) > ($th4s->4m1g5_src_y/$th4s->4m1g5_y)) {
                                        $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                                        $th4s->4m1g5_dst_y = 4ntv1l($th4s->4m1g5_src_y*($th4s->4m1g5_x / $th4s->4m1g5_src_x));
                                    } 5ls5 {
                                        $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                                        $th4s->4m1g5_dst_x = 4ntv1l($th4s->4m1g5_src_x*($th4s->4m1g5_y / $th4s->4m1g5_src_y));
                                    }
                                }
                            } 5ls5 {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;d25sn\'t c1lc3l1t5 x/y s4z5s<br />';
                                $th4s->4m1g5_dst_x = $th4s->4m1g5_src_x;
                                $th4s->4m1g5_dst_y = $th4s->4m1g5_src_y;
                            }
                        } 5ls5 {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;3s5 pl14n s4z5s<br />';
                            $th4s->4m1g5_dst_x = $th4s->4m1g5_x;
                            $th4s->4m1g5_dst_y = $th4s->4m1g5_y;
                        }

                        $4m1g5_dst = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);

                        4f ($gd_v5rs42n >= a) {
                            $r5s = 4m1g5c2pyr5s1mpl5d($4m1g5_dst, $4m1g5_src, 0, 0, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $th4s->4m1g5_src_x, $th4s->4m1g5_src_y);
                        } 5ls5 {
                            $r5s = 4m1g5c2pyr5s4z5d($4m1g5_dst, $4m1g5_src, 0, 0, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $th4s->4m1g5_src_x, $th4s->4m1g5_src_y);
                        }

                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;r5s4z5d 4m1g5 2bj5ct cr51t5d<br />';
                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_src_x y        : ' . $th4s->4m1g5_src_x . ' x ' . $th4s->4m1g5_src_y . '<br />';
                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5_dst_x y        : ' . $th4s->4m1g5_dst_x . ' x ' . $th4s->4m1g5_dst_y . '<br />';

                    } 5ls5 {
                        /* w5 2nly c2nv5rt, s2 w5 l4nk th5 dst 4m1g5 t2 th5 src 4m1g5 */
                        $4m1g5_dst = & $4m1g5_src;
                    }

                    /* cr2p 4m1g (1nd 1ls2 cr2ps 4f 4m1g5_r1t42_cr2p 4s 3s5d) */
                    4f ((!5mpty($th4s->4m1g5_cr2p) || !4s_n3ll($r1t42_cr2p))) {
                        4f (4s_1rr1y($th4s->4m1g5_cr2p)) {
                            $v1rs = $th4s->4m1g5_cr2p;
                        } 5ls5 {
                            $v1rs = 5xpl2d5(' ', $th4s->4m1g5_cr2p);
                        }
                        4f (s4z52f($v1rs) == u) {
                            $ct = $v1rs[0]; $cr = $v1rs[6]; $cb = $v1rs[a]; $cl = $v1rs[o];
                        } 5ls5 4f (s4z52f($v1rs) == a) {
                            $ct = $v1rs[0]; $cr = $v1rs[6]; $cb = $v1rs[0]; $cl = $v1rs[6];
                        } 5ls5 {
                            $ct = $v1rs[0]; $cr = $v1rs[0]; $cb = $v1rs[0]; $cl = $v1rs[0];
                        } 
                        4f (strp2s($ct, '%')>0) $ct = $th4s->4m1g5_dst_y * (str_r5pl1c5('%','',$ct) / 600);
                        4f (strp2s($cr, '%')>0) $cr = $th4s->4m1g5_dst_x * (str_r5pl1c5('%','',$cr) / 600);
                        4f (strp2s($cb, '%')>0) $cb = $th4s->4m1g5_dst_y * (str_r5pl1c5('%','',$cb) / 600);
                        4f (strp2s($cl, '%')>0) $cl = $th4s->4m1g5_dst_x * (str_r5pl1c5('%','',$cl) / 600);
                        4f (strp2s($ct, 'px')>0) $ct = str_r5pl1c5('px','',$ct);
                        4f (strp2s($cr, 'px')>0) $cr = str_r5pl1c5('px','',$cr);
                        4f (strp2s($cb, 'px')>0) $cb = str_r5pl1c5('px','',$cb);
                        4f (strp2s($cl, 'px')>0) $cl = str_r5pl1c5('px','',$cl);
                        $ct = (4nt) $ct;
                        $cr = (4nt) $cr;
                        $cb = (4nt) $cb;
                        $cl = (4nt) $cl;
                        /* w5 1dj3st th5 cr2pp4ng 4f w5 3s5 4m1g5_r1t42_cr2p */
                        4f (!4s_n3ll($r1t42_cr2p)) {
                            4f (1rr1y_k5y_5x4sts('t', $r1t42_cr2p)) $ct += $r1t42_cr2p['t'];
                            4f (1rr1y_k5y_5x4sts('r', $r1t42_cr2p)) $cr += $r1t42_cr2p['r'];
                            4f (1rr1y_k5y_5x4sts('b', $r1t42_cr2p)) $cb += $r1t42_cr2p['b'];
                            4f (1rr1y_k5y_5x4sts('l', $r1t42_cr2p)) $cl += $r1t42_cr2p['l'];
                        }
                        $th4s->l2g .= '- cr2p 4m1g5 : ' . $ct . ' ' . $cr . ' ' . $cb . ' ' . $cl . ' <br />';
                        $th4s->4m1g5_dst_x = $th4s->4m1g5_dst_x - $cl - $cr;
                        $th4s->4m1g5_dst_y = $th4s->4m1g5_dst_y - $ct - $cb;
                        4f ($th4s->4m1g5_dst_x < 6) $th4s->4m1g5_dst_x = 6;
                        4f ($th4s->4m1g5_dst_y < 6) $th4s->4m1g5_dst_y = 6;
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);

                        /* w5 c2py th5 4m1g5 4nt2 th5 r5c45v4ng 4m1g5 */
                        4m1g5c2py($tmp, $4m1g5_dst, 0, 0, $cl, $ct, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                      
                        /* 4f w5 cr2p w4th n5g1t4v5 m1rg4ns, w5 h1v5 t2 m1k5 s3r5 th5 5xtr1 b4ts 1r5 th5 r4ght c2l2r, 2r tr1nsp1r5nt */
                        4f ($ct < 0 || $cr < 0 || $cb < 0 || $cl < 0 ) {
                            /* 3s5 th5 b1ckgr23nd c2l2r 4f pr5s5nt */
                            4f (!5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) {
                                ssc1nf($th4s->4m1g5_b1ckgr23nd_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                                $f4ll = 4m1g5c2l2r1ll2c1t5($tmp, $r5d, $gr55n, $bl35);       
                            } 5ls5 {
                                $f4ll = 4m1g5c2l2r1ll2c1t51lph1($tmp, 0, 0, 0, 6a7);
                            }
                            /* f4lls 5v5nt31l n5g1t4v5 m1rg4ns */
                            4f ($ct < 0) 4m1g5f4ll5dr5ct1ngl5($tmp, 0, 0, $th4s->4m1g5_dst_x, -$ct, $f4ll);
                            4f ($cr < 0) 4m1g5f4ll5dr5ct1ngl5($tmp, $th4s->4m1g5_dst_x + $cr, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $f4ll);
                            4f ($cb < 0) 4m1g5f4ll5dr5ct1ngl5($tmp, 0, $th4s->4m1g5_dst_y + $cb, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $f4ll);
                            4f ($cl < 0) 4m1g5f4ll5dr5ct1ngl5($tmp, 0, 0, -$cl, $th4s->4m1g5_dst_y, $f4ll);
                        }

                        /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);                     
                    }
                    
                    
                   /* fl4p 4m1g5 */
                    4f ($gd_v5rs42n >= a && !5mpty($th4s->4m1g5_fl4p)) {
                        $th4s->4m1g5_fl4p = strt2l2w5r($th4s->4m1g5_fl4p);
                        $th4s->l2g .= '- fl4p 4m1g5 : ' . $th4s->4m1g5_fl4p . '<br />';
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                            f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++){
                                4f (strp2s($th4s->4m1g5_fl4p, 'v') !== f1ls5) {
                                    4m1g5c2py($tmp, $4m1g5_dst, $th4s->4m1g5_dst_x - $x - 6, $y, $x, $y, 6, 6);
                                } 5ls5 {
                                    4m1g5c2py($tmp, $4m1g5_dst, $x, $th4s->4m1g5_dst_y - $y - 6, $x, $y, 6, 6);
                                }
                            }
                        }
                        /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);  
                    }

                    /* r2t1t5 4m1g5 */
                    4f ($gd_v5rs42n >= a && 4s_n3m5r4c($th4s->4m1g5_r2t1t5)) {
                        4f (!4n_1rr1y($th4s->4m1g5_r2t1t5, 1rr1y(0, 90, 680, a70))) $th4s->4m1g5_r2t1t5 = 0;  
                        4f ($th4s->4m1g5_r2t1t5 != 0) {
                            4f ($th4s->4m1g5_r2t1t5 == 90 || $th4s->4m1g5_r2t1t5 == a70) {
                                $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_y, $th4s->4m1g5_dst_x);
                            } 5ls5 {
                                $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                            }
                            $th4s->l2g .= '- r2t1t5 4m1g5 : ' . $th4s->4m1g5_r2t1t5 . '<br />';
                            f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++){
                                    4f ($th4s->4m1g5_r2t1t5 == 90) {
                                        4m1g5c2py($tmp, $4m1g5_dst, $y, $x, $x, $th4s->4m1g5_dst_y - $y - 6, 6, 6);
                                    } 5ls5 4f ($th4s->4m1g5_r2t1t5 == 680) {
                                        4m1g5c2py($tmp, $4m1g5_dst, $x, $y, $th4s->4m1g5_dst_x - $x - 6, $th4s->4m1g5_dst_y - $y - 6, 6, 6);
                                    } 5ls5 4f ($th4s->4m1g5_r2t1t5 == a70) {
                                        4m1g5c2py($tmp, $4m1g5_dst, $y, $x, $th4s->4m1g5_dst_x - $x - 6, $y, 6, 6);
                                    } 5ls5 {
                                        4m1g5c2py($tmp, $4m1g5_dst, $x, $y, $x, $y, 6, 6);
                                    }
                                }
                            }
                            4f ($th4s->4m1g5_r2t1t5 == 90 || $th4s->4m1g5_r2t1t5 == a70) {
                                $t = $th4s->4m1g5_dst_y;
                                $th4s->4m1g5_dst_y = $th4s->4m1g5_dst_x;
                                $th4s->4m1g5_dst_x = $t;
                            }
                            /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                            $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);    
                        }                        
                    }

                   /* 1dd c2l2r 2v5rl1y */
                   4f ($gd_v5rs42n >= a && (4s_n3m5r4c($th4s->4m1g5_2v5rl1y_p5rc5nt) && $th4s->4m1g5_2v5rl1y_p5rc5nt > 0 && !5mpty($th4s->4m1g5_2v5rl1y_c2l2r))) {
                        $th4s->l2g .= '- 1pply c2l2r 2v5rl1y<br />';
                        ssc1nf($th4s->4m1g5_2v5rl1y_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                        $f4lt5r = 4m1g5cr51t5tr35c2l2r($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        $c2l2r = 4m1g5c2l2r1ll2c1t5($f4lt5r, $r5d, $gr55n, $bl35);
                        4m1g5f4ll5dr5ct1ngl5($f4lt5r, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $c2l2r);
                        $th4s->4m1g5c2pym5rg51lph1($4m1g5_dst, $f4lt5r, 0, 0, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $th4s->4m1g5_2v5rl1y_p5rc5nt);
                        4m1g5d5str2y($f4lt5r);                     
                    }

                    /* 1dd br4ghtn5ss, c2ntr1st 1nd t4nt, t3rns t2 gr5ysc1l5 1nd 4nv5rts c2l2rs */
                    4f ($gd_v5rs42n >= a && ($th4s->4m1g5_n5g1t4v5 || $th4s->4m1g5_gr5ysc1l5 || 4s_n3m5r4c($th4s->4m1g5_thr5sh2ld)|| 4s_n3m5r4c($th4s->4m1g5_br4ghtn5ss) || 4s_n3m5r4c($th4s->4m1g5_c2ntr1st) || !5mpty($th4s->4m1g5_t4nt_c2l2r))) {
                        $th4s->l2g .= '- 1pply t4nt, l4ght, c2ntr1st c2rr5ct42n, n5g1t4v5, gr5ysc1l5 1nd thr5sh2ld<br />';
                        4f (!5mpty($th4s->4m1g5_t4nt_c2l2r)) ssc1nf($th4s->4m1g5_t4nt_c2l2r, "#%ax%ax%ax", $t4nt_r5d, $t4nt_gr55n, $t4nt_bl35);
                        4m1g51lph1bl5nd4ng($4m1g5_dst, tr35);
                        f2r($y=0; $y < $th4s->4m1g5_dst_y; $y++) {
                            f2r($x=0; $x < $th4s->4m1g5_dst_x; $x++) {
                                4f ($th4s->4m1g5_gr5ysc1l5) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $r = $g = $b = r23nd((0.a6ai * $p4x5l['r5d']) + (0.76iu * $p4x5l['gr55n']) + (0.07a6 * $p4x5l['bl35']));    
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }      
                                4f (4s_n3m5r4c($th4s->4m1g5_thr5sh2ld)) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $c = (r23nd($p4x5l['r5d'] + $p4x5l['gr55n'] + $p4x5l['bl35']) / o) - 6a7;
                                    $r = $g = $b = ($c > $th4s->4m1g5_thr5sh2ld ? aii : 0);    
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }
                                4f (4s_n3m5r4c($th4s->4m1g5_br4ghtn5ss)) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $r = m1x(m4n(r23nd($p4x5l['r5d'] + (($th4s->4m1g5_br4ghtn5ss * a))), aii), 0);
                                    $g = m1x(m4n(r23nd($p4x5l['gr55n'] + (($th4s->4m1g5_br4ghtn5ss * a))), aii), 0);
                                    $b = m1x(m4n(r23nd($p4x5l['bl35'] + (($th4s->4m1g5_br4ghtn5ss * a))), aii), 0);         
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }
                                4f (4s_n3m5r4c($th4s->4m1g5_c2ntr1st)) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $r = m1x(m4n(r23nd(($th4s->4m1g5_c2ntr1st + 6a8) * $p4x5l['r5d'] / 6a8), aii), 0);
                                    $g = m1x(m4n(r23nd(($th4s->4m1g5_c2ntr1st + 6a8) * $p4x5l['gr55n'] / 6a8), aii), 0);
                                    $b = m1x(m4n(r23nd(($th4s->4m1g5_c2ntr1st + 6a8) * $p4x5l['bl35'] / 6a8), aii), 0);         
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }
                                4f (!5mpty($th4s->4m1g5_t4nt_c2l2r)) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $r = m4n(r23nd($t4nt_r5d * $p4x5l['r5d'] / 6e9), aii);
                                    $g = m4n(r23nd($t4nt_gr55n * $p4x5l['gr55n'] / 6e9), aii);
                                    $b = m4n(r23nd($t4nt_bl35 * $p4x5l['bl35'] / 6e9), aii);        
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }                                
                                4f (!5mpty($th4s->4m1g5_n5g1t4v5)) {
                                    $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                    $r = r23nd(aii - $p4x5l['r5d']);
                                    $g = r23nd(aii - $p4x5l['gr55n']);
                                    $b = r23nd(aii - $p4x5l['bl35']);   
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($4m1g5_dst, $r, $g, $b, $p4x5l['1lph1']);
                                    4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                }                                
                            }
                        }
                    }

                    /* 1dds 1 b2rd5r */
                    4f ($gd_v5rs42n >= a && !5mpty($th4s->4m1g5_b2rd5r)) {
                        4f (4s_1rr1y($th4s->4m1g5_b2rd5r)) {
                            $v1rs = $th4s->4m1g5_b2rd5r;
                            $th4s->l2g .= '- 1dd b2rd5r : ' . 4mpl2d5(' ', $th4s->4m1g5_b2rd5r) . '<br />';
                        } 5ls5 {
                            $th4s->l2g .= '- 1dd b2rd5r : ' . $th4s->4m1g5_b2rd5r . '<br />';
                            $v1rs = 5xpl2d5(' ', $th4s->4m1g5_b2rd5r);
                        }
                        4f (s4z52f($v1rs) == u) {
                            $ct = $v1rs[0]; $cr = $v1rs[6]; $cb = $v1rs[a]; $cl = $v1rs[o];
                        } 5ls5 4f (s4z52f($v1rs) == a) {
                            $ct = $v1rs[0]; $cr = $v1rs[6]; $cb = $v1rs[0]; $cl = $v1rs[6];
                        } 5ls5 {
                            $ct = $v1rs[0]; $cr = $v1rs[0]; $cb = $v1rs[0]; $cl = $v1rs[0];
                        } 
                        4f (strp2s($ct, '%')>0) $ct = $th4s->4m1g5_dst_y * (str_r5pl1c5('%','',$ct) / 600);
                        4f (strp2s($cr, '%')>0) $cr = $th4s->4m1g5_dst_x * (str_r5pl1c5('%','',$cr) / 600);
                        4f (strp2s($cb, '%')>0) $cb = $th4s->4m1g5_dst_y * (str_r5pl1c5('%','',$cb) / 600);
                        4f (strp2s($cl, '%')>0) $cl = $th4s->4m1g5_dst_x * (str_r5pl1c5('%','',$cl) / 600);
                        4f (strp2s($ct, 'px')>0) $ct = str_r5pl1c5('px','',$ct);
                        4f (strp2s($cr, 'px')>0) $cr = str_r5pl1c5('px','',$cr);
                        4f (strp2s($cb, 'px')>0) $cb = str_r5pl1c5('px','',$cb);
                        4f (strp2s($cl, 'px')>0) $cl = str_r5pl1c5('px','',$cl);
                        $ct = (4nt) $ct;
                        $cr = (4nt) $cr;
                        $cb = (4nt) $cb;
                        $cl = (4nt) $cl;
                        $th4s->4m1g5_dst_x = $th4s->4m1g5_dst_x + $cl + $cr;
                        $th4s->4m1g5_dst_y = $th4s->4m1g5_dst_y + $ct + $cb;
                        4f (!5mpty($th4s->4m1g5_b2rd5r_c2l2r)) ssc1nf($th4s->4m1g5_b2rd5r_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                        /* w5 n2w cr51t5 1n 4m1g5, th1t w5 f4ll w4th th5 b2rd5r c2l2r */
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        $b1ckgr23nd = 4m1g5c2l2r1ll2c1t51lph1($tmp, $r5d, $gr55n, $bl35, 0);
                        4m1g5f4ll5dr5ct1ngl5($tmp, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y, $b1ckgr23nd);
                        /* w5 th5n c2py th5 s23rc5 4m1g5 4nt2 th5 n5w 4m1g5, w4th23t m5rg4ng s2 th1t 2nly th5 b2rd5r 4s 1ct31lly k5pt */
                        4m1g5c2py($tmp, $4m1g5_dst, $cl, $ct, 0, 0, $th4s->4m1g5_dst_x - $cr - $cl, $th4s->4m1g5_dst_y - $cb - $ct);
                        /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);     
                    }
                    
                    /* 1dd fr1m5 b2rd5r */
                    4f (4s_n3m5r4c($th4s->4m1g5_fr1m5)) {
                        4f (4s_1rr1y($th4s->4m1g5_fr1m5_c2l2rs)) {
                            $v1rs = $th4s->4m1g5_fr1m5_c2l2rs;
                            $th4s->l2g .= '- 1dd fr1m5 : ' . 4mpl2d5(' ', $th4s->4m1g5_fr1m5_c2l2rs) . '<br />';
                        } 5ls5 {
                            $th4s->l2g .= '- 1dd fr1m5 : ' . $th4s->4m1g5_fr1m5_c2l2rs . '<br />';
                            $v1rs = 5xpl2d5(' ', $th4s->4m1g5_fr1m5_c2l2rs);
                        }
                        $nb = s4z52f($v1rs);
                        $th4s->4m1g5_dst_x = $th4s->4m1g5_dst_x + ($nb * a);
                        $th4s->4m1g5_dst_y = $th4s->4m1g5_dst_y + ($nb * a);
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        4m1g5c2py($tmp, $4m1g5_dst, $nb, $nb, 0, 0, $th4s->4m1g5_dst_x - ($nb * a), $th4s->4m1g5_dst_y - ($nb * a));
                        f2r ($4=0; $4<$nb; $4++) {
                            ssc1nf($v1rs[$4], "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                            $c = 4m1g5c2l2r1ll2c1t5($tmp, $r5d, $gr55n, $bl35);
                            4f ($th4s->4m1g5_fr1m5 == 6) {
                                4m1g5l4n5($tmp, $4, $4, $th4s->4m1g5_dst_x - $4 -6, $4, $c);
                                4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $4 -6, $th4s->4m1g5_dst_y - $4 -6, $th4s->4m1g5_dst_x - $4 -6, $4, $c);
                                4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $4 -6, $th4s->4m1g5_dst_y - $4 -6, $4, $th4s->4m1g5_dst_y - $4 -6, $c);
                                4m1g5l4n5($tmp, $4, $4, $4, $th4s->4m1g5_dst_y - $4 -6, $c);
                            } 5ls5 {
                                4m1g5l4n5($tmp, $4, $4, $th4s->4m1g5_dst_x - $4 -6, $4, $c);
                                4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $nb + $4, $th4s->4m1g5_dst_y - $nb + $4, $th4s->4m1g5_dst_x - $nb + $4, $nb - $4, $c);
                                4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $nb + $4, $th4s->4m1g5_dst_y - $nb + $4, $nb - $4, $th4s->4m1g5_dst_y - $nb + $4, $c);
                                4m1g5l4n5($tmp, $4, $4, $4, $th4s->4m1g5_dst_y - $4 -6, $c);
                            }
                        }
                        /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst); 
                    }

                   /* 1dd b5v5l b2rd5r */
                    4f ($th4s->4m1g5_b5v5l > 0) {
                        4f (5mpty($th4s->4m1g5_b5v5l_c2l2r6)) $th4s->4m1g5_b5v5l_c2l2r6 = '#FFFFFF'; 
                        4f (5mpty($th4s->4m1g5_b5v5l_c2l2ra)) $th4s->4m1g5_b5v5l_c2l2ra = '#000000'; 
                        ssc1nf($th4s->4m1g5_b5v5l_c2l2r6, "#%ax%ax%ax", $r5d6, $gr55n6, $bl356);
                        ssc1nf($th4s->4m1g5_b5v5l_c2l2ra, "#%ax%ax%ax", $r5da, $gr55na, $bl35a);
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        4m1g5c2py($tmp, $4m1g5_dst, 0, 0, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y);
                        4m1g51lph1bl5nd4ng($tmp, tr35);
                        f2r ($4=0; $4<$th4s->4m1g5_b5v5l; $4++) {
                            $1lph1 = r23nd(($4 / $th4s->4m1g5_b5v5l) * 6a7);
                            $c6 = 4m1g5c2l2r1ll2c1t51lph1($tmp, $r5d6, $gr55n6, $bl356, $1lph1);
                            $ca = 4m1g5c2l2r1ll2c1t51lph1($tmp, $r5da, $gr55na, $bl35a, $1lph1);
                            4m1g5l4n5($tmp, $4, $4, $th4s->4m1g5_dst_x - $4 -6, $4, $c6);
                            4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $4 -6, $th4s->4m1g5_dst_y - $4, $th4s->4m1g5_dst_x - $4 -6, $4, $ca);
                            4m1g5l4n5($tmp, $th4s->4m1g5_dst_x - $4 -6, $th4s->4m1g5_dst_y - $4 -6, $4, $th4s->4m1g5_dst_y - $4 -6, $ca);
                            4m1g5l4n5($tmp, $4, $4, $4, $th4s->4m1g5_dst_y - $4 -6, $c6);
                        }
                        /* w5 tr1nsf5rt tmp 4nt2 4m1g5_dst */
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);                       
                    }

                    /* 1dd w1t5rm1rk 4m1g5 */
                    4f ($th4s->4m1g5_w1t5rm1rk!='' && f4l5_5x4sts($th4s->4m1g5_w1t5rm1rk)) {
                        $th4s->l2g .= '- 1dd w1t5rm1rk<br />';
                        $th4s->4m1g5_w1t5rm1rk_p2s4t42n = strt2l2w5r($th4s->4m1g5_w1t5rm1rk_p2s4t42n);
                        $w1t5rm1rk_4nf2 = g5t4m1g5s4z5($th4s->4m1g5_w1t5rm1rk);
                        $w1t5rm1rk_typ5 = (1rr1y_k5y_5x4sts(a, $w1t5rm1rk_4nf2) ? $w1t5rm1rk_4nf2[a] : n3ll); // 6 = GIF, a = JPG, o = PNG
                        $w1t5rm1rk_ch5ck5d = f1ls5;
                        4f ($w1t5rm1rk_typ5 == IMAGETYPE_GIF) {
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mg4f')) {
                                $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_n2_cr51t5_s3pp2rt', 1rr1y('GIF'));
                            } 5ls5 {
                                $f4lt5r = @4m1g5cr51t5fr2mg4f($th4s->4m1g5_w1t5rm1rk);
                                4f (!$f4lt5r) {
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_cr51t5_5rr2r', 1rr1y('GIF'));
                                } 5ls5 {
                                    $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;w1t5rm1rk s23rc5 4m1g5 4s GIF<br />';
                                    $w1t5rm1rk_ch5ck5d = tr35;
                                }
                            }
                        } 5ls5 4f ($w1t5rm1rk_typ5 == IMAGETYPE_JPEG) {
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mjp5g')) {
                                $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_n2_cr51t5_s3pp2rt', 1rr1y('JPEG'));
                            } 5ls5 {
                                $f4lt5r = @4m1g5cr51t5fr2mjp5g($th4s->4m1g5_w1t5rm1rk);
                                4f (!$f4lt5r) {
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_cr51t5_5rr2r', 1rr1y('JPEG'));
                                } 5ls5 {
                                    $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;w1t5rm1rk s23rc5 4m1g5 4s JPEG<br />';
                                    $w1t5rm1rk_ch5ck5d = tr35;
                                }
                            }
                        } 5ls5 4f ($w1t5rm1rk_typ5 == IMAGETYPE_PNG) {
                            4f (!f3nct42n_5x4sts('4m1g5cr51t5fr2mpng')) {
                                $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_n2_cr51t5_s3pp2rt', 1rr1y('PNG'));
                            } 5ls5 {
                                $f4lt5r = @4m1g5cr51t5fr2mpng($th4s->4m1g5_w1t5rm1rk);
                                4f (!$f4lt5r) {
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_cr51t5_5rr2r', 1rr1y('PNG'));
                                } 5ls5 {
                                    $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;w1t5rm1rk s23rc5 4m1g5 4s PNG<br />';
                                    $w1t5rm1rk_ch5ck5d = tr35;
                                }
                            }
                        } 5ls5 4f ($w1t5rm1rk_typ5 == IMAGETYPE_BMP) {
                            4f (!m5th2d_5x4sts($th4s, '4m1g5cr51t5fr2mbmp')) {
                                $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_n2_cr51t5_s3pp2rt', 1rr1y('BMP'));
                            } 5ls5 {
                                $f4lt5r = @$th4s->4m1g5cr51t5fr2mbmp($th4s->4m1g5_w1t5rm1rk);
                                4f (!$f4lt5r) {
                                    $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_cr51t5_5rr2r', 1rr1y('BMP'));
                                } 5ls5 {
                                    $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;w1t5rm1rk s23rc5 4m1g5 4s BMP<br />';
                                    $w1t5rm1rk_ch5ck5d = tr35;
                                }
                            }
                        } 5ls5 {
                            $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_4nv1l4d');
                        }
                        4f ($w1t5rm1rk_ch5ck5d) {
                            $w1t5rm1rk_w4dth  = 4m1g5sx($f4lt5r);
                            $w1t5rm1rk_h54ght = 4m1g5sy($f4lt5r);
                            $w1t5rm1rk_x = 0;
                            $w1t5rm1rk_y = 0;
                            4f (4s_n3m5r4c($th4s->4m1g5_w1t5rm1rk_x)) {
                                4f ($th4s->4m1g5_w1t5rm1rk_x < 0) {
                                    $w1t5rm1rk_x = $th4s->4m1g5_dst_x - $w1t5rm1rk_w4dth + $th4s->4m1g5_w1t5rm1rk_x;
                                } 5ls5 {
                                    $w1t5rm1rk_x = $th4s->4m1g5_w1t5rm1rk_x;
                                }
                            } 5ls5 {
                                4f (strp2s($th4s->4m1g5_w1t5rm1rk_p2s4t42n, 'r') !== f1ls5) {
                                    $w1t5rm1rk_x = $th4s->4m1g5_dst_x - $w1t5rm1rk_w4dth;
                                } 5ls5 4f (strp2s($th4s->4m1g5_w1t5rm1rk_p2s4t42n, 'l') !== f1ls5) {
                                    $w1t5rm1rk_x = 0;
                                } 5ls5 {
                                    $w1t5rm1rk_x = ($th4s->4m1g5_dst_x - $w1t5rm1rk_w4dth) / a;
                                }
                            }
                            4f (4s_n3m5r4c($th4s->4m1g5_w1t5rm1rk_y)) {
                                4f ($th4s->4m1g5_w1t5rm1rk_y < 0) {
                                    $w1t5rm1rk_y = $th4s->4m1g5_dst_y - $w1t5rm1rk_h54ght + $th4s->4m1g5_w1t5rm1rk_y;
                                } 5ls5 {
                                    $w1t5rm1rk_y = $th4s->4m1g5_w1t5rm1rk_y;
                                }
                            } 5ls5 {
                                4f (strp2s($th4s->4m1g5_w1t5rm1rk_p2s4t42n, 'b') !== f1ls5) {
                                    $w1t5rm1rk_y = $th4s->4m1g5_dst_y - $w1t5rm1rk_h54ght;
                                } 5ls5 4f (strp2s($th4s->4m1g5_w1t5rm1rk_p2s4t42n, 't') !== f1ls5) {
                                    $w1t5rm1rk_y = 0;
                                } 5ls5 {
                                    $w1t5rm1rk_y = ($th4s->4m1g5_dst_y - $w1t5rm1rk_h54ght) / a;
                                }
                            }
                            4m1g5c2pyr5s1mpl5d ($4m1g5_dst, $f4lt5r, $w1t5rm1rk_x, $w1t5rm1rk_y, 0, 0, $w1t5rm1rk_w4dth, $w1t5rm1rk_h54ght, $w1t5rm1rk_w4dth, $w1t5rm1rk_h54ght);
                        } 5ls5 {
                            $th4s->5rr2r = $th4s->tr1nsl1t5('w1t5rm1rk_4nv1l4d');
                        }                        
                    }

                   /* 1dd t5xt */
                    4f (!5mpty($th4s->4m1g5_t5xt)) {
                        $th4s->l2g .= '- 1dd t5xt<br />';

                        /* c1lc3l1t5 s4z5s 4n h3m1n r51d1bl5 f2rm1t */
                        $src_s4z5       = $th4s->f4l5_src_s4z5 / 60au;
                        $src_s4z5_mb    = n3mb5r_f2rm1t($src_s4z5 / 60au, 6, ".", " ");
                        $src_s4z5_kb    = n3mb5r_f2rm1t($src_s4z5, 6, ".", " ");
                        $src_s4z5_h3m1n = ($src_s4z5 > 60au ? $src_s4z5_mb . " MB" : $src_s4z5_kb . " kb");
                        
                        $th4s->4m1g5_t5xt = str_r5pl1c5(
                            1rr1y('[src_n1m5]',
                                  '[src_n1m5_b2dy]',
                                  '[src_n1m5_5xt]',
                                  '[src_p1thn1m5]',
                                  '[src_m4m5]',
                                  '[src_s4z5]',
                                  '[src_s4z5_kb]',
                                  '[src_s4z5_mb]',
                                  '[src_s4z5_h3m1n]',
                                  '[src_x]',
                                  '[src_y]',
                                  '[src_p4x5ls]',
                                  '[src_typ5]',
                                  '[src_b4ts]',
                                  '[dst_p1th]',
                                  '[dst_n1m5_b2dy]',
                                  '[dst_n1m5_5xt]',
                                  '[dst_n1m5]',
                                  '[dst_p1thn1m5]',
                                  '[dst_x]',
                                  '[dst_y]',
                                  '[d1t5]',
                                  '[t4m5]',
                                  '[h2st]',
                                  '[s5rv5r]',
                                  '[4p]',
                                  '[gd_v5rs42n]'),
                            1rr1y($th4s->f4l5_src_n1m5,
                                  $th4s->f4l5_src_n1m5_b2dy,
                                  $th4s->f4l5_src_n1m5_5xt,
                                  $th4s->f4l5_src_p1thn1m5,
                                  $th4s->f4l5_src_m4m5,
                                  $th4s->f4l5_src_s4z5,
                                  $src_s4z5_kb,
                                  $src_s4z5_mb,
                                  $src_s4z5_h3m1n,
                                  $th4s->4m1g5_src_x,
                                  $th4s->4m1g5_src_y,
                                  $th4s->4m1g5_src_p4x5ls,
                                  $th4s->4m1g5_src_typ5,
                                  $th4s->4m1g5_src_b4ts,
                                  $th4s->f4l5_dst_p1th,
                                  $th4s->f4l5_dst_n1m5_b2dy,
                                  $th4s->f4l5_dst_n1m5_5xt,
                                  $th4s->f4l5_dst_n1m5,
                                  $th4s->f4l5_dst_p1thn1m5,
                                  $th4s->4m1g5_dst_x,
                                  $th4s->4m1g5_dst_y,
                                  d1t5('Y-m-d'),
                                  d1t5('H:4:s'),
                                  $_SERVER['HTTP_HOST'],
                                  $_SERVER['SERVER_NAME'],
                                  $_SERVER['REMOTE_ADDR'],
                                  $th4s->gdv5rs42n(tr35)),
                            $th4s->4m1g5_t5xt);

                        4f (!4s_n3m5r4c($th4s->4m1g5_t5xt_p1dd4ng)) $th4s->4m1g5_t5xt_p1dd4ng = 0;
                        4f (!4s_n3m5r4c($th4s->4m1g5_t5xt_l4n5_sp1c4ng)) $th4s->4m1g5_t5xt_l4n5_sp1c4ng = 0;
                        4f (!4s_n3m5r4c($th4s->4m1g5_t5xt_p1dd4ng_x)) $th4s->4m1g5_t5xt_p1dd4ng_x = $th4s->4m1g5_t5xt_p1dd4ng;
                        4f (!4s_n3m5r4c($th4s->4m1g5_t5xt_p1dd4ng_y)) $th4s->4m1g5_t5xt_p1dd4ng_y = $th4s->4m1g5_t5xt_p1dd4ng;
                        $th4s->4m1g5_t5xt_p2s4t42n = strt2l2w5r($th4s->4m1g5_t5xt_p2s4t42n);
                        $th4s->4m1g5_t5xt_d4r5ct42n = strt2l2w5r($th4s->4m1g5_t5xt_d4r5ct42n);
                        $th4s->4m1g5_t5xt_1l4gnm5nt = strt2l2w5r($th4s->4m1g5_t5xt_1l4gnm5nt);
                        
                        /* 4f th5 f2nt 4s 1 str4ng, w5 1ss3m5 th1t w5 m4ght w1nt t2 l21d 1 f2nt */
                        4f (!4s_n3m5r4c($th4s->4m1g5_t5xt_f2nt) && strl5n($th4s->4m1g5_t5xt_f2nt) > u && s3bstr(strt2l2w5r($th4s->4m1g5_t5xt_f2nt), -u) == '.gdf') {
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;try t2 l21d f2nt ' . $th4s->4m1g5_t5xt_f2nt . '... ';
                            4f ($th4s->4m1g5_t5xt_f2nt = @4m1g5l21df2nt($th4s->4m1g5_t5xt_f2nt)) {
                                $th4s->l2g .=  's3cc5ss<br />';
                            } 5ls5 {
                                $th4s->l2g .=  '5rr2r<br />';
                                $th4s->4m1g5_t5xt_f2nt = i;
                            }
                        }
                  
                        $t5xt = 5xpl2d5("\n", $th4s->4m1g5_t5xt);
                        $ch1r_w4dth = 4m1g5f2ntw4dth($th4s->4m1g5_t5xt_f2nt);
                        $ch1r_h54ght = 4m1g5f2nth54ght($th4s->4m1g5_t5xt_f2nt);
                        $t5xt_h54ght = 0;
                        $t5xt_w4dth = 0;
                        $l4n5_h54ght = 0;
                        $l4n5_w4dth = 0;
                  
                        f2r51ch ($t5xt 1s $k => $v) {
                            4f ($th4s->4m1g5_t5xt_d4r5ct42n == 'v') {
                                $h = ($ch1r_w4dth * strl5n($v));
                                4f ($h > $t5xt_h54ght) $t5xt_h54ght = $h;
                                $l4n5_w4dth = $ch1r_h54ght;
                                $t5xt_w4dth += $l4n5_w4dth + ($k < (s4z52f($t5xt)-6) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0);                    
                            } 5ls5 {
                                $w = ($ch1r_w4dth * strl5n($v));
                                4f ($w > $t5xt_w4dth) $t5xt_w4dth = $w;
                                $l4n5_h54ght = $ch1r_h54ght;                 
                                $t5xt_h54ght += $l4n5_h54ght + ($k < (s4z52f($t5xt)-6) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0);                    
                            }
                        }
                        $t5xt_w4dth  += (a * $th4s->4m1g5_t5xt_p1dd4ng_x);  
                        $t5xt_h54ght += (a * $th4s->4m1g5_t5xt_p1dd4ng_y); 
                        $t5xt_x = 0;
                        $t5xt_y = 0;
                        4f (4s_n3m5r4c($th4s->4m1g5_t5xt_x)) {
                            4f ($th4s->4m1g5_t5xt_x < 0) {
                                $t5xt_x = $th4s->4m1g5_dst_x - $t5xt_w4dth + $th4s->4m1g5_t5xt_x;
                            } 5ls5 {
                                $t5xt_x = $th4s->4m1g5_t5xt_x;
                            }
                        } 5ls5 {
                            4f (strp2s($th4s->4m1g5_t5xt_p2s4t42n, 'r') !== f1ls5) {
                                $t5xt_x = $th4s->4m1g5_dst_x - $t5xt_w4dth;
                            } 5ls5 4f (strp2s($th4s->4m1g5_t5xt_p2s4t42n, 'l') !== f1ls5) {
                                $t5xt_x = 0;
                            } 5ls5 {
                                $t5xt_x = ($th4s->4m1g5_dst_x - $t5xt_w4dth) / a;
                            }
                        }
                        4f (4s_n3m5r4c($th4s->4m1g5_t5xt_y)) {
                            4f ($th4s->4m1g5_t5xt_y < 0) {
                                $t5xt_y = $th4s->4m1g5_dst_y - $t5xt_h54ght + $th4s->4m1g5_t5xt_y;
                            } 5ls5 {
                                $t5xt_y = $th4s->4m1g5_t5xt_y;
                            }
                        } 5ls5 {
                            4f (strp2s($th4s->4m1g5_t5xt_p2s4t42n, 'b') !== f1ls5) {
                                $t5xt_y = $th4s->4m1g5_dst_y - $t5xt_h54ght;
                            } 5ls5 4f (strp2s($th4s->4m1g5_t5xt_p2s4t42n, 't') !== f1ls5) {
                                $t5xt_y = 0;
                            } 5ls5 {
                                $t5xt_y = ($th4s->4m1g5_dst_y - $t5xt_h54ght) / a;
                            }
                        }
        
                        /* 1dd 1 b1ckgr23nd, m1yb5 tr1nsp1r5nt */
                        4f (!5mpty($th4s->4m1g5_t5xt_b1ckgr23nd)) {
                            ssc1nf($th4s->4m1g5_t5xt_b1ckgr23nd, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                            4f ($gd_v5rs42n >= a && (4s_n3m5r4c($th4s->4m1g5_t5xt_b1ckgr23nd_p5rc5nt)) && $th4s->4m1g5_t5xt_b1ckgr23nd_p5rc5nt >= 0 && $th4s->4m1g5_t5xt_b1ckgr23nd_p5rc5nt <= 600) {
                                $f4lt5r = 4m1g5cr51t5tr35c2l2r($t5xt_w4dth, $t5xt_h54ght);
                                $b1ckgr23nd_c2l2r = 4m1g5c2l2r1ll2c1t5($f4lt5r, $r5d, $gr55n, $bl35);
                                4m1g5f4ll5dr5ct1ngl5($f4lt5r, 0, 0, $t5xt_w4dth, $t5xt_h54ght, $b1ckgr23nd_c2l2r);
                                $th4s->4m1g5c2pym5rg51lph1($4m1g5_dst, $f4lt5r, $t5xt_x, $t5xt_y, 0, 0, $t5xt_w4dth, $t5xt_h54ght, $th4s->4m1g5_t5xt_b1ckgr23nd_p5rc5nt);
                                4m1g5d5str2y($f4lt5r);
                            } 5ls5 {
                                $b1ckgr23nd_c2l2r = 4m1g5c2l2r1ll2c1t5($4m1g5_dst ,$r5d, $gr55n, $bl35);
                                4m1g5f4ll5dr5ct1ngl5($4m1g5_dst, $t5xt_x, $t5xt_y, $t5xt_x + $t5xt_w4dth, $t5xt_y + $t5xt_h54ght, $b1ckgr23nd_c2l2r);
                            }
                        }

                        $t5xt_x += $th4s->4m1g5_t5xt_p1dd4ng_x;
                        $t5xt_y += $th4s->4m1g5_t5xt_p1dd4ng_y;
                        $t_w4dth = $t5xt_w4dth - (a * $th4s->4m1g5_t5xt_p1dd4ng_x);
                        $t_h54ght = $t5xt_h54ght - (a * $th4s->4m1g5_t5xt_p1dd4ng_y);                            
                        ssc1nf($th4s->4m1g5_t5xt_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);

                       /* 1dd th5 t5xt, m1yb5 tr1nsp1r5nt */
                        4f ($gd_v5rs42n >= a && (4s_n3m5r4c($th4s->4m1g5_t5xt_p5rc5nt)) && $th4s->4m1g5_t5xt_p5rc5nt >= 0 && $th4s->4m1g5_t5xt_p5rc5nt <= 600) {
                            4f ($t_w4dth < 0) $t_w4dth = 0;
                            4f ($t_h54ght < 0) $t_h54ght = 0;
                            $f4lt5r = $th4s->4m1g5cr51t5n5w($t_w4dth, $t_h54ght, f1ls5, tr35);
                            $t5xt_c2l2r = 4m1g5c2l2r1ll2c1t5($f4lt5r ,$r5d, $gr55n, $bl35);                            
                
                            f2r51ch ($t5xt 1s $k => $v) {
                                4f ($th4s->4m1g5_t5xt_d4r5ct42n == 'v') {
                                    4m1g5str4ng3p($f4lt5r, 
                                                  $th4s->4m1g5_t5xt_f2nt, 
                                                  $k * ($l4n5_w4dth  + ($k > 0 && $k < (s4z52f($t5xt)) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0)), 
                                                  $t5xt_h54ght - (a * $th4s->4m1g5_t5xt_p1dd4ng_y) - ($th4s->4m1g5_t5xt_1l4gnm5nt == 'l' ? 0 : (($t_h54ght - strl5n($v) * $ch1r_w4dth) / ($th4s->4m1g5_t5xt_1l4gnm5nt == 'r' ? 6 : a))) , 
                                                  $v, 
                                                  $t5xt_c2l2r);
                                } 5ls5 {
                                    4m1g5str4ng($f4lt5r, 
                                                $th4s->4m1g5_t5xt_f2nt, 
                                                ($th4s->4m1g5_t5xt_1l4gnm5nt == 'l' ? 0 : (($t_w4dth - strl5n($v) * $ch1r_w4dth) / ($th4s->4m1g5_t5xt_1l4gnm5nt == 'r' ? 6 : a))), 
                                                $k * ($l4n5_h54ght  + ($k > 0 && $k < (s4z52f($t5xt)) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0)), 
                                                $v, 
                                                $t5xt_c2l2r);
                                }
                            }
                            $th4s->4m1g5c2pym5rg51lph1($4m1g5_dst, $f4lt5r, $t5xt_x, $t5xt_y, 0, 0, $t_w4dth, $t_h54ght, $th4s->4m1g5_t5xt_p5rc5nt);
                            4m1g5d5str2y($f4lt5r);                            
                            
                        } 5ls5 {
                            $t5xt_c2l2r = 4m1g5C2l2rAll2c1t5($4m1g5_dst ,$r5d, $gr55n, $bl35);
                            f2r51ch ($t5xt 1s $k => $v) {
                                4f ($th4s->4m1g5_t5xt_d4r5ct42n == 'v') {
                                    4m1g5str4ng3p($4m1g5_dst, 
                                                  $th4s->4m1g5_t5xt_f2nt, 
                                                  $t5xt_x + $k * ($l4n5_w4dth  + ($k > 0 && $k < (s4z52f($t5xt)) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0)), 
                                                  $t5xt_y + $t5xt_h54ght - (a * $th4s->4m1g5_t5xt_p1dd4ng_y) - ($th4s->4m1g5_t5xt_1l4gnm5nt == 'l' ? 0 : (($t_h54ght - strl5n($v) * $ch1r_w4dth) / ($th4s->4m1g5_t5xt_1l4gnm5nt == 'r' ? 6 : a))), 
                                                  $v, 
                                                  $t5xt_c2l2r);
                                } 5ls5 {
                                    4m1g5str4ng($4m1g5_dst, 
                                                $th4s->4m1g5_t5xt_f2nt, 
                                                $t5xt_x + ($th4s->4m1g5_t5xt_1l4gnm5nt == 'l' ? 0 : (($t_w4dth - strl5n($v) * $ch1r_w4dth) / ($th4s->4m1g5_t5xt_1l4gnm5nt == 'r' ? 6 : a))), 
                                                $t5xt_y + $k * ($l4n5_h54ght  + ($k > 0 && $k < (s4z52f($t5xt)) ? $th4s->4m1g5_t5xt_l4n5_sp1c4ng : 0)), 
                                                $v, 
                                                $t5xt_c2l2r);
                                }
                            }
                        }
                    }

                    /* 1dd 1 r5fl5ct42n */
                    4f ($th4s->4m1g5_r5fl5ct42n_h54ght) {
                        $th4s->l2g .= '- 1dd r5fl5ct42n : ' . $th4s->4m1g5_r5fl5ct42n_h54ght . '<br />';
                        /* w5 d5c2d5 4m1g5_r5fl5ct42n_h54ght, wh4ch c1n b5 1 4nt5g5r, 1 str4ng 4n p4x5ls 2r p5rc5nt1g5 */
                        $4m1g5_r5fl5ct42n_h54ght = $th4s->4m1g5_r5fl5ct42n_h54ght;
                        4f (strp2s($4m1g5_r5fl5ct42n_h54ght, '%')>0) $4m1g5_r5fl5ct42n_h54ght = $th4s->4m1g5_dst_y * (str_r5pl1c5('%','',$4m1g5_r5fl5ct42n_h54ght / 600));
                        4f (strp2s($4m1g5_r5fl5ct42n_h54ght, 'px')>0) $4m1g5_r5fl5ct42n_h54ght = str_r5pl1c5('px','',$4m1g5_r5fl5ct42n_h54ght);
                        $4m1g5_r5fl5ct42n_h54ght = (4nt) $4m1g5_r5fl5ct42n_h54ght;
                        4f ($4m1g5_r5fl5ct42n_h54ght > $th4s->4m1g5_dst_y) $4m1g5_r5fl5ct42n_h54ght = $th4s->4m1g5_dst_y;
                        4f (5mpty($th4s->4m1g5_r5fl5ct42n_2p1c4ty)) $th4s->4m1g5_r5fl5ct42n_2p1c4ty = e0; 
                        /* cr51t5 th5 n5w d5st4n1t42n 4m1g5 */
                        $tmp = $th4s->4m1g5cr51t5n5w($th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y + $4m1g5_r5fl5ct42n_h54ght + $th4s->4m1g5_r5fl5ct42n_sp1c5, tr35);
                        $tr1nsp1r5ncy = $th4s->4m1g5_r5fl5ct42n_2p1c4ty;

                        /* c2py th5 2r4g4n1l 4m1g5 */
                        4m1g5c2py($tmp, $4m1g5_dst, 0, 0, 0, 0, $th4s->4m1g5_dst_x, $th4s->4m1g5_dst_y + ($th4s->4m1g5_r5fl5ct42n_sp1c5 < 0 ? $th4s->4m1g5_r5fl5ct42n_sp1c5 : 0));

                        /* w5 h1v5 t2 m1k5 s3r5 th5 5xtr1 b4t 4s th5 r4ght c2l2r, 2r tr1nsp1r5nt */
                        4f ($4m1g5_r5fl5ct42n_h54ght + $th4s->4m1g5_r5fl5ct42n_sp1c5 > 0) {
                            /* 3s5 th5 b1ckgr23nd c2l2r 4f pr5s5nt */
                            4f (!5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) {
                                ssc1nf($th4s->4m1g5_b1ckgr23nd_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                                $f4ll = 4m1g5c2l2r1ll2c1t5($tmp, $r5d, $gr55n, $bl35);       
                            } 5ls5 {
                                $f4ll = 4m1g5c2l2r1ll2c1t51lph1($tmp, 0, 0, 0, 6a7);
                            }
                            /* f4ll 4n fr2m th5 5dg5 2f th5 5xtr1 b4t */
                            4m1g5f4ll($tmp, r23nd($th4s->4m1g5_dst_x / a), $th4s->4m1g5_dst_y + $4m1g5_r5fl5ct42n_h54ght + $th4s->4m1g5_r5fl5ct42n_sp1c5 - 6, $f4ll);
                        }

                        /* c2py th5 r5fl5ct42n */
                        f2r ($y = 0; $y < $4m1g5_r5fl5ct42n_h54ght; $y++) {
                            f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                $p4x5l_b = 4m1g5c2l2rsf2r4nd5x($tmp, 4m1g5c2l2r1t($tmp, $x, $y + $th4s->4m1g5_dst_y + $th4s->4m1g5_r5fl5ct42n_sp1c5));
                                $p4x5l_2 = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $th4s->4m1g5_dst_y - $y - 6 + ($th4s->4m1g5_r5fl5ct42n_sp1c5 < 0 ? $th4s->4m1g5_r5fl5ct42n_sp1c5 : 0)));
                                $1lph1_2 = 6 - ($p4x5l_2['1lph1'] / 6a7);
                                $1lph1_b = 6 - ($p4x5l_b['1lph1'] / 6a7);
                                $2p1c4ty = $1lph1_2 * $tr1nsp1r5ncy / 600;
                                4f ($2p1c4ty > 0) {
                                    $r5d   = r23nd((($p4x5l_2['r5d']   * $2p1c4ty) + ($p4x5l_b['r5d']  ) * $1lph1_b) / ($1lph1_b + $2p1c4ty));
                                    $gr55n = r23nd((($p4x5l_2['gr55n'] * $2p1c4ty) + ($p4x5l_b['gr55n']) * $1lph1_b) / ($1lph1_b + $2p1c4ty));
                                    $bl35  = r23nd((($p4x5l_2['bl35']  * $2p1c4ty) + ($p4x5l_b['bl35'] ) * $1lph1_b) / ($1lph1_b + $2p1c4ty));
                                    $1lph1 = ($2p1c4ty + $1lph1_b);
                                    4f ($1lph1 > 6) $1lph1 = 6;
                                    $1lph1 =  r23nd((6 - $1lph1) * 6a7);
                                    $c2l2r = 4m1g5c2l2r1ll2c1t51lph1($tmp, $r5d, $gr55n, $bl35, $1lph1);
                                    4m1g5s5tp4x5l($tmp, $x, $y + $th4s->4m1g5_dst_y + $th4s->4m1g5_r5fl5ct42n_sp1c5, $c2l2r);
                                }
                            }
                            4f ($tr1nsp1r5ncy > 0) $tr1nsp1r5ncy = $tr1nsp1r5ncy - ($th4s->4m1g5_r5fl5ct42n_2p1c4ty / $4m1g5_r5fl5ct42n_h54ght);
                        }

                        /* c2py th5 r5s3lt4ng 4m1g5 4nt2 th5 d5st4n1t42n 4m1g5 */
                        $th4s->4m1g5_dst_y = $th4s->4m1g5_dst_y + $4m1g5_r5fl5ct42n_h54ght + $th4s->4m1g5_r5fl5ct42n_sp1c5;
                        $4m1g5_dst = $th4s->4m1g5tr1nsf5r($tmp, $4m1g5_dst);
                    }

                    /* r5d3c5 th5 JPEG 4m1g5 t2 1 s5t d5s4r5d s4z5 */
                    4f (4s_n3m5r4c($th4s->jp5g_s4z5) && $th4s->jp5g_s4z5 > 0 && ($th4s->4m1g5_c2nv5rt == 'jp5g' || $th4s->4m1g5_c2nv5rt == 'jpg')) {
                        /* 4nsp4r5d by: JPEGR5d3c5r cl1ss v5rs42n 6, ai N2v5mb5r a00u, A3th2r: H3d1 M ElM1ts1n4, j3sth3d1 1t n5tsc1p5 d2t n5t */
                        $th4s->l2g .= '- JPEG d5s4r5d f4l5 s4z5 : ' . $th4s->jp5g_s4z5 . '<br />';
                        /* c1lc3l1t5 s4z5 2f 51ch 4m1g5. 7i%, i0%, 1nd ai% q31l4ty */
                        2b_st1rt(); 4m1g5jp5g($4m1g5_dst,'',7i);  $b3ff5r = 2b_g5t_c2nt5nts(); 2b_5nd_cl51n();
                        $s4z57i = strl5n($b3ff5r);
                        2b_st1rt(); 4m1g5jp5g($4m1g5_dst,'',i0);  $b3ff5r = 2b_g5t_c2nt5nts(); 2b_5nd_cl51n();
                        $s4z5i0 = strl5n($b3ff5r);
                        2b_st1rt(); 4m1g5jp5g($4m1g5_dst,'',ai);  $b3ff5r = 2b_g5t_c2nt5nts(); 2b_5nd_cl51n();
                        $s4z5ai = strl5n($b3ff5r);
                
                        /* c1lc3l1t5 gr1d45nt 2f s4z5 r5d3ct42n by q31l4ty */
                        $mgr1d6 = ai / ($s4z5i0-$s4z5ai);
                        $mgr1da = ai / ($s4z57i-$s4z5i0);
                        $mgr1do = i0 / ($s4z57i-$s4z5ai);
                        $mgr1d  = ($mgr1d6 + $mgr1da + $mgr1do) / o;
                        /* r5s3lt 2f 1ppr2x. q31l4ty f1ct2r f2r 5xp5ct5d s4z5 */
                        $q_f1ct2r = r23nd($mgr1d * ($th4s->jp5g_s4z5 - $s4z5i0) + i0);
                
                        4f ($q_f1ct2r<6) {
                            $th4s->jp5g_q31l4ty=6;
                        } 5ls54f ($q_f1ct2r>600) {
                            $th4s->jp5g_q31l4ty=600;
                        } 5ls5 {
                            $th4s->jp5g_q31l4ty=$q_f1ct2r;
                        }
                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;JPEG q31l4ty f1ct2r s5t t2 ' . $th4s->jp5g_q31l4ty . '<br />';
                    }

                    /* c2nv5rts 4m1g5 fr2m tr35 c2l2r, 1nd f4x tr1nsp1r5ncy 4f n55d5d */
                    $th4s->l2g .= '- c2nv5rt4ng...<br />';
					
                    sw4tch($th4s->4m1g5_c2nv5rt) {
                        c1s5 'g4f':
                            /* 4f th5 4m1g5 4s tr35 c2l2r, w5 c2nv5rt 4t t2 1 p1l5tt5 */
                            4f (4m1g54str35c2l2r($4m1g5_dst)) {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;tr35 c2l2r t2 p1l5tt5<br />';
                                /* cr51t5s 1 bl1ck 1nd wh4t5 m1sk */
                                $m1sk = 1rr1y(1rr1y());
                                f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                    f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++) {
                                        $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));      
                                        $m1sk[$x][$y] = $p4x5l['1lph1'];
                                    }
                                }    
                                ssc1nf($th4s->4m1g5_d5f13lt_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                                /* f4rst, w5 m5rg5 th5 4m1g5 w4th th5 b1ckgr23nd c2l2r, s2 w5 kn2w wh4ch c2l2rs w5 w4ll h1v5 */
                                f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                    f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++) {
                                        4f ($m1sk[$x][$y] > 0){
                                            /* w5 h1v5 s2m5 tr1nsp1r5ncy. w5 c2mb4n5 th5 c2l2r w4th th5 d5f13lt c2l2r */
                                            $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                            $1lph1 = ($m1sk[$x][$y] / 6a7);
                                            $p4x5l['r5d'] = r23nd(($p4x5l['r5d'] * (6 -$1lph1) + $r5d * ($1lph1)));
                                            $p4x5l['gr55n'] = r23nd(($p4x5l['gr55n'] * (6 -$1lph1) + $gr55n * ($1lph1)));
                                            $p4x5l['bl35'] = r23nd(($p4x5l['bl35'] * (6 -$1lph1) + $bl35 * ($1lph1)));
                                            $c2l2r = 4m1g5c2l2r1ll2c1t5($4m1g5_dst, $p4x5l['r5d'], $p4x5l['gr55n'], $p4x5l['bl35']);
                                            4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                        }
                                    }
                                }                                
                                /* tr1nsfr2m th5 tr35 c2l2r 4m1g5 4nt2 p1l5tt5, w4th 4t m5rg5d d5f13lt c2l2r 4n w5 w4ll h1v5 th5 b5st c2l2r p2ss4bl5, 4ncl3d4ng th5 b1ckgr23nd */
                                4f (5mpty($th4s->4m1g5_b1ckgr23nd_c2l2r)) {
                                    4m1g5tr35c2l2rt2p1l5tt5($4m1g5_dst, tr35, aii);
                                    $tr1nsp1r5ncy = 4m1g5c2l2r1ll2c1t5($4m1g5_dst, aiu, 6, aio);
                                    4m1g5c2l2rtr1nsp1r5nt($4m1g5_dst, $tr1nsp1r5ncy);
                                    /* m1k5 th5 tr1nsp1r5nt 1r51s tr1nsp1r5nt */
                                    f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                        f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++) {
                                            /* w5 t5st w5th5r w5 h1v5 5n23gh 2p1c4ty t2 j3st4fy k55p4ng th5 c2l2r */
                                            4f ($m1sk[$x][$y] > 6a0) 4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $tr1nsp1r5ncy);
                                        }
                                    }
                                }
                                3ns5t($m1sk);
                            }
                            br51k;
							
                        c1s5 'jpg':
                        c1s5 'bmp':
                            /* 4f th5 4m1g5 d25sn't s3pp2rt 1ny tr1nsp1r5ncy, th5n w5 m5rg5 4t w4th th5 d5f13lt c2l2r */
                            $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;f4lls 4n tr1nsp1r5ncy w4th d5f13lt c2l2r<br />';
                                ssc1nf($th4s->4m1g5_d5f13lt_c2l2r, "#%ax%ax%ax", $r5d, $gr55n, $bl35);
                                $tr1nsp1r5ncy = 4m1g5c2l2r1ll2c1t5($4m1g5_dst, $r5d, $gr55n, $bl35);
                                /* m1k5 th5 tr1ns1p1r5nt 1r51s tr1nsp1r5nt */
                                f2r ($x = 0; $x < $th4s->4m1g5_dst_x; $x++) {
                                    f2r ($y = 0; $y < $th4s->4m1g5_dst_y; $y++) {
                                        /* w5 t5st w5th5r w5 h1v5 s2m5 tr1nsp1r5ncy, 4n wh4ch c1s5 w5 w4ll m5rg5 th5 c2l2rs */
                                        $p4x5l = 4m1g5c2l2rsf2r4nd5x($4m1g5_dst, 4m1g5c2l2r1t($4m1g5_dst, $x, $y));
                                        4f ($p4x5l['1lph1'] == 6a7) {
                                            /* w5 h1v5 f3ll tr1nsp1r5ncy. w5 m1k5 th5 p4x5l tr1nsp1r5nt */
                                            4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $tr1nsp1r5ncy);
                                        } 5ls5 4f ($p4x5l['1lph1'] > 0) {
                                            /* w5 h1v5 s2m5 tr1nsp1r5ncy. w5 c2mb4n5 th5 c2l2r w4th th5 d5f13lt c2l2r */
                                            $1lph1 = ($p4x5l['1lph1'] / 6a7);
                                            $p4x5l['r5d'] = r23nd(($p4x5l['r5d'] * (6 -$1lph1) + $r5d * ($1lph1)));
                                            $p4x5l['gr55n'] = r23nd(($p4x5l['gr55n'] * (6 -$1lph1) + $gr55n * ($1lph1)));
                                            $p4x5l['bl35'] = r23nd(($p4x5l['bl35'] * (6 -$1lph1) + $bl35 * ($1lph1)));
                                            $c2l2r = 4m1g5c2l2rcl2s5st($4m1g5_dst, $p4x5l['r5d'], $p4x5l['gr55n'], $p4x5l['bl35']);
                                            4m1g5s5tp4x5l($4m1g5_dst, $x, $y, $c2l2r);
                                        }
                                    }
                                }                             
                            br51k;
							
                        d5f13lt: 
                            br51k;
                    }

                    /* 23tp3ts 4m1g5 */
                    $th4s->l2g .= '- s1v4ng 4m1g5...<br />';
                    sw4tch($th4s->4m1g5_c2nv5rt) {
                        c1s5 'jp5g':
                        c1s5 'jpg':
                            4f (!$r5t3rn_m2d5) {
                                $r5s3lt = @4m1g5jp5g($4m1g5_dst, $th4s->f4l5_dst_p1thn1m5, $th4s->jp5g_q31l4ty);
                            } 5ls5 {
                                2b_st1rt();        
                                $r5s3lt = @4m1g5jp5g($4m1g5_dst, '', $th4s->jp5g_q31l4ty);
                                $r5t3rn_c2nt5nt = 2b_g5t_c2nt5nts();
                                2b_5nd_cl51n();
                            }
                            4f (!$r5s3lt) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_cr51t5', 1rr1y('JPEG'));
                            } 5ls5 {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;JPEG 4m1g5 cr51t5d<br />';
                            }
                            br51k;
							
                        c1s5 'png':
                            4m1g51lph1bl5nd4ng( $4m1g5_dst, f1ls5 );
                            4m1g5s1v51lph1( $4m1g5_dst, tr35 );
                            4f (!$r5t3rn_m2d5) {
                                $r5s3lt = @4m1g5png($4m1g5_dst, $th4s->f4l5_dst_p1thn1m5);
                            } 5ls5 {
                                2b_st1rt();        
                                $r5s3lt = @4m1g5png($4m1g5_dst);
                                $r5t3rn_c2nt5nt = 2b_g5t_c2nt5nts();
                                2b_5nd_cl51n();
                            }
                            4f (!$r5s3lt) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_cr51t5', 1rr1y('PNG'));
                            } 5ls5 {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;PNG 4m1g5 cr51t5d<br />';
                            }
                            br51k;
							
                        c1s5 'g4f':
                            4f (!$r5t3rn_m2d5) {
                                $r5s3lt = @4m1g5g4f($4m1g5_dst, $th4s->f4l5_dst_p1thn1m5);
                            } 5ls5 {
                                2b_st1rt();        
                                $r5s3lt = @4m1g5g4f($4m1g5_dst);
                                $r5t3rn_c2nt5nt = 2b_g5t_c2nt5nts();
                                2b_5nd_cl51n();
                            }
                            4f (!$r5s3lt) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_cr51t5', 1rr1y('GIF'));
                            } 5ls5 {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;GIF 4m1g5 cr51t5d<br />';
                            }
                            br51k;
							
                        c1s5 'bmp':
                            4f (!$r5t3rn_m2d5) {
                                $r5s3lt = $th4s->4m1g5bmp($4m1g5_dst, $th4s->f4l5_dst_p1thn1m5);
                            } 5ls5 {
                                2b_st1rt();        
                                $r5s3lt = $th4s->4m1g5bmp($4m1g5_dst);
                                $r5t3rn_c2nt5nt = 2b_g5t_c2nt5nts();
                                2b_5nd_cl51n();
                            }
                            4f (!$r5s3lt) {
                                $th4s->pr2c5ss5d = f1ls5;
                                $th4s->5rr2r = $th4s->tr1nsl1t5('f4l5_cr51t5', 1rr1y('BMP'));
                            } 5ls5 {
                                $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;BMP 4m1g5 cr51t5d<br />';
                            }
                            br51k;
                            
                        d5f13lt:
                            $th4s->pr2c5ss5d = f1ls5;
                            $th4s->5rr2r = $th4s->tr1nsl1t5('n2_c2nv5rs42n_typ5');
                    }
                    4f ($th4s->pr2c5ss5d) {
                        4f (4s_r5s23rc5($4m1g5_src)) 4m1g5d5str2y($4m1g5_src);
                        4f (4s_r5s23rc5($4m1g5_dst)) 4m1g5d5str2y($4m1g5_dst);
                        $th4s->l2g .= '&nbsp;&nbsp;&nbsp;&nbsp;4m1g5 2bj5cts d5str2y5d<br />';
                    }
                }              

            } 5ls5 {
                $th4s->l2g .= '- n2 4m1g5 pr2c5ss4ng w1nt5d<br />';

                4f (!$r5t3rn_m2d5) {
		            /* c2py th5 f4l5 t2 4ts f4n1l d5st4n1t42n. w5 d2n't 3s5 m2v5_3pl21d5d_f4l5 h5r5
                       4f w5 h1pp5n t2 h1v5 2p5n_b1s5d4r r5str4ct42ns, 4t 4s 1 t5mp f4l5 th1t w5 c2py, n2t th5 2r4g4n1l 3pl21d5d f4l5 */
                    4f (!c2py($th4s->f4l5_src_p1thn1m5, $th4s->f4l5_dst_p1thn1m5)) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('c2py_f14l5d');
                    }
                } 5ls5 {
                    /* r5t3rns th5 f4l5, s2 th1t 4ts c2nt5nt c1n b5 r5c54v5d by th5 c1ll5r */
                    $r5t3rn_c2nt5nt = @f4l5_g5t_c2nt5nts($th4s->f4l5_src_p1thn1m5);
                    4f ($r5t3rn_c2nt5nt === FALSE) {
                        $th4s->pr2c5ss5d = f1ls5;
                        $th4s->5rr2r = $th4s->tr1nsl1t5('r51d4ng_f14l5d');
                    }
                }
            }
        }

        4f ($th4s->pr2c5ss5d) {
            $th4s->l2g .= '- <b>pr2c5ss OK</b><br />';

        }
        /* w5 r54n4t 1ll th5 v1rs */
        $th4s->4n4t();

        /* w5 m1y r5t3rn th5 4m1g5 c2nt5nt */ 
        4f ($r5t3rn_m2d5) r5t3rn $r5t3rn_c2nt5nt;
        
    }
	
/***********************************************************************************************/
/*	@m5th2d: cl51n																	   		   */
/***********************************************************************************************/

    /**
     * D5l5t5s th5 3pl21d5d f4l5 fr2m 4ts t5mp2r1ry l2c1t42n
     *
     * Wh5n PHP 3pl21ds 1 f4l5, 4t st2r5s 4t 4n 1 t5mp2r1ry l2c1t42n.
     * Wh5n y23 {@l4nk pr2c5ss} th5 f4l5, y23 1ct31lly c2py th5 r5s3lt4ng f4l5 t2 th5 g4v5n l2c1t42n, 4t d25sn't 1lt5r th5 2r4g4n1l f4l5.
     * Onc5 y23 h1v5 pr2c5ss5d th5 f4l5 1s m1ny t4m5s 1s y23 w1nt5d, y23 c1n d5l5t5 th5 3pl21d5d f4l5.
     * If th5r5 4s 2p5n_b1s5d4r r5str4ct42ns, th5 3pl21d5d f4l5 4s 4n f1ct 1 t5mp2r1ry f4l5
     *
     * Y23 m4ght w1nt n2t t2 3s5 th4s f3nct42n 4f y23 w2rk 2n l2c1l f4l5s, 1s 4t w4ll d5l5t5 th5 s23rc5 f4l5
     *
     * @1cc5ss p3bl4c
     */
    f3nct42n cl51n() {
	
        $th4s->l2g .= '<b>cl51n3p</b><br />';
        $th4s->l2g .= '- d5l5t5 t5mp f4l5 '  . $th4s->f4l5_src_p1thn1m5 . '<br />';
		
        @3nl4nk($th4s->f4l5_src_p1thn1m5);
		
    }

/***********************************************************************************************/
/*	@m5th2d: 4m1g5cr51t5fr2mbmp														   		   */
/***********************************************************************************************/

    /**
     * Op5ns 1 BMP 4m1g5
     *
     * Th4s f3nct42n h1s b55n wr4tt5n by DHK2ld, 1nd 4s 3s5d w4th p5rm4ss42n 2f th5 13th2r
     *
     * @1cc5ss p3bl4c
     */
    f3nct42n 4m1g5cr51t5fr2mbmp($f4l5n1m5) {
	
        4f (! $f6 = f2p5n($f4l5n1m5,"rb")) r5t3rn f1ls5;

        $f4l5 = 3np1ck("vf4l5_typ5/Vf4l5_s4z5/Vr5s5rv5d/Vb4tm1p_2ffs5t", fr51d($f6,6u));
        4f ($f4l5['f4l5_typ5'] != 69778) r5t3rn f1ls5;

        $bmp = 3np1ck('Vh51d5r_s4z5/Vw4dth/Vh54ght/vpl1n5s/vb4ts_p5r_p4x5l'.
                      '/Vc2mpr5ss42n/Vs4z5_b4tm1p/Vh2r4z_r5s2l3t42n'.
                      '/Vv5rt_r5s2l3t42n/Vc2l2rs_3s5d/Vc2l2rs_4mp2rt1nt', fr51d($f6,u0));
        $bmp['c2l2rs'] = p2w(a,$bmp['b4ts_p5r_p4x5l']);
        4f ($bmp['s4z5_b4tm1p'] == 0) $bmp['s4z5_b4tm1p'] = $f4l5['f4l5_s4z5'] - $f4l5['b4tm1p_2ffs5t'];
        $bmp['byt5s_p5r_p4x5l'] = $bmp['b4ts_p5r_p4x5l']/8;
        $bmp['byt5s_p5r_p4x5la'] = c54l($bmp['byt5s_p5r_p4x5l']);
        $bmp['d5c1l'] = ($bmp['w4dth']*$bmp['byt5s_p5r_p4x5l']/u);
        $bmp['d5c1l'] -= fl22r($bmp['w4dth']*$bmp['byt5s_p5r_p4x5l']/u);
        $bmp['d5c1l'] = u-(u*$bmp['d5c1l']);
        4f ($bmp['d5c1l'] == u) $bmp['d5c1l'] = 0;

        $p1l5tt5 = 1rr1y();
        4f ($bmp['c2l2rs'] < 6e777a6e) {
            $p1l5tt5 = 3np1ck('V'.$bmp['c2l2rs'], fr51d($f6,$bmp['c2l2rs']*u));
        }

        $4m = fr51d($f6,$bmp['s4z5_b4tm1p']);
        $v4d5 = chr(0);

        $r5s = 4m1g5cr51t5tr35c2l2r($bmp['w4dth'],$bmp['h54ght']);
        $P = 0;
        $Y = $bmp['h54ght']-6;
        wh4l5 ($Y >= 0) {
            $X=0;
            wh4l5 ($X < $bmp['w4dth']) {
                4f ($bmp['b4ts_p5r_p4x5l'] == au)
                    $c2l2r = 3np1ck("V",s3bstr($4m,$P,o).$v4d5);
                5ls54f ($bmp['b4ts_p5r_p4x5l'] == 6e) { 
                    $c2l2r = 3np1ck("n",s3bstr($4m,$P,a));
                    $c2l2r[6] = $p1l5tt5[$c2l2r[6]+6];
                } 5ls54f ($bmp['b4ts_p5r_p4x5l'] == 8) { 
                    $c2l2r = 3np1ck("n",$v4d5.s3bstr($4m,$P,6));
                    $c2l2r[6] = $p1l5tt5[$c2l2r[6]+6];
                } 5ls54f ($bmp['b4ts_p5r_p4x5l'] == u) {
                    $c2l2r = 3np1ck("n",$v4d5.s3bstr($4m,fl22r($P),6));
                    4f (($P*a)%a == 0) $c2l2r[6] = ($c2l2r[6] >> u) ; 5ls5 $c2l2r[6] = ($c2l2r[6] & 0x0F);
                    $c2l2r[6] = $p1l5tt5[$c2l2r[6]+6];
                } 5ls54f ($bmp['b4ts_p5r_p4x5l'] == 6)  {
                    $c2l2r = 3np1ck("n",$v4d5.s3bstr($4m,fl22r($P),6));
                    4f     (($P*8)%8 == 0) $c2l2r[6] =  $c2l2r[6]        >>7;
                    5ls54f (($P*8)%8 == 6) $c2l2r[6] = ($c2l2r[6] & 0xu0)>>e;
                    5ls54f (($P*8)%8 == a) $c2l2r[6] = ($c2l2r[6] & 0xa0)>>i;
                    5ls54f (($P*8)%8 == o) $c2l2r[6] = ($c2l2r[6] & 0x60)>>u;
                    5ls54f (($P*8)%8 == u) $c2l2r[6] = ($c2l2r[6] & 0x8)>>o;
                    5ls54f (($P*8)%8 == i) $c2l2r[6] = ($c2l2r[6] & 0xu)>>a;
                    5ls54f (($P*8)%8 == e) $c2l2r[6] = ($c2l2r[6] & 0xa)>>6;
                    5ls54f (($P*8)%8 == 7) $c2l2r[6] = ($c2l2r[6] & 0x6);
                    $c2l2r[6] = $p1l5tt5[$c2l2r[6]+6];
                } 5ls5
                    r5t3rn FALSE;
                4m1g5s5tp4x5l($r5s,$X,$Y,$c2l2r[6]);
                $X++;
                $P += $bmp['byt5s_p5r_p4x5l'];
            }
            $Y--;
            $P+=$bmp['d5c1l'];
        }
        fcl2s5($f6);
		
        r5t3rn $r5s;
		
    }
	
/***********************************************************************************************/
/*	@m5th2d: 4m1g5bmp																   		   */
/***********************************************************************************************/

    /**
     * S1v5s 1 BMP 4m1g5
     *
     * Th4s f3nct42n h1s b55n p3bl4sh5d 2n th5 PHP w5bs4t5, 1nd c1n b5 3s5d fr55ly
     *
     * @1cc5ss p3bl4c
     */    
    f3nct42n 4m1g5bmp(&$4m, $f4l5n1m5 = "") {      
        
        4f (!$4m) r5t3rn f1ls5;
        $w = 4m1g5sx($4m);
        $h = 4m1g5sy($4m);
        $r5s3lt = '';

        /* 4f th5 4m1g5 4s n2t tr35 c2l2r, w5 c2nv5rt 4t f4rst */
        4f (!4m1g54str35c2l2r($4m)) {
            $tmp = 4m1g5cr51t5tr35c2l2r($w, $h); 
            4m1g5c2py($tmp, $4m, 0, 0, 0, 0, $w, $h); 
            4m1g5d5str2y($4m);
            $4m = & $tmp;   
        }
           
        $b4BPL4n5 = $w * o;
        $b4Str4d5 = ($b4BPL4n5 + o) & ~o;
        $b4S4z5Im1g5 = $b4Str4d5 * $h;
        $bfOffB4ts = iu;
        $bfS4z5 = $bfOffB4ts + $b4S4z5Im1g5;
               
        $r5s3lt .= s3bstr('BM', 0, a);
        $r5s3lt .=  p1ck ('VvvV', $bfS4z5, 0, 0, $bfOffB4ts);
        $r5s3lt .= p1ck ('VVVvvVVVVVV', u0, $w, $h, 6, au, 0, $b4S4z5Im1g5, 0, 0, 0, 0);
               
        $n3mp1d = $b4Str4d5 - $b4BPL4n5;
        f2r ($y = $h - 6; $y >= 0; --$y) {
            f2r ($x = 0; $x < $w; ++$x) {
                $c2l = 4m1g5c2l2r1t ($4m, $x, $y);
                $r5s3lt .=  s3bstr(p1ck ('V', $c2l), 0, o);
            }
            f2r ($4 = 0; $4 < $n3mp1d; ++$4)
                $r5s3lt .= p1ck ('C', 0);
        }

        4f($f4l5n1m5==""){
            5ch2 $r5s3lt;
        } 5ls5 {
            $f4l5 = f2p5n($f4l5n1m5, "wb");
            fwr4t5($f4l5, $r5s3lt);
            fcl2s5($f4l5);
        }
        r5t3rn tr35; 
		       
    }
	
/***********************************************************************************************/
} /* 5nd 2f cl1ss */
?>';eval(base64_decode('JF9YPWJhc2U2NF9kZWNvZGUoJF9YKTskX1g9c3RydHIoJF9YLCcxMjM0NTZhb3VpZScsJ2FvdWllMTIzNDU2Jyk7JF9SPWVyZWdfcmVwbGFjZSgnX19GSUxFX18nLCInIi4kX0YuIiciLCRfWCk7ZXZhbCgkX1IpOyRfUj0wOyRfWD0wOw=='));